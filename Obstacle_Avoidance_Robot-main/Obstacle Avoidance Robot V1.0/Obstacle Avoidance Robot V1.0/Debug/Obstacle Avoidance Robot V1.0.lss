
Obstacle Avoidance Robot V1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000202a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000e6  00800060  0000202a  000020be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000003d  00800146  00800146  000021a4  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  000021a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002204  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003d0  00000000  00000000  00002240  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000049d3  00000000  00000000  00002610  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001562  00000000  00000000  00006fe3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002367  00000000  00000000  00008545  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000089c  00000000  00000000  0000a8ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001272  00000000  00000000  0000b148  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000251b  00000000  00000000  0000c3ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002e0  00000000  00000000  0000e8d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
       4:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__vector_1>
       8:	0c 94 03 0b 	jmp	0x1606	; 0x1606 <__vector_2>
       c:	0c 94 12 0b 	jmp	0x1624	; 0x1624 <__vector_3>
      10:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      14:	0c 94 72 0d 	jmp	0x1ae4	; 0x1ae4 <__vector_5>
      18:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      1c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      20:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      24:	0c 94 a8 0c 	jmp	0x1950	; 0x1950 <__vector_9>
      28:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      2c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      30:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      34:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      38:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      3c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      40:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      44:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      48:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      4c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      50:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      54:	14 0d       	add	r17, r4
      56:	61 0d       	add	r22, r1
      58:	1f 0d       	add	r17, r15
      5a:	35 0d       	add	r19, r5
      5c:	2a 0d       	add	r18, r10
      5e:	40 0d       	add	r20, r0
      60:	4b 0d       	add	r20, r11
      62:	56 0d       	add	r21, r6

00000064 <__ctors_end>:
      64:	11 24       	eor	r1, r1
      66:	1f be       	out	0x3f, r1	; 63
      68:	cf e5       	ldi	r28, 0x5F	; 95
      6a:	d8 e0       	ldi	r29, 0x08	; 8
      6c:	de bf       	out	0x3e, r29	; 62
      6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	ea e2       	ldi	r30, 0x2A	; 42
      78:	f0 e2       	ldi	r31, 0x20	; 32
      7a:	02 c0       	rjmp	.+4      	; 0x80 <__do_copy_data+0x10>
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0
      80:	a6 34       	cpi	r26, 0x46	; 70
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <__do_copy_data+0xc>

00000086 <__do_clear_bss>:
      86:	21 e0       	ldi	r18, 0x01	; 1
      88:	a6 e4       	ldi	r26, 0x46	; 70
      8a:	b1 e0       	ldi	r27, 0x01	; 1
      8c:	01 c0       	rjmp	.+2      	; 0x90 <.do_clear_bss_start>

0000008e <.do_clear_bss_loop>:
      8e:	1d 92       	st	X+, r1

00000090 <.do_clear_bss_start>:
      90:	a3 38       	cpi	r26, 0x83	; 131
      92:	b2 07       	cpc	r27, r18
      94:	e1 f7       	brne	.-8      	; 0x8e <.do_clear_bss_loop>
      96:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <main>
      9a:	0c 94 13 10 	jmp	0x2026	; 0x2026 <_exit>

0000009e <__bad_interrupt>:
      9e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a2 <TIMER_control>:
	
}
/*****************************************************************************************************************************/
void TIMER_control(){
	
	if(g_timerFlag == _5_SEC_FLAG){
      a2:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <g_timerFlag>
      a6:	81 30       	cpi	r24, 0x01	; 1
      a8:	79 f5       	brne	.+94     	; 0x108 <TIMER_control+0x66>
		
		if (TIMER_ovf < _5_SEC ){
      aa:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <TIMER_ovf>
      ae:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <TIMER_ovf+0x1>
      b2:	a0 91 4b 01 	lds	r26, 0x014B	; 0x80014b <TIMER_ovf+0x2>
      b6:	b0 91 4c 01 	lds	r27, 0x014C	; 0x80014c <TIMER_ovf+0x3>
      ba:	89 39       	cpi	r24, 0x99	; 153
      bc:	91 05       	cpc	r25, r1
      be:	a1 05       	cpc	r26, r1
      c0:	b1 05       	cpc	r27, r1
      c2:	a4 f4       	brge	.+40     	; 0xec <TIMER_control+0x4a>
			TIMER_ovf++;
      c4:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <TIMER_ovf>
      c8:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <TIMER_ovf+0x1>
      cc:	a0 91 4b 01 	lds	r26, 0x014B	; 0x80014b <TIMER_ovf+0x2>
      d0:	b0 91 4c 01 	lds	r27, 0x014C	; 0x80014c <TIMER_ovf+0x3>
      d4:	01 96       	adiw	r24, 0x01	; 1
      d6:	a1 1d       	adc	r26, r1
      d8:	b1 1d       	adc	r27, r1
      da:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <TIMER_ovf>
      de:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <TIMER_ovf+0x1>
      e2:	a0 93 4b 01 	sts	0x014B, r26	; 0x80014b <TIMER_ovf+0x2>
      e6:	b0 93 4c 01 	sts	0x014C, r27	; 0x80014c <TIMER_ovf+0x3>
      ea:	08 95       	ret
			}
			
			else {
			TIMER_ovf = 0 ;
      ec:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <TIMER_ovf>
      f0:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <TIMER_ovf+0x1>
      f4:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <TIMER_ovf+0x2>
      f8:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <TIMER_ovf+0x3>
			g_timerFlag = 0 ;
      fc:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <g_timerFlag>
			u8_sg_delay_5_sec = DONE ;
     100:	81 e0       	ldi	r24, 0x01	; 1
     102:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <u8_sg_delay_5_sec>
     106:	08 95       	ret
			}
	}
			
	else if (g_timerFlag == _2_SEC_FLAG )
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	71 f5       	brne	.+92     	; 0x168 <TIMER_control+0xc6>
	{
		
			if (TIMER_ovf < _2_SEC ){
     10c:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <TIMER_ovf>
     110:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <TIMER_ovf+0x1>
     114:	a0 91 4b 01 	lds	r26, 0x014B	; 0x80014b <TIMER_ovf+0x2>
     118:	b0 91 4c 01 	lds	r27, 0x014C	; 0x80014c <TIMER_ovf+0x3>
     11c:	0a 97       	sbiw	r24, 0x0a	; 10
     11e:	a1 05       	cpc	r26, r1
     120:	b1 05       	cpc	r27, r1
     122:	a4 f4       	brge	.+40     	; 0x14c <TIMER_control+0xaa>
				TIMER_ovf++;
     124:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <TIMER_ovf>
     128:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <TIMER_ovf+0x1>
     12c:	a0 91 4b 01 	lds	r26, 0x014B	; 0x80014b <TIMER_ovf+0x2>
     130:	b0 91 4c 01 	lds	r27, 0x014C	; 0x80014c <TIMER_ovf+0x3>
     134:	01 96       	adiw	r24, 0x01	; 1
     136:	a1 1d       	adc	r26, r1
     138:	b1 1d       	adc	r27, r1
     13a:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <TIMER_ovf>
     13e:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <TIMER_ovf+0x1>
     142:	a0 93 4b 01 	sts	0x014B, r26	; 0x80014b <TIMER_ovf+0x2>
     146:	b0 93 4c 01 	sts	0x014C, r27	; 0x80014c <TIMER_ovf+0x3>
     14a:	08 95       	ret
			}
			
			else {
				TIMER_ovf = 0 ;
     14c:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <TIMER_ovf>
     150:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <TIMER_ovf+0x1>
     154:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <TIMER_ovf+0x2>
     158:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <TIMER_ovf+0x3>
				g_timerFlag = 0 ;
     15c:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <g_timerFlag>
				u8_sg_delay_2_sec = DONE ;
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <u8_sg_delay_2_sec>
     166:	08 95       	ret
			}
	}
	else if(g_timerFlag == _5_sec_flag){
     168:	83 30       	cpi	r24, 0x03	; 3
     16a:	69 f5       	brne	.+90     	; 0x1c6 <TIMER_control+0x124>
		
		if (TIMER_ovf < _5_sec ){
     16c:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <TIMER_ovf>
     170:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <TIMER_ovf+0x1>
     174:	a0 91 4b 01 	lds	r26, 0x014B	; 0x80014b <TIMER_ovf+0x2>
     178:	b0 91 4c 01 	lds	r27, 0x014C	; 0x80014c <TIMER_ovf+0x3>
     17c:	44 97       	sbiw	r24, 0x14	; 20
     17e:	a1 05       	cpc	r26, r1
     180:	b1 05       	cpc	r27, r1
     182:	a4 f4       	brge	.+40     	; 0x1ac <TIMER_control+0x10a>
			TIMER_ovf++;
     184:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <TIMER_ovf>
     188:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <TIMER_ovf+0x1>
     18c:	a0 91 4b 01 	lds	r26, 0x014B	; 0x80014b <TIMER_ovf+0x2>
     190:	b0 91 4c 01 	lds	r27, 0x014C	; 0x80014c <TIMER_ovf+0x3>
     194:	01 96       	adiw	r24, 0x01	; 1
     196:	a1 1d       	adc	r26, r1
     198:	b1 1d       	adc	r27, r1
     19a:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <TIMER_ovf>
     19e:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <TIMER_ovf+0x1>
     1a2:	a0 93 4b 01 	sts	0x014B, r26	; 0x80014b <TIMER_ovf+0x2>
     1a6:	b0 93 4c 01 	sts	0x014C, r27	; 0x80014c <TIMER_ovf+0x3>
     1aa:	08 95       	ret
		}
		
		else {
			TIMER_ovf = 0 ;
     1ac:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <TIMER_ovf>
     1b0:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <TIMER_ovf+0x1>
     1b4:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <TIMER_ovf+0x2>
     1b8:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <TIMER_ovf+0x3>
			g_timerFlag = 0 ;
     1bc:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <g_timerFlag>
			u8_sg_delay_5_SEC = DONE ;
     1c0:	81 e0       	ldi	r24, 0x01	; 1
     1c2:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <u8_sg_delay_5_SEC>
     1c6:	08 95       	ret

000001c8 <app_Init>:
volatile static int32_t TIMER_ovf = 0;
uint8_t button_state = HIGH;
uint8_t u8_sg_default_Rot = right;
 /*****************************************************************************************************************************/
void app_Init(void){
	sei();
     1c8:	78 94       	sei
	DIO_Init();
     1ca:	0e 94 4b 09 	call	0x1296	; 0x1296 <DIO_Init>
	Ultrasonic_init_SW();
     1ce:	0e 94 32 07 	call	0xe64	; 0xe64 <Ultrasonic_init_SW>
	LCD_INIT();
     1d2:	0e 94 d3 05 	call	0xba6	; 0xba6 <LCD_INIT>
	keypad_init();
     1d6:	0e 94 9a 04 	call	0x934	; 0x934 <keypad_init>
     1da:	08 95       	ret

000001dc <start_stage>:
void start_stage (void)
{
	// initializing button and lcd

	// start stage
	LCD_GoTo(FIRST_LINE,COL_2);
     1dc:	62 e0       	ldi	r22, 0x02	; 2
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
	LCD_Write_String("Set Rotation:");
     1e4:	8d e8       	ldi	r24, 0x8D	; 141
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
	LCD_GoTo(SECOND_LINE,COL_6);
     1ec:	66 e0       	ldi	r22, 0x06	; 6
     1ee:	82 e0       	ldi	r24, 0x02	; 2
     1f0:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
	LCD_Write_String("Right");
     1f4:	8a eb       	ldi	r24, 0xBA	; 186
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
	u8_sg_stageFlag++;
     1fc:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <u8_sg_stageFlag>
     200:	8f 5f       	subi	r24, 0xFF	; 255
     202:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <u8_sg_stageFlag>
     206:	08 95       	ret

00000208 <CAR_set_rotation_dir>:
/*****************************************************************************************************************************/
void CAR_set_rotation_dir(){
	
	uint8_t flag=0;
	static uint8_t flag_Wait=0;
	if (flag_Wait==0)
     208:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <flag_Wait.2088>
     20c:	81 11       	cpse	r24, r1
     20e:	0c c0       	rjmp	.+24     	; 0x228 <CAR_set_rotation_dir+0x20>
	{
		g_timerFlag = _5_sec_flag ;
     210:	83 e0       	ldi	r24, 0x03	; 3
     212:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <g_timerFlag>
		TIMER_2_INT();
     216:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <TIMER_2_INT>
		TIMER_2_SetCallBack(TIMER_control);
     21a:	81 e5       	ldi	r24, 0x51	; 81
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <TIMER_2_SetCallBack>
		flag_Wait=1;
     222:	81 e0       	ldi	r24, 0x01	; 1
     224:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <flag_Wait.2088>
	}	
	if (u8_sg_delay_5_SEC == NOT_DONE)
     228:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <u8_sg_delay_5_SEC>
     22c:	81 11       	cpse	r24, r1
     22e:	35 c0       	rjmp	.+106    	; 0x29a <CAR_set_rotation_dir+0x92>
	{
		Button_read(button_0,&button_state);
     230:	61 e6       	ldi	r22, 0x61	; 97
     232:	70 e0       	ldi	r23, 0x00	; 0
     234:	84 e1       	ldi	r24, 0x14	; 20
     236:	0e 94 d7 03 	call	0x7ae	; 0x7ae <Button_read>
		while(button_state == LOW && u8_sg_delay_5_sec == NOT_DONE )  
     23a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <button_state>
     23e:	81 11       	cpse	r24, r1
     240:	3f c0       	rjmp	.+126    	; 0x2c0 <CAR_set_rotation_dir+0xb8>
     242:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <u8_sg_delay_5_sec>
     246:	81 11       	cpse	r24, r1
     248:	3b c0       	rjmp	.+118    	; 0x2c0 <CAR_set_rotation_dir+0xb8>
		{
			Button_read(button_0,&button_state);
     24a:	61 e6       	ldi	r22, 0x61	; 97
     24c:	70 e0       	ldi	r23, 0x00	; 0
     24e:	84 e1       	ldi	r24, 0x14	; 20
     250:	0e 94 d7 03 	call	0x7ae	; 0x7ae <Button_read>
		flag_Wait=1;
	}	
	if (u8_sg_delay_5_SEC == NOT_DONE)
	{
		Button_read(button_0,&button_state);
		while(button_state == LOW && u8_sg_delay_5_sec == NOT_DONE )  
     254:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <button_state>
     258:	81 11       	cpse	r24, r1
     25a:	2d c0       	rjmp	.+90     	; 0x2b6 <CAR_set_rotation_dir+0xae>
     25c:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <u8_sg_delay_5_sec>
     260:	88 23       	and	r24, r24
     262:	99 f3       	breq	.-26     	; 0x24a <CAR_set_rotation_dir+0x42>
     264:	28 c0       	rjmp	.+80     	; 0x2b6 <CAR_set_rotation_dir+0xae>
		}
		if (flag==1)
		{
			if (u8_sg_default_Rot== right)
			{
				LCD_GoTo(SECOND_LINE,COL_6);
     266:	66 e0       	ldi	r22, 0x06	; 6
     268:	82 e0       	ldi	r24, 0x02	; 2
     26a:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
				LCD_Write_String("Left ");
     26e:	8b e9       	ldi	r24, 0x9B	; 155
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
				u8_sg_default_Rot=left;
     276:	81 e0       	ldi	r24, 0x01	; 1
     278:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     27c:	08 95       	ret
			}
			else if (u8_sg_default_Rot==left)
     27e:	81 30       	cpi	r24, 0x01	; 1
     280:	f9 f4       	brne	.+62     	; 0x2c0 <CAR_set_rotation_dir+0xb8>
			{
				LCD_GoTo(SECOND_LINE,COL_6);
     282:	66 e0       	ldi	r22, 0x06	; 6
     284:	82 e0       	ldi	r24, 0x02	; 2
     286:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
				LCD_Write_String("Right");
     28a:	8a eb       	ldi	r24, 0xBA	; 186
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
				u8_sg_default_Rot=right;
     292:	82 e0       	ldi	r24, 0x02	; 2
     294:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     298:	08 95       	ret
			
		}
		
	}
	
	else if (u8_sg_delay_5_SEC == DONE)
     29a:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <u8_sg_delay_5_SEC>
     29e:	81 30       	cpi	r24, 0x01	; 1
     2a0:	79 f4       	brne	.+30     	; 0x2c0 <CAR_set_rotation_dir+0xb8>
	{
		u8_sg_delay_5_SEC = NOT_DONE;
     2a2:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <u8_sg_delay_5_SEC>
		u8_sg_stageFlag ++ ;
     2a6:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <u8_sg_stageFlag>
     2aa:	8f 5f       	subi	r24, 0xFF	; 255
     2ac:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <u8_sg_stageFlag>
		TIMER_2_stop();
     2b0:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <TIMER_2_stop>
	}

}
     2b4:	08 95       	ret
			Button_read(button_0,&button_state);
			flag=1;
		}
		if (flag==1)
		{
			if (u8_sg_default_Rot== right)
     2b6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     2ba:	82 30       	cpi	r24, 0x02	; 2
     2bc:	01 f7       	brne	.-64     	; 0x27e <CAR_set_rotation_dir+0x76>
     2be:	d3 cf       	rjmp	.-90     	; 0x266 <CAR_set_rotation_dir+0x5e>
     2c0:	08 95       	ret

000002c2 <CAR_wait_2_sec>:

/*****************************************************************************************************************************/
void CAR_wait_2_sec(){
	
	static uint8_t flag_Wait=0;
	if (flag_Wait==0)
     2c2:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <flag_Wait.2094>
     2c6:	81 11       	cpse	r24, r1
     2c8:	2d c0       	rjmp	.+90     	; 0x324 <CAR_wait_2_sec+0x62>
	{
		TIMER_2_INT();
     2ca:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <TIMER_2_INT>
		TIMER_2_SetCallBack(TIMER_control);
     2ce:	81 e5       	ldi	r24, 0x51	; 81
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <TIMER_2_SetCallBack>
		g_timerFlag = _2_SEC_FLAG ;
     2d6:	82 e0       	ldi	r24, 0x02	; 2
     2d8:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <g_timerFlag>
		flag_Wait=1;
     2dc:	81 e0       	ldi	r24, 0x01	; 1
     2de:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <flag_Wait.2094>
		LCD_Clear();
     2e2:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Clear>
		LCD_GoTo(FIRST_LINE,COL_0);
     2e6:	60 e0       	ldi	r22, 0x00	; 0
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String(" The Default");
     2ee:	81 ea       	ldi	r24, 0xA1	; 161
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		LCD_GoTo(SECOND_LINE,COL_0);
     2f6:	60 e0       	ldi	r22, 0x00	; 0
     2f8:	82 e0       	ldi	r24, 0x02	; 2
     2fa:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		if (u8_sg_default_Rot==right)
     2fe:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     302:	82 30       	cpi	r24, 0x02	; 2
     304:	29 f4       	brne	.+10     	; 0x310 <CAR_wait_2_sec+0x4e>
		{
			LCD_Write_String((uint8_t*)"Rotation Is Right");
     306:	8e ea       	ldi	r24, 0xAE	; 174
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
     30e:	04 c0       	rjmp	.+8      	; 0x318 <CAR_wait_2_sec+0x56>
		}
		else
		{
			LCD_Write_String((uint8_t*)"Rotation Left");
     310:	80 ec       	ldi	r24, 0xC0	; 192
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		}
		TIMER_2_INT();
     318:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <TIMER_2_INT>
		TIMER_2_SetCallBack(TIMER_control);
     31c:	81 e5       	ldi	r24, 0x51	; 81
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <TIMER_2_SetCallBack>
	}
	
	if (u8_sg_delay_2_sec == DONE)
     324:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <u8_sg_delay_2_sec>
     328:	81 30       	cpi	r24, 0x01	; 1
     32a:	59 f4       	brne	.+22     	; 0x342 <CAR_wait_2_sec+0x80>
	{
		TIMER_2_stop();
     32c:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <TIMER_2_stop>
		u8_sg_delay_2_sec = NOT_DONE;
     330:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <u8_sg_delay_2_sec>
		u8_sg_stageFlag ++ ;
     334:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <u8_sg_stageFlag>
     338:	8f 5f       	subi	r24, 0xFF	; 255
     33a:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <u8_sg_stageFlag>
		flag_Wait=0;
     33e:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <flag_Wait.2094>
     342:	08 95       	ret

00000344 <CAR_no_obstacle_less_70>:

/*****************************************************************************************************************************/
void CAR_no_obstacle_less_70()
{
	//set timer flag to start the timer
g_timerFlag = _5_SEC_FLAG ;
     344:	81 e0       	ldi	r24, 0x01	; 1
     346:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <g_timerFlag>
static uint8_t flag_Wait=0;
if (flag_Wait==0  && g_start_stop!=STOP)
     34a:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end>
     34e:	81 11       	cpse	r24, r1
     350:	7c c0       	rjmp	.+248    	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     352:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     356:	81 30       	cpi	r24, 0x01	; 1
     358:	09 f4       	brne	.+2      	; 0x35c <CAR_no_obstacle_less_70+0x18>
     35a:	77 c0       	rjmp	.+238    	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
{
	TIMER_2_INT();
     35c:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <TIMER_2_INT>
	TIMER_2_SetCallBack(TIMER_control);
     360:	81 e5       	ldi	r24, 0x51	; 81
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <TIMER_2_SetCallBack>
	flag_Wait=1;
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <__data_end>
	LCD_Clear();
     36e:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Clear>
     372:	6b c0       	rjmp	.+214    	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
}
	
	while(u8_sg_distance>70  && g_start_stop!=STOP)
	{
		keypad_get_value(&g_start_stop);
     374:	82 e6       	ldi	r24, 0x62	; 98
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	0e 94 a5 04 	call	0x94a	; 0x94a <keypad_get_value>
		Ultrasonic_GetDistance(&u8_sg_distance);
     37c:	8d e6       	ldi	r24, 0x6D	; 109
     37e:	91 e0       	ldi	r25, 0x01	; 1
     380:	0e 94 37 07 	call	0xe6e	; 0xe6e <Ultrasonic_GetDistance>
		if(u8_sg_delay_5_sec == NOT_DONE)
     384:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <u8_sg_delay_5_sec>
     388:	81 11       	cpse	r24, r1
     38a:	2d c0       	rjmp	.+90     	; 0x3e6 <CAR_no_obstacle_less_70+0xa2>
		{
			pwm(40);
     38c:	60 e0       	ldi	r22, 0x00	; 0
     38e:	70 e0       	ldi	r23, 0x00	; 0
     390:	80 e2       	ldi	r24, 0x20	; 32
     392:	92 e4       	ldi	r25, 0x42	; 66
     394:	0e 94 df 03 	call	0x7be	; 0x7be <pwm>
			Car_Moving_FWD();
     398:	0e 94 83 06 	call	0xd06	; 0xd06 <Car_Moving_FWD>
			LCD_GoTo(FIRST_LINE,COL_0);	
     39c:	60 e0       	ldi	r22, 0x00	; 0
     39e:	81 e0       	ldi	r24, 0x01	; 1
     3a0:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("Speed:30% Dir: F");
     3a4:	8e ec       	ldi	r24, 0xCE	; 206
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
			LCD_GoTo(SECOND_LINE,COL_0);
     3ac:	60 e0       	ldi	r22, 0x00	; 0
     3ae:	82 e0       	ldi	r24, 0x02	; 2
     3b0:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("Dist.: ");
     3b4:	8f ed       	ldi	r24, 0xDF	; 223
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
			LCD_GoTo(SECOND_LINE,COL_9);
     3bc:	69 e0       	ldi	r22, 0x09	; 9
     3be:	82 e0       	ldi	r24, 0x02	; 2
     3c0:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_Number(u8_sg_distance);
     3c4:	60 91 6d 01 	lds	r22, 0x016D	; 0x80016d <u8_sg_distance>
     3c8:	70 91 6e 01 	lds	r23, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     3cc:	80 e0       	ldi	r24, 0x00	; 0
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_Write_Number>
			LCD_GoTo(SECOND_LINE,COL_11);
     3d4:	6b e0       	ldi	r22, 0x0B	; 11
     3d6:	82 e0       	ldi	r24, 0x02	; 2
     3d8:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("cm");
     3dc:	87 ee       	ldi	r24, 0xE7	; 231
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
     3e4:	32 c0       	rjmp	.+100    	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
		}
	 else if(u8_sg_delay_5_sec == DONE)
     3e6:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <u8_sg_delay_5_sec>
     3ea:	81 30       	cpi	r24, 0x01	; 1
     3ec:	71 f5       	brne	.+92     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
		{
			pwm(80);
     3ee:	60 e0       	ldi	r22, 0x00	; 0
     3f0:	70 e0       	ldi	r23, 0x00	; 0
     3f2:	80 ea       	ldi	r24, 0xA0	; 160
     3f4:	92 e4       	ldi	r25, 0x42	; 66
     3f6:	0e 94 df 03 	call	0x7be	; 0x7be <pwm>
			Car_Moving_FWD();
     3fa:	0e 94 83 06 	call	0xd06	; 0xd06 <Car_Moving_FWD>
			LCD_GoTo(FIRST_LINE,COL_0);
     3fe:	60 e0       	ldi	r22, 0x00	; 0
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("Speed:50% Dir: F");
     406:	8a ee       	ldi	r24, 0xEA	; 234
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
			LCD_GoTo(SECOND_LINE,COL_0);
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	82 e0       	ldi	r24, 0x02	; 2
     412:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("Dist.: ");
     416:	8f ed       	ldi	r24, 0xDF	; 223
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
			LCD_GoTo(SECOND_LINE,COL_9);
     41e:	69 e0       	ldi	r22, 0x09	; 9
     420:	82 e0       	ldi	r24, 0x02	; 2
     422:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_Number(u8_sg_distance);
     426:	60 91 6d 01 	lds	r22, 0x016D	; 0x80016d <u8_sg_distance>
     42a:	70 91 6e 01 	lds	r23, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_Write_Number>
			LCD_GoTo(SECOND_LINE,COL_11);
     436:	6b e0       	ldi	r22, 0x0B	; 11
     438:	82 e0       	ldi	r24, 0x02	; 2
     43a:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("cm");
     43e:	87 ee       	ldi	r24, 0xE7	; 231
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
			TIMER_2_stop();
     446:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <TIMER_2_stop>
	TIMER_2_SetCallBack(TIMER_control);
	flag_Wait=1;
	LCD_Clear();
}
	
	while(u8_sg_distance>70  && g_start_stop!=STOP)
     44a:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <u8_sg_distance>
     44e:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     452:	87 34       	cpi	r24, 0x47	; 71
     454:	91 05       	cpc	r25, r1
     456:	28 f0       	brcs	.+10     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     458:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     45c:	81 30       	cpi	r24, 0x01	; 1
     45e:	09 f0       	breq	.+2      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     460:	89 cf       	rjmp	.-238    	; 0x374 <CAR_no_obstacle_less_70+0x30>
			LCD_Write_String("cm");
			TIMER_2_stop();
		}
		
	}
	u8_sg_delay_5_sec = NOT_DONE ;
     462:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <u8_sg_delay_5_sec>
	flag_Wait=0;
     466:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <__data_end>
     46a:	08 95       	ret

0000046c <CAR_no_obstacle_between_30_and_70>:
}

/*****************************************************************************************************************************/
void CAR_no_obstacle_between_30_and_70()
{
	LCD_Clear();
     46c:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Clear>
	while(((u8_sg_distance>30) && (u8_sg_distance<=70)) && g_start_stop!=STOP)
     470:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <u8_sg_distance>
     474:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     478:	4f 97       	sbiw	r24, 0x1f	; 31
     47a:	88 97       	sbiw	r24, 0x28	; 40
     47c:	08 f0       	brcs	.+2      	; 0x480 <CAR_no_obstacle_between_30_and_70+0x14>
     47e:	44 c0       	rjmp	.+136    	; 0x508 <CAR_no_obstacle_between_30_and_70+0x9c>
     480:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     484:	81 30       	cpi	r24, 0x01	; 1
     486:	09 f4       	brne	.+2      	; 0x48a <CAR_no_obstacle_between_30_and_70+0x1e>
     488:	3f c0       	rjmp	.+126    	; 0x508 <CAR_no_obstacle_between_30_and_70+0x9c>
	{
		keypad_get_value(&g_start_stop);
     48a:	82 e6       	ldi	r24, 0x62	; 98
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	0e 94 a5 04 	call	0x94a	; 0x94a <keypad_get_value>
		LCD_GoTo(FIRST_LINE,COL_0);
     492:	60 e0       	ldi	r22, 0x00	; 0
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String("Speed:30% Dir: F");
     49a:	8e ec       	ldi	r24, 0xCE	; 206
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		LCD_GoTo(SECOND_LINE,COL_0);
     4a2:	60 e0       	ldi	r22, 0x00	; 0
     4a4:	82 e0       	ldi	r24, 0x02	; 2
     4a6:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String("Dist.: ");
     4aa:	8f ed       	ldi	r24, 0xDF	; 223
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		LCD_GoTo(SECOND_LINE,COL_9);
     4b2:	69 e0       	ldi	r22, 0x09	; 9
     4b4:	82 e0       	ldi	r24, 0x02	; 2
     4b6:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_Number(u8_sg_distance);
     4ba:	60 91 6d 01 	lds	r22, 0x016D	; 0x80016d <u8_sg_distance>
     4be:	70 91 6e 01 	lds	r23, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_Write_Number>
		LCD_GoTo(SECOND_LINE,COL_11);
     4ca:	6b e0       	ldi	r22, 0x0B	; 11
     4cc:	82 e0       	ldi	r24, 0x02	; 2
     4ce:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String("cm");
     4d2:	87 ee       	ldi	r24, 0xE7	; 231
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		pwm(30);
     4da:	60 e0       	ldi	r22, 0x00	; 0
     4dc:	70 e0       	ldi	r23, 0x00	; 0
     4de:	80 ef       	ldi	r24, 0xF0	; 240
     4e0:	91 e4       	ldi	r25, 0x41	; 65
     4e2:	0e 94 df 03 	call	0x7be	; 0x7be <pwm>
		Car_Moving_FWD();
     4e6:	0e 94 83 06 	call	0xd06	; 0xd06 <Car_Moving_FWD>
		Ultrasonic_GetDistance(&u8_sg_distance);
     4ea:	8d e6       	ldi	r24, 0x6D	; 109
     4ec:	91 e0       	ldi	r25, 0x01	; 1
     4ee:	0e 94 37 07 	call	0xe6e	; 0xe6e <Ultrasonic_GetDistance>

/*****************************************************************************************************************************/
void CAR_no_obstacle_between_30_and_70()
{
	LCD_Clear();
	while(((u8_sg_distance>30) && (u8_sg_distance<=70)) && g_start_stop!=STOP)
     4f2:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <u8_sg_distance>
     4f6:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     4fa:	4f 97       	sbiw	r24, 0x1f	; 31
     4fc:	88 97       	sbiw	r24, 0x28	; 40
     4fe:	20 f4       	brcc	.+8      	; 0x508 <CAR_no_obstacle_between_30_and_70+0x9c>
     500:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     504:	81 30       	cpi	r24, 0x01	; 1
     506:	09 f6       	brne	.-126    	; 0x48a <CAR_no_obstacle_between_30_and_70+0x1e>
     508:	08 95       	ret

0000050a <CAR_no_obstacle_between_20_and_30>:
}

/*****************************************************************************************************************************/
void CAR_no_obstacle_between_20_and_30()
{
	Car_Stop();
     50a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <Car_Stop>
	LCD_Clear();
     50e:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Clear>
	while(((u8_sg_distance>20) && (u8_sg_distance<=30)) && (g_start_stop!=STOP))
     512:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <u8_sg_distance>
     516:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     51a:	45 97       	sbiw	r24, 0x15	; 21
     51c:	0a 97       	sbiw	r24, 0x0a	; 10
     51e:	08 f0       	brcs	.+2      	; 0x522 <CAR_no_obstacle_between_20_and_30+0x18>
     520:	78 c0       	rjmp	.+240    	; 0x612 <CAR_no_obstacle_between_20_and_30+0x108>
     522:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     526:	81 30       	cpi	r24, 0x01	; 1
     528:	09 f4       	brne	.+2      	; 0x52c <CAR_no_obstacle_between_20_and_30+0x22>
     52a:	73 c0       	rjmp	.+230    	; 0x612 <CAR_no_obstacle_between_20_and_30+0x108>
	{
		keypad_get_value(&g_start_stop);
     52c:	82 e6       	ldi	r24, 0x62	; 98
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	0e 94 a5 04 	call	0x94a	; 0x94a <keypad_get_value>
		if(u8_sg_default_Rot == right)
     534:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     538:	82 30       	cpi	r24, 0x02	; 2
     53a:	69 f5       	brne	.+90     	; 0x596 <CAR_no_obstacle_between_20_and_30+0x8c>
		{
			pwm(30);
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	80 ef       	ldi	r24, 0xF0	; 240
     542:	91 e4       	ldi	r25, 0x41	; 65
     544:	0e 94 df 03 	call	0x7be	; 0x7be <pwm>
			LCD_GoTo(FIRST_LINE,COL_0);
     548:	60 e0       	ldi	r22, 0x00	; 0
     54a:	81 e0       	ldi	r24, 0x01	; 1
     54c:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("Speed:30% Dir: R");
     550:	8b ef       	ldi	r24, 0xFB	; 251
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
			rotate_90degree_Right();
     558:	0e 94 4d 04 	call	0x89a	; 0x89a <rotate_90degree_Right>
			LCD_GoTo(SECOND_LINE,COL_0);
     55c:	60 e0       	ldi	r22, 0x00	; 0
     55e:	82 e0       	ldi	r24, 0x02	; 2
     560:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("Dist.: ");
     564:	8f ed       	ldi	r24, 0xDF	; 223
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
			LCD_GoTo(SECOND_LINE,COL_9);
     56c:	69 e0       	ldi	r22, 0x09	; 9
     56e:	82 e0       	ldi	r24, 0x02	; 2
     570:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_Number(u8_sg_distance);
     574:	60 91 6d 01 	lds	r22, 0x016D	; 0x80016d <u8_sg_distance>
     578:	70 91 6e 01 	lds	r23, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     57c:	80 e0       	ldi	r24, 0x00	; 0
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_Write_Number>
			LCD_GoTo(SECOND_LINE,COL_11);
     584:	6b e0       	ldi	r22, 0x0B	; 11
     586:	82 e0       	ldi	r24, 0x02	; 2
     588:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("cm");
     58c:	87 ee       	ldi	r24, 0xE7	; 231
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
     594:	2e c0       	rjmp	.+92     	; 0x5f2 <CAR_no_obstacle_between_20_and_30+0xe8>
			
		}
		else if(u8_sg_default_Rot == left)
     596:	81 30       	cpi	r24, 0x01	; 1
     598:	61 f5       	brne	.+88     	; 0x5f2 <CAR_no_obstacle_between_20_and_30+0xe8>
		{
			pwm(30);
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	80 ef       	ldi	r24, 0xF0	; 240
     5a0:	91 e4       	ldi	r25, 0x41	; 65
     5a2:	0e 94 df 03 	call	0x7be	; 0x7be <pwm>
			rotate_90degree_Left();
     5a6:	0e 94 62 04 	call	0x8c4	; 0x8c4 <rotate_90degree_Left>
			LCD_GoTo(FIRST_LINE,COL_0);
     5aa:	60 e0       	ldi	r22, 0x00	; 0
     5ac:	81 e0       	ldi	r24, 0x01	; 1
     5ae:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("Speed:30% Dir: L");
     5b2:	8c e0       	ldi	r24, 0x0C	; 12
     5b4:	91 e0       	ldi	r25, 0x01	; 1
     5b6:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
			LCD_GoTo(SECOND_LINE,COL_0);
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	82 e0       	ldi	r24, 0x02	; 2
     5be:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("Dist.: ");
     5c2:	8f ed       	ldi	r24, 0xDF	; 223
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
			LCD_GoTo(SECOND_LINE,COL_9);
     5ca:	69 e0       	ldi	r22, 0x09	; 9
     5cc:	82 e0       	ldi	r24, 0x02	; 2
     5ce:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_Number(u8_sg_distance);
     5d2:	60 91 6d 01 	lds	r22, 0x016D	; 0x80016d <u8_sg_distance>
     5d6:	70 91 6e 01 	lds	r23, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     5da:	80 e0       	ldi	r24, 0x00	; 0
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_Write_Number>
			LCD_GoTo(SECOND_LINE,COL_11);
     5e2:	6b e0       	ldi	r22, 0x0B	; 11
     5e4:	82 e0       	ldi	r24, 0x02	; 2
     5e6:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
			LCD_Write_String("cm");
     5ea:	87 ee       	ldi	r24, 0xE7	; 231
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		}
		else
		{
			// DO NOTHING
		}
		Ultrasonic_GetDistance(&u8_sg_distance);
     5f2:	8d e6       	ldi	r24, 0x6D	; 109
     5f4:	91 e0       	ldi	r25, 0x01	; 1
     5f6:	0e 94 37 07 	call	0xe6e	; 0xe6e <Ultrasonic_GetDistance>
/*****************************************************************************************************************************/
void CAR_no_obstacle_between_20_and_30()
{
	Car_Stop();
	LCD_Clear();
	while(((u8_sg_distance>20) && (u8_sg_distance<=30)) && (g_start_stop!=STOP))
     5fa:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <u8_sg_distance>
     5fe:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     602:	45 97       	sbiw	r24, 0x15	; 21
     604:	0a 97       	sbiw	r24, 0x0a	; 10
     606:	28 f4       	brcc	.+10     	; 0x612 <CAR_no_obstacle_between_20_and_30+0x108>
     608:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     60c:	81 30       	cpi	r24, 0x01	; 1
     60e:	09 f0       	breq	.+2      	; 0x612 <CAR_no_obstacle_between_20_and_30+0x108>
     610:	8d cf       	rjmp	.-230    	; 0x52c <CAR_no_obstacle_between_20_and_30+0x22>
     612:	08 95       	ret

00000614 <CAR_no_obstacle_less_20>:
}

/*****************************************************************************************************************************/
void CAR_no_obstacle_less_20()
{
		Car_Stop();
     614:	0e 94 a5 06 	call	0xd4a	; 0xd4a <Car_Stop>
		LCD_Clear();
     618:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Clear>
		LCD_GoTo(FIRST_LINE,COL_0);
     61c:	60 e0       	ldi	r22, 0x00	; 0
     61e:	81 e0       	ldi	r24, 0x01	; 1
     620:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String("Speed:30% Dir: S");
     624:	8d e1       	ldi	r24, 0x1D	; 29
     626:	91 e0       	ldi	r25, 0x01	; 1
     628:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		LCD_GoTo(SECOND_LINE,COL_0);
     62c:	60 e0       	ldi	r22, 0x00	; 0
     62e:	82 e0       	ldi	r24, 0x02	; 2
     630:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String("Dist.: ");
     634:	8f ed       	ldi	r24, 0xDF	; 223
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		LCD_GoTo(SECOND_LINE,COL_9);
     63c:	69 e0       	ldi	r22, 0x09	; 9
     63e:	82 e0       	ldi	r24, 0x02	; 2
     640:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_Number(u8_sg_distance);
     644:	60 91 6d 01 	lds	r22, 0x016D	; 0x80016d <u8_sg_distance>
     648:	70 91 6e 01 	lds	r23, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_Write_Number>
		LCD_GoTo(SECOND_LINE,COL_11);
     654:	6b e0       	ldi	r22, 0x0B	; 11
     656:	82 e0       	ldi	r24, 0x02	; 2
     658:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String("cm");
     65c:	87 ee       	ldi	r24, 0xE7	; 231
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     664:	2f ef       	ldi	r18, 0xFF	; 255
     666:	89 e6       	ldi	r24, 0x69	; 105
     668:	98 e1       	ldi	r25, 0x18	; 24
     66a:	21 50       	subi	r18, 0x01	; 1
     66c:	80 40       	sbci	r24, 0x00	; 0
     66e:	90 40       	sbci	r25, 0x00	; 0
     670:	e1 f7       	brne	.-8      	; 0x66a <CAR_no_obstacle_less_20+0x56>
     672:	00 c0       	rjmp	.+0      	; 0x674 <CAR_no_obstacle_less_20+0x60>
     674:	00 00       	nop
		_delay_ms(1000);
		LCD_Clear();
     676:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Clear>
	while(u8_sg_distance<=20  && g_start_stop!=STOP)
     67a:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <u8_sg_distance>
     67e:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     682:	45 97       	sbiw	r24, 0x15	; 21
     684:	08 f0       	brcs	.+2      	; 0x688 <CAR_no_obstacle_less_20+0x74>
     686:	42 c0       	rjmp	.+132    	; 0x70c <CAR_no_obstacle_less_20+0xf8>
     688:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     68c:	81 30       	cpi	r24, 0x01	; 1
     68e:	f1 f1       	breq	.+124    	; 0x70c <CAR_no_obstacle_less_20+0xf8>
	{
		keypad_get_value(&g_start_stop);
     690:	82 e6       	ldi	r24, 0x62	; 98
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	0e 94 a5 04 	call	0x94a	; 0x94a <keypad_get_value>
		Car_Moving_BWD();
     698:	0e 94 94 06 	call	0xd28	; 0xd28 <Car_Moving_BWD>
		pwm(30);
     69c:	60 e0       	ldi	r22, 0x00	; 0
     69e:	70 e0       	ldi	r23, 0x00	; 0
     6a0:	80 ef       	ldi	r24, 0xF0	; 240
     6a2:	91 e4       	ldi	r25, 0x41	; 65
     6a4:	0e 94 df 03 	call	0x7be	; 0x7be <pwm>
		LCD_GoTo(FIRST_LINE,COL_0);
     6a8:	60 e0       	ldi	r22, 0x00	; 0
     6aa:	81 e0       	ldi	r24, 0x01	; 1
     6ac:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String("Speed:30% Dir: B");
     6b0:	8e e2       	ldi	r24, 0x2E	; 46
     6b2:	91 e0       	ldi	r25, 0x01	; 1
     6b4:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		LCD_GoTo(SECOND_LINE,COL_0);
     6b8:	60 e0       	ldi	r22, 0x00	; 0
     6ba:	82 e0       	ldi	r24, 0x02	; 2
     6bc:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String("Dist.: ");
     6c0:	8f ed       	ldi	r24, 0xDF	; 223
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		LCD_GoTo(SECOND_LINE,COL_9);
     6c8:	69 e0       	ldi	r22, 0x09	; 9
     6ca:	82 e0       	ldi	r24, 0x02	; 2
     6cc:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_Number(u8_sg_distance);
     6d0:	60 91 6d 01 	lds	r22, 0x016D	; 0x80016d <u8_sg_distance>
     6d4:	70 91 6e 01 	lds	r23, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	0e 94 1d 06 	call	0xc3a	; 0xc3a <LCD_Write_Number>
		LCD_GoTo(SECOND_LINE,COL_11);
     6e0:	6b e0       	ldi	r22, 0x0B	; 11
     6e2:	82 e0       	ldi	r24, 0x02	; 2
     6e4:	0e 94 75 06 	call	0xcea	; 0xcea <LCD_GoTo>
		LCD_Write_String("cm");
     6e8:	87 ee       	ldi	r24, 0xE7	; 231
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	0e 94 07 06 	call	0xc0e	; 0xc0e <LCD_Write_String>
		
		Ultrasonic_GetDistance(&u8_sg_distance);
     6f0:	8d e6       	ldi	r24, 0x6D	; 109
     6f2:	91 e0       	ldi	r25, 0x01	; 1
     6f4:	0e 94 37 07 	call	0xe6e	; 0xe6e <Ultrasonic_GetDistance>
		LCD_Write_Number(u8_sg_distance);
		LCD_GoTo(SECOND_LINE,COL_11);
		LCD_Write_String("cm");
		_delay_ms(1000);
		LCD_Clear();
	while(u8_sg_distance<=20  && g_start_stop!=STOP)
     6f8:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <u8_sg_distance>
     6fc:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     700:	45 97       	sbiw	r24, 0x15	; 21
     702:	20 f4       	brcc	.+8      	; 0x70c <CAR_no_obstacle_less_20+0xf8>
     704:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     708:	81 30       	cpi	r24, 0x01	; 1
     70a:	11 f6       	brne	.-124    	; 0x690 <CAR_no_obstacle_less_20+0x7c>
     70c:	08 95       	ret

0000070e <app_Start>:
	}
}
/*****************************************************************************************************************************/
void app_Start(void){
 
keypad_get_value(&g_start_stop);
     70e:	82 e6       	ldi	r24, 0x62	; 98
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	0e 94 a5 04 	call	0x94a	; 0x94a <keypad_get_value>

switch(g_start_stop){
     716:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     71a:	88 23       	and	r24, r24
     71c:	31 f0       	breq	.+12     	; 0x72a <app_Start+0x1c>
     71e:	81 30       	cpi	r24, 0x01	; 1
     720:	09 f0       	breq	.+2      	; 0x724 <app_Start+0x16>
     722:	44 c0       	rjmp	.+136    	; 0x7ac <app_Start+0x9e>
	case STOP :
	Car_Stop();
     724:	0e 94 a5 06 	call	0xd4a	; 0xd4a <Car_Stop>
	break;
     728:	08 95       	ret
	
	case START :
	if (u8_sg_stageFlag == START_PAGE )
     72a:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <u8_sg_stageFlag>
     72e:	81 11       	cpse	r24, r1
     730:	03 c0       	rjmp	.+6      	; 0x738 <app_Start+0x2a>
	{
		start_stage();
     732:	0e 94 ee 00 	call	0x1dc	; 0x1dc <start_stage>
     736:	32 c0       	rjmp	.+100    	; 0x79c <app_Start+0x8e>
	}
	else if (u8_sg_stageFlag == SET_ROTATION )
     738:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <u8_sg_stageFlag>
     73c:	81 30       	cpi	r24, 0x01	; 1
     73e:	19 f4       	brne	.+6      	; 0x746 <app_Start+0x38>
	{
		CAR_set_rotation_dir();
     740:	0e 94 04 01 	call	0x208	; 0x208 <CAR_set_rotation_dir>
     744:	2b c0       	rjmp	.+86     	; 0x79c <app_Start+0x8e>
	}
	else if ( u8_sg_stageFlag == WAIT_2SEC)
     746:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <u8_sg_stageFlag>
     74a:	82 30       	cpi	r24, 0x02	; 2
     74c:	39 f5       	brne	.+78     	; 0x79c <app_Start+0x8e>
	{
		
		CAR_wait_2_sec();
     74e:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAR_wait_2_sec>
     752:	24 c0       	rjmp	.+72     	; 0x79c <app_Start+0x8e>
	}
	while(u8_sg_stageFlag == MOVING && g_start_stop!=STOP)
	{
		Ultrasonic_GetDistance(&u8_sg_distance);
     754:	8d e6       	ldi	r24, 0x6D	; 109
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	0e 94 37 07 	call	0xe6e	; 0xe6e <Ultrasonic_GetDistance>
		if ( u8_sg_distance > 70)
     75c:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <u8_sg_distance>
     760:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <u8_sg_distance+0x1>
     764:	87 34       	cpi	r24, 0x47	; 71
     766:	91 05       	cpc	r25, r1
     768:	18 f0       	brcs	.+6      	; 0x770 <app_Start+0x62>
		{
			CAR_no_obstacle_less_70();
     76a:	0e 94 a2 01 	call	0x344	; 0x344 <CAR_no_obstacle_less_70>
     76e:	16 c0       	rjmp	.+44     	; 0x79c <app_Start+0x8e>
		}
		else if ((u8_sg_distance>30) && (u8_sg_distance<=70) )
     770:	9c 01       	movw	r18, r24
     772:	2f 51       	subi	r18, 0x1F	; 31
     774:	31 09       	sbc	r19, r1
     776:	28 32       	cpi	r18, 0x28	; 40
     778:	31 05       	cpc	r19, r1
     77a:	18 f4       	brcc	.+6      	; 0x782 <app_Start+0x74>
		{
			CAR_no_obstacle_between_30_and_70();
     77c:	0e 94 36 02 	call	0x46c	; 0x46c <CAR_no_obstacle_between_30_and_70>
     780:	0d c0       	rjmp	.+26     	; 0x79c <app_Start+0x8e>
			
		}
		else if  ((u8_sg_distance>20) && (u8_sg_distance<=30) )
     782:	9c 01       	movw	r18, r24
     784:	25 51       	subi	r18, 0x15	; 21
     786:	31 09       	sbc	r19, r1
     788:	2a 30       	cpi	r18, 0x0A	; 10
     78a:	31 05       	cpc	r19, r1
     78c:	18 f4       	brcc	.+6      	; 0x794 <app_Start+0x86>
		{
			
			CAR_no_obstacle_between_20_and_30();
     78e:	0e 94 85 02 	call	0x50a	; 0x50a <CAR_no_obstacle_between_20_and_30>
     792:	04 c0       	rjmp	.+8      	; 0x79c <app_Start+0x8e>
			
		}
		else if  (u8_sg_distance<=20)
     794:	45 97       	sbiw	r24, 0x15	; 21
     796:	10 f4       	brcc	.+4      	; 0x79c <app_Start+0x8e>
		{
			
			CAR_no_obstacle_less_20();
     798:	0e 94 0a 03 	call	0x614	; 0x614 <CAR_no_obstacle_less_20>
	else if ( u8_sg_stageFlag == WAIT_2SEC)
	{
		
		CAR_wait_2_sec();
	}
	while(u8_sg_stageFlag == MOVING && g_start_stop!=STOP)
     79c:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <u8_sg_stageFlag>
     7a0:	83 30       	cpi	r24, 0x03	; 3
     7a2:	21 f4       	brne	.+8      	; 0x7ac <app_Start+0x9e>
     7a4:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <g_start_stop>
     7a8:	81 30       	cpi	r24, 0x01	; 1
     7aa:	a1 f6       	brne	.-88     	; 0x754 <app_Start+0x46>
     7ac:	08 95       	ret

000007ae <Button_read>:
     7ae:	88 32       	cpi	r24, 0x28	; 40
     7b0:	20 f4       	brcc	.+8      	; 0x7ba <Button_read+0xc>
     7b2:	0e 94 ff 08 	call	0x11fe	; 0x11fe <DIO_READPIN>
     7b6:	80 e0       	ldi	r24, 0x00	; 0
     7b8:	08 95       	ret
     7ba:	81 e0       	ldi	r24, 0x01	; 1
     7bc:	08 95       	ret

000007be <pwm>:
     7be:	cf 92       	push	r12
     7c0:	df 92       	push	r13
     7c2:	ef 92       	push	r14
     7c4:	ff 92       	push	r15
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	30 e0       	ldi	r19, 0x00	; 0
     7ca:	48 ec       	ldi	r20, 0xC8	; 200
     7cc:	52 e4       	ldi	r21, 0x42	; 66
     7ce:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <__divsf3>
     7d2:	60 93 7b 01 	sts	0x017B, r22	; 0x80017b <g_speed>
     7d6:	70 93 7c 01 	sts	0x017C, r23	; 0x80017c <g_speed+0x1>
     7da:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <g_speed+0x2>
     7de:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <g_speed+0x3>
     7e2:	20 e0       	ldi	r18, 0x00	; 0
     7e4:	30 e0       	ldi	r19, 0x00	; 0
     7e6:	40 e8       	ldi	r20, 0x80	; 128
     7e8:	53 e4       	ldi	r21, 0x43	; 67
     7ea:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <__mulsf3>
     7ee:	6b 01       	movw	r12, r22
     7f0:	7c 01       	movw	r14, r24
     7f2:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <g_time1>
     7f6:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <g_time1+0x1>
     7fa:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <g_time1+0x2>
     7fe:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <g_time1+0x3>
     802:	9b 01       	movw	r18, r22
     804:	ac 01       	movw	r20, r24
     806:	60 e0       	ldi	r22, 0x00	; 0
     808:	70 e0       	ldi	r23, 0x00	; 0
     80a:	80 e8       	ldi	r24, 0x80	; 128
     80c:	93 e4       	ldi	r25, 0x43	; 67
     80e:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <__subsf3>
     812:	60 93 6f 01 	sts	0x016F, r22	; 0x80016f <g_time2>
     816:	70 93 70 01 	sts	0x0170, r23	; 0x800170 <g_time2+0x1>
     81a:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <g_time2+0x2>
     81e:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <g_time2+0x3>
     822:	c7 01       	movw	r24, r14
     824:	b6 01       	movw	r22, r12
     826:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <TIMER_0_pwm>
     82a:	61 e0       	ldi	r22, 0x01	; 1
     82c:	8c e1       	ldi	r24, 0x1C	; 28
     82e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     832:	61 e0       	ldi	r22, 0x01	; 1
     834:	8d e1       	ldi	r24, 0x1D	; 29
     836:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     83a:	60 91 6f 01 	lds	r22, 0x016F	; 0x80016f <g_time2>
     83e:	70 91 70 01 	lds	r23, 0x0170	; 0x800170 <g_time2+0x1>
     842:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <g_time2+0x2>
     846:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <g_time2+0x3>
     84a:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <TIMER_0_pwm>
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	8c e1       	ldi	r24, 0x1C	; 28
     852:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	8d e1       	ldi	r24, 0x1D	; 29
     85a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     85e:	ff 90       	pop	r15
     860:	ef 90       	pop	r14
     862:	df 90       	pop	r13
     864:	cf 90       	pop	r12
     866:	08 95       	ret

00000868 <rotate_90degree_calculation>:
     868:	86 e7       	ldi	r24, 0x76	; 118
     86a:	9b e0       	ldi	r25, 0x0B	; 11
     86c:	af e3       	ldi	r26, 0x3F	; 63
     86e:	b0 e4       	ldi	r27, 0x40	; 64
     870:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <rotation_per_circle>
     874:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <rotation_per_circle+0x1>
     878:	a0 93 79 01 	sts	0x0179, r26	; 0x800179 <rotation_per_circle+0x2>
     87c:	b0 93 7a 01 	sts	0x017A, r27	; 0x80017a <rotation_per_circle+0x3>
     880:	84 e5       	ldi	r24, 0x54	; 84
     882:	9e ec       	ldi	r25, 0xCE	; 206
     884:	ae e6       	ldi	r26, 0x6E	; 110
     886:	b0 e4       	ldi	r27, 0x40	; 64
     888:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <time_rotation_state>
     88c:	90 93 74 01 	sts	0x0174, r25	; 0x800174 <time_rotation_state+0x1>
     890:	a0 93 75 01 	sts	0x0175, r26	; 0x800175 <time_rotation_state+0x2>
     894:	b0 93 76 01 	sts	0x0176, r27	; 0x800176 <time_rotation_state+0x3>
     898:	08 95       	ret

0000089a <rotate_90degree_Right>:
     89a:	0e 94 34 04 	call	0x868	; 0x868 <rotate_90degree_calculation>
     89e:	0e 94 b6 06 	call	0xd6c	; 0xd6c <Car_Rotating_Right>
     8a2:	60 e0       	ldi	r22, 0x00	; 0
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	80 e2       	ldi	r24, 0x20	; 32
     8a8:	91 e4       	ldi	r25, 0x41	; 65
     8aa:	0e 94 df 03 	call	0x7be	; 0x7be <pwm>
     8ae:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <time_rotation_state>
     8b2:	70 91 74 01 	lds	r23, 0x0174	; 0x800174 <time_rotation_state+0x1>
     8b6:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <time_rotation_state+0x2>
     8ba:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <time_rotation_state+0x3>
     8be:	0e 94 20 0c 	call	0x1840	; 0x1840 <TIMER_0_DELAY_MS>
     8c2:	08 95       	ret

000008c4 <rotate_90degree_Left>:
     8c4:	0e 94 34 04 	call	0x868	; 0x868 <rotate_90degree_calculation>
     8c8:	0e 94 c7 06 	call	0xd8e	; 0xd8e <Car_Rotating_Left>
     8cc:	60 e0       	ldi	r22, 0x00	; 0
     8ce:	70 e0       	ldi	r23, 0x00	; 0
     8d0:	80 e2       	ldi	r24, 0x20	; 32
     8d2:	91 e4       	ldi	r25, 0x41	; 65
     8d4:	0e 94 df 03 	call	0x7be	; 0x7be <pwm>
     8d8:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <time_rotation_state>
     8dc:	70 91 74 01 	lds	r23, 0x0174	; 0x800174 <time_rotation_state+0x1>
     8e0:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <time_rotation_state+0x2>
     8e4:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <time_rotation_state+0x3>
     8e8:	0e 94 20 0c 	call	0x1840	; 0x1840 <TIMER_0_DELAY_MS>
     8ec:	08 95       	ret

000008ee <Icu_TimerOVF>:
     8ee:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <count_OVF>
     8f2:	8f 5f       	subi	r24, 0xFF	; 255
     8f4:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <count_OVF>
     8f8:	08 95       	ret

000008fa <Icu_Enable>:
     8fa:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EXI_Enable>
     8fe:	1d bc       	out	0x2d, r1	; 45
     900:	1c bc       	out	0x2c, r1	; 44
     902:	87 e7       	ldi	r24, 0x77	; 119
     904:	94 e0       	ldi	r25, 0x04	; 4
     906:	0e 94 a3 0c 	call	0x1946	; 0x1946 <Timer1_OVF_SetCallBack>
     90a:	0e 94 9f 0c 	call	0x193e	; 0x193e <Timer1_OVF_InterruptEnable>
     90e:	62 e0       	ldi	r22, 0x02	; 2
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <Timer1_Init>
     916:	08 95       	ret

00000918 <Icu_Disable>:
     918:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <EXI_Disable>
     91c:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <count_OVF>
     920:	8e b5       	in	r24, 0x2e	; 46
     922:	88 7f       	andi	r24, 0xF8	; 248
     924:	8e bd       	out	0x2e, r24	; 46
     926:	08 95       	ret

00000928 <Icu_Trigger>:
     928:	0e 94 6f 0a 	call	0x14de	; 0x14de <EXI_Trigger>
     92c:	08 95       	ret

0000092e <Icu_SetCallback>:
     92e:	0e 94 cb 0a 	call	0x1596	; 0x1596 <EXI_SetCallBack>
     932:	08 95       	ret

00000934 <keypad_init>:
     934:	40 e0       	ldi	r20, 0x00	; 0
     936:	63 e4       	ldi	r22, 0x43	; 67
     938:	82 e0       	ldi	r24, 0x02	; 2
     93a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <DIO_write>
     93e:	40 e0       	ldi	r20, 0x00	; 0
     940:	63 e4       	ldi	r22, 0x43	; 67
     942:	83 e0       	ldi	r24, 0x03	; 3
     944:	0e 94 60 09 	call	0x12c0	; 0x12c0 <DIO_write>
     948:	08 95       	ret

0000094a <keypad_get_value>:
     94a:	7f 92       	push	r7
     94c:	8f 92       	push	r8
     94e:	9f 92       	push	r9
     950:	af 92       	push	r10
     952:	bf 92       	push	r11
     954:	cf 92       	push	r12
     956:	df 92       	push	r13
     958:	ef 92       	push	r14
     95a:	ff 92       	push	r15
     95c:	0f 93       	push	r16
     95e:	1f 93       	push	r17
     960:	cf 93       	push	r28
     962:	df 93       	push	r29
     964:	1f 92       	push	r1
     966:	cd b7       	in	r28, 0x3d	; 61
     968:	de b7       	in	r29, 0x3e	; 62
     96a:	5c 01       	movw	r10, r24
     96c:	19 82       	std	Y+1, r1	; 0x01
     96e:	0f 2e       	mov	r0, r31
     970:	f3 e6       	ldi	r31, 0x63	; 99
     972:	cf 2e       	mov	r12, r31
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	df 2e       	mov	r13, r31
     978:	f0 2d       	mov	r31, r0
     97a:	02 e0       	ldi	r16, 0x02	; 2
     97c:	91 2c       	mov	r9, r1
     97e:	88 24       	eor	r8, r8
     980:	83 94       	inc	r8
     982:	78 2c       	mov	r7, r8
     984:	40 e0       	ldi	r20, 0x00	; 0
     986:	63 e4       	ldi	r22, 0x43	; 67
     988:	82 e0       	ldi	r24, 0x02	; 2
     98a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <DIO_write>
     98e:	40 e0       	ldi	r20, 0x00	; 0
     990:	63 e4       	ldi	r22, 0x43	; 67
     992:	83 e0       	ldi	r24, 0x03	; 3
     994:	0e 94 60 09 	call	0x12c0	; 0x12c0 <DIO_write>
     998:	48 2d       	mov	r20, r8
     99a:	63 e4       	ldi	r22, 0x43	; 67
     99c:	80 2f       	mov	r24, r16
     99e:	0e 94 60 09 	call	0x12c0	; 0x12c0 <DIO_write>
     9a2:	76 01       	movw	r14, r12
     9a4:	15 e0       	ldi	r17, 0x05	; 5
     9a6:	ae 01       	movw	r20, r28
     9a8:	4f 5f       	subi	r20, 0xFF	; 255
     9aa:	5f 4f       	sbci	r21, 0xFF	; 255
     9ac:	63 e4       	ldi	r22, 0x43	; 67
     9ae:	81 2f       	mov	r24, r17
     9b0:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <DIO_read>
     9b4:	89 81       	ldd	r24, Y+1	; 0x01
     9b6:	81 30       	cpi	r24, 0x01	; 1
     9b8:	59 f4       	brne	.+22     	; 0x9d0 <keypad_get_value+0x86>
     9ba:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <counter>
     9be:	81 11       	cpse	r24, r1
     9c0:	0a c0       	rjmp	.+20     	; 0x9d6 <keypad_get_value+0x8c>
     9c2:	f7 01       	movw	r30, r14
     9c4:	80 81       	ld	r24, Z
     9c6:	f5 01       	movw	r30, r10
     9c8:	80 83       	st	Z, r24
     9ca:	70 92 52 01 	sts	0x0152, r7	; 0x800152 <counter>
     9ce:	03 c0       	rjmp	.+6      	; 0x9d6 <keypad_get_value+0x8c>
     9d0:	81 11       	cpse	r24, r1
     9d2:	01 c0       	rjmp	.+2      	; 0x9d6 <keypad_get_value+0x8c>
     9d4:	93 94       	inc	r9
     9d6:	1f 5f       	subi	r17, 0xFF	; 255
     9d8:	ff ef       	ldi	r31, 0xFF	; 255
     9da:	ef 1a       	sub	r14, r31
     9dc:	ff 0a       	sbc	r15, r31
     9de:	17 30       	cpi	r17, 0x07	; 7
     9e0:	11 f7       	brne	.-60     	; 0x9a6 <keypad_get_value+0x5c>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	98 12       	cpse	r9, r24
     9e6:	02 c0       	rjmp	.+4      	; 0x9ec <keypad_get_value+0xa2>
     9e8:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <counter>
     9ec:	0f 5f       	subi	r16, 0xFF	; 255
     9ee:	e2 e0       	ldi	r30, 0x02	; 2
     9f0:	ce 0e       	add	r12, r30
     9f2:	d1 1c       	adc	r13, r1
     9f4:	04 30       	cpi	r16, 0x04	; 4
     9f6:	31 f6       	brne	.-116    	; 0x984 <keypad_get_value+0x3a>
     9f8:	0f 90       	pop	r0
     9fa:	df 91       	pop	r29
     9fc:	cf 91       	pop	r28
     9fe:	1f 91       	pop	r17
     a00:	0f 91       	pop	r16
     a02:	ff 90       	pop	r15
     a04:	ef 90       	pop	r14
     a06:	df 90       	pop	r13
     a08:	cf 90       	pop	r12
     a0a:	bf 90       	pop	r11
     a0c:	af 90       	pop	r10
     a0e:	9f 90       	pop	r9
     a10:	8f 90       	pop	r8
     a12:	7f 90       	pop	r7
     a14:	08 95       	ret

00000a16 <LCD_WRITE_COMMAND>:
/*************************************************************************************************
                                     4_bit_mode
*****************************************************************************************************/

void LCD_WRITE_COMMAND(uint8_t a_COMMAND)
{
     a16:	cf 93       	push	r28
     a18:	c8 2f       	mov	r28, r24
	DIO_WRITEPIN(RS,LOW);
     a1a:	60 e0       	ldi	r22, 0x00	; 0
     a1c:	81 e0       	ldi	r24, 0x01	; 1
     a1e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(RW,LOW);
     a22:	60 e0       	ldi	r22, 0x00	; 0
     a24:	82 e0       	ldi	r24, 0x02	; 2
     a26:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	/**for the 4 most significant bits**/
	DIO_WRITEPIN(D4,read_bit(a_COMMAND,4));
     a2a:	c4 fb       	bst	r28, 4
     a2c:	66 27       	eor	r22, r22
     a2e:	60 f9       	bld	r22, 0
     a30:	84 e0       	ldi	r24, 0x04	; 4
     a32:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D5,read_bit(a_COMMAND,5));
     a36:	c5 fb       	bst	r28, 5
     a38:	66 27       	eor	r22, r22
     a3a:	60 f9       	bld	r22, 0
     a3c:	85 e0       	ldi	r24, 0x05	; 5
     a3e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D6,read_bit(a_COMMAND,6));
     a42:	c6 fb       	bst	r28, 6
     a44:	66 27       	eor	r22, r22
     a46:	60 f9       	bld	r22, 0
     a48:	86 e0       	ldi	r24, 0x06	; 6
     a4a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D7,read_bit(a_COMMAND,7));
     a4e:	6c 2f       	mov	r22, r28
     a50:	66 1f       	adc	r22, r22
     a52:	66 27       	eor	r22, r22
     a54:	66 1f       	adc	r22, r22
     a56:	87 e0       	ldi	r24, 0x07	; 7
     a58:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(EN,HIGH);
     a5c:	61 e0       	ldi	r22, 0x01	; 1
     a5e:	83 e0       	ldi	r24, 0x03	; 3
     a60:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     a64:	89 ef       	ldi	r24, 0xF9	; 249
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	01 97       	sbiw	r24, 0x01	; 1
     a6a:	f1 f7       	brne	.-4      	; 0xa68 <LCD_WRITE_COMMAND+0x52>
     a6c:	00 c0       	rjmp	.+0      	; 0xa6e <LCD_WRITE_COMMAND+0x58>
     a6e:	00 00       	nop
	_delay_ms(1);
	DIO_WRITEPIN(EN,LOW);
     a70:	60 e0       	ldi	r22, 0x00	; 0
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     a78:	89 ef       	ldi	r24, 0xF9	; 249
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	01 97       	sbiw	r24, 0x01	; 1
     a7e:	f1 f7       	brne	.-4      	; 0xa7c <LCD_WRITE_COMMAND+0x66>
     a80:	00 c0       	rjmp	.+0      	; 0xa82 <LCD_WRITE_COMMAND+0x6c>
     a82:	00 00       	nop
	_delay_ms(1);
	/**for the 4 least significant bits**/
	DIO_WRITEPIN(D4,read_bit(a_COMMAND,0));
     a84:	6c 2f       	mov	r22, r28
     a86:	61 70       	andi	r22, 0x01	; 1
     a88:	84 e0       	ldi	r24, 0x04	; 4
     a8a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D5,read_bit(a_COMMAND,1));
     a8e:	c1 fb       	bst	r28, 1
     a90:	66 27       	eor	r22, r22
     a92:	60 f9       	bld	r22, 0
     a94:	85 e0       	ldi	r24, 0x05	; 5
     a96:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D6,read_bit(a_COMMAND,2));
     a9a:	c2 fb       	bst	r28, 2
     a9c:	66 27       	eor	r22, r22
     a9e:	60 f9       	bld	r22, 0
     aa0:	86 e0       	ldi	r24, 0x06	; 6
     aa2:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D7,read_bit(a_COMMAND,3));
     aa6:	c3 fb       	bst	r28, 3
     aa8:	66 27       	eor	r22, r22
     aaa:	60 f9       	bld	r22, 0
     aac:	87 e0       	ldi	r24, 0x07	; 7
     aae:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(EN,HIGH);
     ab2:	61 e0       	ldi	r22, 0x01	; 1
     ab4:	83 e0       	ldi	r24, 0x03	; 3
     ab6:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     aba:	89 ef       	ldi	r24, 0xF9	; 249
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	01 97       	sbiw	r24, 0x01	; 1
     ac0:	f1 f7       	brne	.-4      	; 0xabe <LCD_WRITE_COMMAND+0xa8>
     ac2:	00 c0       	rjmp	.+0      	; 0xac4 <LCD_WRITE_COMMAND+0xae>
     ac4:	00 00       	nop
	_delay_ms(1);
	DIO_WRITEPIN(EN,LOW);
     ac6:	60 e0       	ldi	r22, 0x00	; 0
     ac8:	83 e0       	ldi	r24, 0x03	; 3
     aca:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     ace:	89 ef       	ldi	r24, 0xF9	; 249
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	01 97       	sbiw	r24, 0x01	; 1
     ad4:	f1 f7       	brne	.-4      	; 0xad2 <LCD_WRITE_COMMAND+0xbc>
     ad6:	00 c0       	rjmp	.+0      	; 0xad8 <LCD_WRITE_COMMAND+0xc2>
     ad8:	00 00       	nop
	_delay_ms(1);
}
     ada:	cf 91       	pop	r28
     adc:	08 95       	ret

00000ade <LCD_WRITE_DATA>:

/*************************************************************************************************************************/

void LCD_WRITE_DATA(uint8_t a_DATA)
{
     ade:	cf 93       	push	r28
     ae0:	c8 2f       	mov	r28, r24
	DIO_WRITEPIN(RS,HIGH);
     ae2:	61 e0       	ldi	r22, 0x01	; 1
     ae4:	81 e0       	ldi	r24, 0x01	; 1
     ae6:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(RW,LOW);
     aea:	60 e0       	ldi	r22, 0x00	; 0
     aec:	82 e0       	ldi	r24, 0x02	; 2
     aee:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	/**for the 4 most significant bits**/
	DIO_WRITEPIN(D4,read_bit(a_DATA,4));
     af2:	c4 fb       	bst	r28, 4
     af4:	66 27       	eor	r22, r22
     af6:	60 f9       	bld	r22, 0
     af8:	84 e0       	ldi	r24, 0x04	; 4
     afa:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D5,read_bit(a_DATA,5));
     afe:	c5 fb       	bst	r28, 5
     b00:	66 27       	eor	r22, r22
     b02:	60 f9       	bld	r22, 0
     b04:	85 e0       	ldi	r24, 0x05	; 5
     b06:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D6,read_bit(a_DATA,6));
     b0a:	c6 fb       	bst	r28, 6
     b0c:	66 27       	eor	r22, r22
     b0e:	60 f9       	bld	r22, 0
     b10:	86 e0       	ldi	r24, 0x06	; 6
     b12:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D7,read_bit(a_DATA,7));
     b16:	6c 2f       	mov	r22, r28
     b18:	66 1f       	adc	r22, r22
     b1a:	66 27       	eor	r22, r22
     b1c:	66 1f       	adc	r22, r22
     b1e:	87 e0       	ldi	r24, 0x07	; 7
     b20:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(EN,HIGH);
     b24:	61 e0       	ldi	r22, 0x01	; 1
     b26:	83 e0       	ldi	r24, 0x03	; 3
     b28:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     b2c:	89 ef       	ldi	r24, 0xF9	; 249
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	01 97       	sbiw	r24, 0x01	; 1
     b32:	f1 f7       	brne	.-4      	; 0xb30 <LCD_WRITE_DATA+0x52>
     b34:	00 c0       	rjmp	.+0      	; 0xb36 <LCD_WRITE_DATA+0x58>
     b36:	00 00       	nop
	_delay_ms(1);
	DIO_WRITEPIN(EN,LOW);
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	83 e0       	ldi	r24, 0x03	; 3
     b3c:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     b40:	89 ef       	ldi	r24, 0xF9	; 249
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	01 97       	sbiw	r24, 0x01	; 1
     b46:	f1 f7       	brne	.-4      	; 0xb44 <LCD_WRITE_DATA+0x66>
     b48:	00 c0       	rjmp	.+0      	; 0xb4a <LCD_WRITE_DATA+0x6c>
     b4a:	00 00       	nop
	_delay_ms(1);
	/**for the 4 least significant bits**/
	DIO_WRITEPIN(D4,read_bit(a_DATA,0));
     b4c:	6c 2f       	mov	r22, r28
     b4e:	61 70       	andi	r22, 0x01	; 1
     b50:	84 e0       	ldi	r24, 0x04	; 4
     b52:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D5,read_bit(a_DATA,1));
     b56:	c1 fb       	bst	r28, 1
     b58:	66 27       	eor	r22, r22
     b5a:	60 f9       	bld	r22, 0
     b5c:	85 e0       	ldi	r24, 0x05	; 5
     b5e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D6,read_bit(a_DATA,2));
     b62:	c2 fb       	bst	r28, 2
     b64:	66 27       	eor	r22, r22
     b66:	60 f9       	bld	r22, 0
     b68:	86 e0       	ldi	r24, 0x06	; 6
     b6a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(D7,read_bit(a_DATA,3));
     b6e:	c3 fb       	bst	r28, 3
     b70:	66 27       	eor	r22, r22
     b72:	60 f9       	bld	r22, 0
     b74:	87 e0       	ldi	r24, 0x07	; 7
     b76:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	DIO_WRITEPIN(EN,HIGH);
     b7a:	61 e0       	ldi	r22, 0x01	; 1
     b7c:	83 e0       	ldi	r24, 0x03	; 3
     b7e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     b82:	89 ef       	ldi	r24, 0xF9	; 249
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	01 97       	sbiw	r24, 0x01	; 1
     b88:	f1 f7       	brne	.-4      	; 0xb86 <LCD_WRITE_DATA+0xa8>
     b8a:	00 c0       	rjmp	.+0      	; 0xb8c <LCD_WRITE_DATA+0xae>
     b8c:	00 00       	nop
	_delay_ms(1);
	DIO_WRITEPIN(EN,LOW);
     b8e:	60 e0       	ldi	r22, 0x00	; 0
     b90:	83 e0       	ldi	r24, 0x03	; 3
     b92:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     b96:	89 ef       	ldi	r24, 0xF9	; 249
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	01 97       	sbiw	r24, 0x01	; 1
     b9c:	f1 f7       	brne	.-4      	; 0xb9a <LCD_WRITE_DATA+0xbc>
     b9e:	00 c0       	rjmp	.+0      	; 0xba0 <LCD_WRITE_DATA+0xc2>
     ba0:	00 00       	nop
	_delay_ms(1);
}
     ba2:	cf 91       	pop	r28
     ba4:	08 95       	ret

00000ba6 <LCD_INIT>:
     ba6:	83 ed       	ldi	r24, 0xD3	; 211
     ba8:	90 e3       	ldi	r25, 0x30	; 48
     baa:	01 97       	sbiw	r24, 0x01	; 1
     bac:	f1 f7       	brne	.-4      	; 0xbaa <LCD_INIT+0x4>
     bae:	00 c0       	rjmp	.+0      	; 0xbb0 <LCD_INIT+0xa>
     bb0:	00 00       	nop

void LCD_INIT(void)
{

	_delay_ms(50);
	LCD_WRITE_COMMAND(0x02);
     bb2:	82 e0       	ldi	r24, 0x02	; 2
     bb4:	0e 94 0b 05 	call	0xa16	; 0xa16 <LCD_WRITE_COMMAND>
     bb8:	89 ef       	ldi	r24, 0xF9	; 249
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	01 97       	sbiw	r24, 0x01	; 1
     bbe:	f1 f7       	brne	.-4      	; 0xbbc <LCD_INIT+0x16>
     bc0:	00 c0       	rjmp	.+0      	; 0xbc2 <LCD_INIT+0x1c>
     bc2:	00 00       	nop
	_delay_ms(1);
	LCD_WRITE_COMMAND(0X28);                     /* THIS IS FOR FUNCTION SET IN THE DATA SHEET  4BIT MODE, 2LINE, 5*7*/
     bc4:	88 e2       	ldi	r24, 0x28	; 40
     bc6:	0e 94 0b 05 	call	0xa16	; 0xa16 <LCD_WRITE_COMMAND>
     bca:	89 ef       	ldi	r24, 0xF9	; 249
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	01 97       	sbiw	r24, 0x01	; 1
     bd0:	f1 f7       	brne	.-4      	; 0xbce <LCD_INIT+0x28>
     bd2:	00 c0       	rjmp	.+0      	; 0xbd4 <LCD_INIT+0x2e>
     bd4:	00 00       	nop
	_delay_ms(1);
	LCD_WRITE_COMMAND(0x0c);                     /*SCREEN ON, CURSOR OFF*/
     bd6:	8c e0       	ldi	r24, 0x0C	; 12
     bd8:	0e 94 0b 05 	call	0xa16	; 0xa16 <LCD_WRITE_COMMAND>
     bdc:	89 ef       	ldi	r24, 0xF9	; 249
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	01 97       	sbiw	r24, 0x01	; 1
     be2:	f1 f7       	brne	.-4      	; 0xbe0 <LCD_INIT+0x3a>
     be4:	00 c0       	rjmp	.+0      	; 0xbe6 <LCD_INIT+0x40>
     be6:	00 00       	nop
	_delay_ms(1);
	LCD_WRITE_COMMAND(0X01);                      /*CLEAR SCREEN*/
     be8:	81 e0       	ldi	r24, 0x01	; 1
     bea:	0e 94 0b 05 	call	0xa16	; 0xa16 <LCD_WRITE_COMMAND>
     bee:	83 ef       	ldi	r24, 0xF3	; 243
     bf0:	91 e0       	ldi	r25, 0x01	; 1
     bf2:	01 97       	sbiw	r24, 0x01	; 1
     bf4:	f1 f7       	brne	.-4      	; 0xbf2 <LCD_INIT+0x4c>
     bf6:	00 c0       	rjmp	.+0      	; 0xbf8 <LCD_INIT+0x52>
     bf8:	00 00       	nop
	_delay_ms(2);
	LCD_WRITE_COMMAND(0X06);
     bfa:	86 e0       	ldi	r24, 0x06	; 6
     bfc:	0e 94 0b 05 	call	0xa16	; 0xa16 <LCD_WRITE_COMMAND>
     c00:	89 ef       	ldi	r24, 0xF9	; 249
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	01 97       	sbiw	r24, 0x01	; 1
     c06:	f1 f7       	brne	.-4      	; 0xc04 <LCD_INIT+0x5e>
     c08:	00 c0       	rjmp	.+0      	; 0xc0a <LCD_INIT+0x64>
     c0a:	00 00       	nop
     c0c:	08 95       	ret

00000c0e <LCD_Write_String>:
********************************************************************************************************/
/**DESCRIPTION:-
  This Function Takes a Full String and Displays It
  **/
void LCD_Write_String(uint8_t*a_String)
{
     c0e:	0f 93       	push	r16
     c10:	1f 93       	push	r17
     c12:	cf 93       	push	r28
     c14:	fc 01       	movw	r30, r24
	uint8_t L_Index_i=0;
	while(a_String[L_Index_i])
     c16:	80 81       	ld	r24, Z
     c18:	88 23       	and	r24, r24
     c1a:	59 f0       	breq	.+22     	; 0xc32 <LCD_Write_String+0x24>
     c1c:	8f 01       	movw	r16, r30
     c1e:	c0 e0       	ldi	r28, 0x00	; 0
	{
		LCD_WRITE_DATA(a_String[L_Index_i]);
     c20:	0e 94 6f 05 	call	0xade	; 0xade <LCD_WRITE_DATA>
		L_Index_i++;
     c24:	cf 5f       	subi	r28, 0xFF	; 255
  This Function Takes a Full String and Displays It
  **/
void LCD_Write_String(uint8_t*a_String)
{
	uint8_t L_Index_i=0;
	while(a_String[L_Index_i])
     c26:	f8 01       	movw	r30, r16
     c28:	ec 0f       	add	r30, r28
     c2a:	f1 1d       	adc	r31, r1
     c2c:	80 81       	ld	r24, Z
     c2e:	81 11       	cpse	r24, r1
     c30:	f7 cf       	rjmp	.-18     	; 0xc20 <LCD_Write_String+0x12>
	{
		LCD_WRITE_DATA(a_String[L_Index_i]);
		L_Index_i++;
	}
}
     c32:	cf 91       	pop	r28
     c34:	1f 91       	pop	r17
     c36:	0f 91       	pop	r16
     c38:	08 95       	ret

00000c3a <LCD_Write_Number>:
/********************************************************************************************/
/**DESCRIPTION:-
  This Function Takes a Number and Displays IT
  **/
void LCD_Write_Number(uint32_t a_number)
{
     c3a:	8f 92       	push	r8
     c3c:	9f 92       	push	r9
     c3e:	af 92       	push	r10
     c40:	bf 92       	push	r11
     c42:	ef 92       	push	r14
     c44:	ff 92       	push	r15
     c46:	1f 93       	push	r17
     c48:	cf 93       	push	r28
     c4a:	df 93       	push	r29
     c4c:	cd b7       	in	r28, 0x3d	; 61
     c4e:	de b7       	in	r29, 0x3e	; 62
     c50:	60 97       	sbiw	r28, 0x10	; 16
     c52:	0f b6       	in	r0, 0x3f	; 63
     c54:	f8 94       	cli
     c56:	de bf       	out	0x3e, r29	; 62
     c58:	0f be       	out	0x3f, r0	; 63
     c5a:	cd bf       	out	0x3d, r28	; 61
	uint8_t L_Remainder=0,L_Arr[16],L_Index_i=0,L_Index_j;
	if (a_number==0)
     c5c:	61 15       	cp	r22, r1
     c5e:	71 05       	cpc	r23, r1
     c60:	81 05       	cpc	r24, r1
     c62:	91 05       	cpc	r25, r1
     c64:	21 f4       	brne	.+8      	; 0xc6e <LCD_Write_Number+0x34>
	{
		LCD_WRITE_DATA('0');
     c66:	80 e3       	ldi	r24, 0x30	; 48
     c68:	0e 94 6f 05 	call	0xade	; 0xade <LCD_WRITE_DATA>
     c6c:	2a c0       	rjmp	.+84     	; 0xcc2 <LCD_Write_Number+0x88>
     c6e:	10 e0       	ldi	r17, 0x00	; 0
	}
	while(a_number>0)
	{
	L_Remainder=a_number%10;
	L_Arr[L_Index_i]=L_Remainder+'0';    /*tp display the number it self, when we add the zero asci it shits the number to it's asci*/
     c70:	0f 2e       	mov	r0, r31
     c72:	fa e0       	ldi	r31, 0x0A	; 10
     c74:	8f 2e       	mov	r8, r31
     c76:	91 2c       	mov	r9, r1
     c78:	a1 2c       	mov	r10, r1
     c7a:	b1 2c       	mov	r11, r1
     c7c:	f0 2d       	mov	r31, r0
     c7e:	ee 24       	eor	r14, r14
     c80:	e3 94       	inc	r14
     c82:	f1 2c       	mov	r15, r1
     c84:	ec 0e       	add	r14, r28
     c86:	fd 1e       	adc	r15, r29
     c88:	e1 0e       	add	r14, r17
     c8a:	f1 1c       	adc	r15, r1
     c8c:	a5 01       	movw	r20, r10
     c8e:	94 01       	movw	r18, r8
     c90:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <__udivmodsi4>
     c94:	60 5d       	subi	r22, 0xD0	; 208
     c96:	f7 01       	movw	r30, r14
     c98:	60 83       	st	Z, r22
	L_Index_i++;
     c9a:	1f 5f       	subi	r17, 0xFF	; 255
	a_number/=10;
     c9c:	62 2f       	mov	r22, r18
     c9e:	73 2f       	mov	r23, r19
     ca0:	84 2f       	mov	r24, r20
     ca2:	95 2f       	mov	r25, r21
	uint8_t L_Remainder=0,L_Arr[16],L_Index_i=0,L_Index_j;
	if (a_number==0)
	{
		LCD_WRITE_DATA('0');
	}
	while(a_number>0)
     ca4:	61 15       	cp	r22, r1
     ca6:	71 05       	cpc	r23, r1
     ca8:	81 05       	cpc	r24, r1
     caa:	91 05       	cpc	r25, r1
     cac:	41 f7       	brne	.-48     	; 0xc7e <LCD_Write_Number+0x44>
	L_Arr[L_Index_i]=L_Remainder+'0';    /*tp display the number it self, when we add the zero asci it shits the number to it's asci*/
	L_Index_i++;
	a_number/=10;
	}
	
	for (L_Index_j=L_Index_i;L_Index_j>0;L_Index_j--)    /*to display the array of number */
     cae:	11 23       	and	r17, r17
     cb0:	41 f0       	breq	.+16     	; 0xcc2 <LCD_Write_Number+0x88>
	{
		LCD_WRITE_DATA(L_Arr[L_Index_j-1]);
     cb2:	fe 01       	movw	r30, r28
     cb4:	e1 0f       	add	r30, r17
     cb6:	f1 1d       	adc	r31, r1
     cb8:	80 81       	ld	r24, Z
     cba:	0e 94 6f 05 	call	0xade	; 0xade <LCD_WRITE_DATA>
	L_Arr[L_Index_i]=L_Remainder+'0';    /*tp display the number it self, when we add the zero asci it shits the number to it's asci*/
	L_Index_i++;
	a_number/=10;
	}
	
	for (L_Index_j=L_Index_i;L_Index_j>0;L_Index_j--)    /*to display the array of number */
     cbe:	11 50       	subi	r17, 0x01	; 1
     cc0:	c1 f7       	brne	.-16     	; 0xcb2 <LCD_Write_Number+0x78>
	{
		LCD_WRITE_DATA(L_Arr[L_Index_j-1]);
	}
}
     cc2:	60 96       	adiw	r28, 0x10	; 16
     cc4:	0f b6       	in	r0, 0x3f	; 63
     cc6:	f8 94       	cli
     cc8:	de bf       	out	0x3e, r29	; 62
     cca:	0f be       	out	0x3f, r0	; 63
     ccc:	cd bf       	out	0x3d, r28	; 61
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	1f 91       	pop	r17
     cd4:	ff 90       	pop	r15
     cd6:	ef 90       	pop	r14
     cd8:	bf 90       	pop	r11
     cda:	af 90       	pop	r10
     cdc:	9f 90       	pop	r9
     cde:	8f 90       	pop	r8
     ce0:	08 95       	ret

00000ce2 <LCD_Clear>:
/**DESCRIPTION:-
  This Function Clears The LCD
  **/
void LCD_Clear(void)
{
	LCD_WRITE_COMMAND(0x01);
     ce2:	81 e0       	ldi	r24, 0x01	; 1
     ce4:	0e 94 0b 05 	call	0xa16	; 0xa16 <LCD_WRITE_COMMAND>
     ce8:	08 95       	ret

00000cea <LCD_GoTo>:
  This Function Takes a Specific Line and a Cell On The LCD and Displays the Data In That Location
  **/
void LCD_GoTo(uint8_t a_line,uint8_t a_cell)
{
//0x80 this is from data sheet to write an address on the DDRAM"screen"*/
	if (a_line==1)
     cea:	81 30       	cpi	r24, 0x01	; 1
     cec:	29 f4       	brne	.+10     	; 0xcf8 <LCD_GoTo+0xe>
	{
		LCD_WRITE_COMMAND(0x80+a_cell);    /*0x80 means we ant to write an address and a_cell is the address we want*/
     cee:	80 e8       	ldi	r24, 0x80	; 128
     cf0:	86 0f       	add	r24, r22
     cf2:	0e 94 0b 05 	call	0xa16	; 0xa16 <LCD_WRITE_COMMAND>
     cf6:	08 95       	ret
	}
	else if (a_line==2)
     cf8:	82 30       	cpi	r24, 0x02	; 2
     cfa:	21 f4       	brne	.+8      	; 0xd04 <LCD_GoTo+0x1a>
	{
		LCD_WRITE_COMMAND(0x80+0x40+a_cell);  /*0x40 to start from cell 0 at line 2 from the data sheet*/	
     cfc:	80 ec       	ldi	r24, 0xC0	; 192
     cfe:	86 0f       	add	r24, r22
     d00:	0e 94 0b 05 	call	0xa16	; 0xa16 <LCD_WRITE_COMMAND>
     d04:	08 95       	ret

00000d06 <Car_Moving_FWD>:
     d06:	60 e0       	ldi	r22, 0x00	; 0
     d08:	8a e1       	ldi	r24, 0x1A	; 26
     d0a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d0e:	61 e0       	ldi	r22, 0x01	; 1
     d10:	8b e1       	ldi	r24, 0x1B	; 27
     d12:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d16:	60 e0       	ldi	r22, 0x00	; 0
     d18:	8e e1       	ldi	r24, 0x1E	; 30
     d1a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d1e:	61 e0       	ldi	r22, 0x01	; 1
     d20:	8f e1       	ldi	r24, 0x1F	; 31
     d22:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d26:	08 95       	ret

00000d28 <Car_Moving_BWD>:
     d28:	61 e0       	ldi	r22, 0x01	; 1
     d2a:	8a e1       	ldi	r24, 0x1A	; 26
     d2c:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d30:	60 e0       	ldi	r22, 0x00	; 0
     d32:	8b e1       	ldi	r24, 0x1B	; 27
     d34:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d38:	61 e0       	ldi	r22, 0x01	; 1
     d3a:	8e e1       	ldi	r24, 0x1E	; 30
     d3c:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d40:	60 e0       	ldi	r22, 0x00	; 0
     d42:	8f e1       	ldi	r24, 0x1F	; 31
     d44:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d48:	08 95       	ret

00000d4a <Car_Stop>:
     d4a:	60 e0       	ldi	r22, 0x00	; 0
     d4c:	8a e1       	ldi	r24, 0x1A	; 26
     d4e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d52:	60 e0       	ldi	r22, 0x00	; 0
     d54:	8b e1       	ldi	r24, 0x1B	; 27
     d56:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d5a:	60 e0       	ldi	r22, 0x00	; 0
     d5c:	8e e1       	ldi	r24, 0x1E	; 30
     d5e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d62:	60 e0       	ldi	r22, 0x00	; 0
     d64:	8f e1       	ldi	r24, 0x1F	; 31
     d66:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d6a:	08 95       	ret

00000d6c <Car_Rotating_Right>:
     d6c:	61 e0       	ldi	r22, 0x01	; 1
     d6e:	8a e1       	ldi	r24, 0x1A	; 26
     d70:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d74:	60 e0       	ldi	r22, 0x00	; 0
     d76:	8b e1       	ldi	r24, 0x1B	; 27
     d78:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d7c:	60 e0       	ldi	r22, 0x00	; 0
     d7e:	8e e1       	ldi	r24, 0x1E	; 30
     d80:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d84:	61 e0       	ldi	r22, 0x01	; 1
     d86:	8f e1       	ldi	r24, 0x1F	; 31
     d88:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d8c:	08 95       	ret

00000d8e <Car_Rotating_Left>:
     d8e:	60 e0       	ldi	r22, 0x00	; 0
     d90:	8a e1       	ldi	r24, 0x1A	; 26
     d92:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d96:	61 e0       	ldi	r22, 0x01	; 1
     d98:	8b e1       	ldi	r24, 0x1B	; 27
     d9a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     d9e:	61 e0       	ldi	r22, 0x01	; 1
     da0:	8e e1       	ldi	r24, 0x1E	; 30
     da2:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     da6:	60 e0       	ldi	r22, 0x00	; 0
     da8:	8f e1       	ldi	r24, 0x1F	; 31
     daa:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
     dae:	08 95       	ret

00000db0 <ultrasonicgetTime>:
	
}


 void ultrasonicgetTime (void)
{
     db0:	0f 93       	push	r16
     db2:	1f 93       	push	r17
     db4:	cf 93       	push	r28
     db6:	df 93       	push	r29
	static uint8_t flag=0;
	static uint32_t T1=0;
	static uint32_t T2=0;
	if (flag==0)
     db8:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <flag.1986>
     dbc:	81 11       	cpse	r24, r1
     dbe:	14 c0       	rjmp	.+40     	; 0xde8 <ultrasonicgetTime+0x38>
	{
		T1=TCNT1;
     dc0:	8c b5       	in	r24, 0x2c	; 44
     dc2:	9d b5       	in	r25, 0x2d	; 45
     dc4:	a0 e0       	ldi	r26, 0x00	; 0
     dc6:	b0 e0       	ldi	r27, 0x00	; 0
     dc8:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <T1.1987>
     dcc:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <T1.1987+0x1>
     dd0:	a0 93 59 01 	sts	0x0159, r26	; 0x800159 <T1.1987+0x2>
     dd4:	b0 93 5a 01 	sts	0x015A, r27	; 0x80015a <T1.1987+0x3>
		Icu_Trigger(ECO_PIN,FALLING_EDGE);
     dd8:	62 e0       	ldi	r22, 0x02	; 2
     dda:	82 e0       	ldi	r24, 0x02	; 2
     ddc:	0e 94 94 04 	call	0x928	; 0x928 <Icu_Trigger>
		flag=1;
     de0:	81 e0       	ldi	r24, 0x01	; 1
     de2:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <flag.1986>
     de6:	39 c0       	rjmp	.+114    	; 0xe5a <ultrasonicgetTime+0xaa>
	}
	else if (flag==1)
     de8:	81 30       	cpi	r24, 0x01	; 1
     dea:	b9 f5       	brne	.+110    	; 0xe5a <ultrasonicgetTime+0xaa>
	{
		T2=TCNT1;
     dec:	8c b5       	in	r24, 0x2c	; 44
     dee:	9d b5       	in	r25, 0x2d	; 45
     df0:	a0 e0       	ldi	r26, 0x00	; 0
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <T2.1988>
     df8:	90 93 54 01 	sts	0x0154, r25	; 0x800154 <T2.1988+0x1>
     dfc:	a0 93 55 01 	sts	0x0155, r26	; 0x800155 <T2.1988+0x2>
     e00:	b0 93 56 01 	sts	0x0156, r27	; 0x800156 <T2.1988+0x3>
		Icu_Disable(ECO_PIN);
     e04:	82 e0       	ldi	r24, 0x02	; 2
     e06:	0e 94 8c 04 	call	0x918	; 0x918 <Icu_Disable>
		flag=0;
     e0a:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <flag.1986>
		
		*Disptr=(T2-T1)/58;
     e0e:	c0 91 5c 01 	lds	r28, 0x015C	; 0x80015c <Disptr>
     e12:	d0 91 5d 01 	lds	r29, 0x015D	; 0x80015d <Disptr+0x1>
     e16:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <T2.1988>
     e1a:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <T2.1988+0x1>
     e1e:	a0 91 55 01 	lds	r26, 0x0155	; 0x800155 <T2.1988+0x2>
     e22:	b0 91 56 01 	lds	r27, 0x0156	; 0x800156 <T2.1988+0x3>
     e26:	00 91 57 01 	lds	r16, 0x0157	; 0x800157 <T1.1987>
     e2a:	10 91 58 01 	lds	r17, 0x0158	; 0x800158 <T1.1987+0x1>
     e2e:	20 91 59 01 	lds	r18, 0x0159	; 0x800159 <T1.1987+0x2>
     e32:	30 91 5a 01 	lds	r19, 0x015A	; 0x80015a <T1.1987+0x3>
     e36:	bc 01       	movw	r22, r24
     e38:	cd 01       	movw	r24, r26
     e3a:	60 1b       	sub	r22, r16
     e3c:	71 0b       	sbc	r23, r17
     e3e:	82 0b       	sbc	r24, r18
     e40:	93 0b       	sbc	r25, r19
     e42:	2a e3       	ldi	r18, 0x3A	; 58
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	40 e0       	ldi	r20, 0x00	; 0
     e48:	50 e0       	ldi	r21, 0x00	; 0
     e4a:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <__udivmodsi4>
     e4e:	28 83       	st	Y, r18
     e50:	39 83       	std	Y+1, r19	; 0x01
     e52:	4a 83       	std	Y+2, r20	; 0x02
     e54:	5b 83       	std	Y+3, r21	; 0x03
		//TCNT1=0;
		Get_Dis=0;
     e56:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <Get_Dis>
	}
}
     e5a:	df 91       	pop	r29
     e5c:	cf 91       	pop	r28
     e5e:	1f 91       	pop	r17
     e60:	0f 91       	pop	r16
     e62:	08 95       	ret

00000e64 <Ultrasonic_init_SW>:

static uint32_t*Disptr;

void Ultrasonic_init_SW(void)
{
	DIO_INITPIN(TRIGGER_PIN,OUTPUT);
     e64:	60 e0       	ldi	r22, 0x00	; 0
     e66:	8b e0       	ldi	r24, 0x0B	; 11
     e68:	0e 94 60 07 	call	0xec0	; 0xec0 <DIO_INITPIN>
     e6c:	08 95       	ret

00000e6e <Ultrasonic_GetDistance>:
}

void Ultrasonic_GetDistance(uint32_t*dis)
{
	if (Get_Dis==0)
     e6e:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <Get_Dis>
     e72:	21 11       	cpse	r18, r1
     e74:	1f c0       	rjmp	.+62     	; 0xeb4 <Ultrasonic_GetDistance+0x46>
	{
		Disptr=dis;
     e76:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <Disptr+0x1>
     e7a:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <Disptr>
		Icu_SetCallback(ECO_PIN,ultrasonicgetTime);
     e7e:	68 ed       	ldi	r22, 0xD8	; 216
     e80:	76 e0       	ldi	r23, 0x06	; 6
     e82:	82 e0       	ldi	r24, 0x02	; 2
     e84:	0e 94 97 04 	call	0x92e	; 0x92e <Icu_SetCallback>
		Icu_Trigger(ECO_PIN,RISING_EDGE);
     e88:	63 e0       	ldi	r22, 0x03	; 3
     e8a:	82 e0       	ldi	r24, 0x02	; 2
     e8c:	0e 94 94 04 	call	0x928	; 0x928 <Icu_Trigger>
		Icu_Enable(ECO_PIN);
     e90:	82 e0       	ldi	r24, 0x02	; 2
     e92:	0e 94 7d 04 	call	0x8fa	; 0x8fa <Icu_Enable>
		DIO_WRITEPIN(TRIGGER_PIN,HIGH);
     e96:	61 e0       	ldi	r22, 0x01	; 1
     e98:	8b e0       	ldi	r24, 0x0B	; 11
     e9a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e9e:	8a e1       	ldi	r24, 0x1A	; 26
     ea0:	8a 95       	dec	r24
     ea2:	f1 f7       	brne	.-4      	; 0xea0 <Ultrasonic_GetDistance+0x32>
     ea4:	00 c0       	rjmp	.+0      	; 0xea6 <Ultrasonic_GetDistance+0x38>
		_delay_us(10);
		DIO_WRITEPIN(TRIGGER_PIN,LOW);
     ea6:	60 e0       	ldi	r22, 0x00	; 0
     ea8:	8b e0       	ldi	r24, 0x0B	; 11
     eaa:	0e 94 62 08 	call	0x10c4	; 0x10c4 <DIO_WRITEPIN>
		Get_Dis=1;
     eae:	81 e0       	ldi	r24, 0x01	; 1
     eb0:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <Get_Dis>
     eb4:	08 95       	ret

00000eb6 <main>:
#include "APP/app.h"

int main(void)
{
	uint32_t diss=0;	
	app_Init();
     eb6:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <app_Init>
 
 while(1)
 {
	 	
app_Start();
     eba:	0e 94 87 03 	call	0x70e	; 0x70e <app_Start>
     ebe:	fd cf       	rjmp	.-6      	; 0xeba <main+0x4>

00000ec0 <DIO_INITPIN>:
     ec0:	98 2f       	mov	r25, r24
     ec2:	96 95       	lsr	r25
     ec4:	96 95       	lsr	r25
     ec6:	96 95       	lsr	r25
     ec8:	95 30       	cpi	r25, 0x05	; 5
     eca:	08 f0       	brcs	.+2      	; 0xece <DIO_INITPIN+0xe>
     ecc:	f9 c0       	rjmp	.+498    	; 0x10c0 <DIO_INITPIN+0x200>
     ece:	87 70       	andi	r24, 0x07	; 7
     ed0:	61 30       	cpi	r22, 0x01	; 1
     ed2:	31 f0       	breq	.+12     	; 0xee0 <DIO_INITPIN+0x20>
     ed4:	08 f4       	brcc	.+2      	; 0xed8 <DIO_INITPIN+0x18>
     ed6:	a4 c0       	rjmp	.+328    	; 0x1020 <DIO_INITPIN+0x160>
     ed8:	62 30       	cpi	r22, 0x02	; 2
     eda:	09 f4       	brne	.+2      	; 0xede <DIO_INITPIN+0x1e>
     edc:	51 c0       	rjmp	.+162    	; 0xf80 <DIO_INITPIN+0xc0>
     ede:	ef c0       	rjmp	.+478    	; 0x10be <DIO_INITPIN+0x1fe>
     ee0:	91 30       	cpi	r25, 0x01	; 1
     ee2:	c1 f0       	breq	.+48     	; 0xf14 <DIO_INITPIN+0x54>
     ee4:	28 f0       	brcs	.+10     	; 0xef0 <DIO_INITPIN+0x30>
     ee6:	92 30       	cpi	r25, 0x02	; 2
     ee8:	39 f1       	breq	.+78     	; 0xf38 <DIO_INITPIN+0x78>
     eea:	93 30       	cpi	r25, 0x03	; 3
     eec:	b9 f1       	breq	.+110    	; 0xf5c <DIO_INITPIN+0x9c>
     eee:	e7 c0       	rjmp	.+462    	; 0x10be <DIO_INITPIN+0x1fe>
     ef0:	4a b3       	in	r20, 0x1a	; 26
     ef2:	21 e0       	ldi	r18, 0x01	; 1
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	b9 01       	movw	r22, r18
     ef8:	02 c0       	rjmp	.+4      	; 0xefe <DIO_INITPIN+0x3e>
     efa:	66 0f       	add	r22, r22
     efc:	77 1f       	adc	r23, r23
     efe:	8a 95       	dec	r24
     f00:	e2 f7       	brpl	.-8      	; 0xefa <DIO_INITPIN+0x3a>
     f02:	cb 01       	movw	r24, r22
     f04:	80 95       	com	r24
     f06:	94 2f       	mov	r25, r20
     f08:	98 23       	and	r25, r24
     f0a:	9a bb       	out	0x1a, r25	; 26
     f0c:	9b b3       	in	r25, 0x1b	; 27
     f0e:	89 23       	and	r24, r25
     f10:	8b bb       	out	0x1b, r24	; 27
     f12:	d5 c0       	rjmp	.+426    	; 0x10be <DIO_INITPIN+0x1fe>
     f14:	47 b3       	in	r20, 0x17	; 23
     f16:	21 e0       	ldi	r18, 0x01	; 1
     f18:	30 e0       	ldi	r19, 0x00	; 0
     f1a:	b9 01       	movw	r22, r18
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <DIO_INITPIN+0x62>
     f1e:	66 0f       	add	r22, r22
     f20:	77 1f       	adc	r23, r23
     f22:	8a 95       	dec	r24
     f24:	e2 f7       	brpl	.-8      	; 0xf1e <DIO_INITPIN+0x5e>
     f26:	cb 01       	movw	r24, r22
     f28:	80 95       	com	r24
     f2a:	94 2f       	mov	r25, r20
     f2c:	98 23       	and	r25, r24
     f2e:	97 bb       	out	0x17, r25	; 23
     f30:	98 b3       	in	r25, 0x18	; 24
     f32:	89 23       	and	r24, r25
     f34:	88 bb       	out	0x18, r24	; 24
     f36:	c3 c0       	rjmp	.+390    	; 0x10be <DIO_INITPIN+0x1fe>
     f38:	44 b3       	in	r20, 0x14	; 20
     f3a:	21 e0       	ldi	r18, 0x01	; 1
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	b9 01       	movw	r22, r18
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <DIO_INITPIN+0x86>
     f42:	66 0f       	add	r22, r22
     f44:	77 1f       	adc	r23, r23
     f46:	8a 95       	dec	r24
     f48:	e2 f7       	brpl	.-8      	; 0xf42 <DIO_INITPIN+0x82>
     f4a:	cb 01       	movw	r24, r22
     f4c:	80 95       	com	r24
     f4e:	94 2f       	mov	r25, r20
     f50:	98 23       	and	r25, r24
     f52:	94 bb       	out	0x14, r25	; 20
     f54:	95 b3       	in	r25, 0x15	; 21
     f56:	89 23       	and	r24, r25
     f58:	85 bb       	out	0x15, r24	; 21
     f5a:	b1 c0       	rjmp	.+354    	; 0x10be <DIO_INITPIN+0x1fe>
     f5c:	41 b3       	in	r20, 0x11	; 17
     f5e:	21 e0       	ldi	r18, 0x01	; 1
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	b9 01       	movw	r22, r18
     f64:	02 c0       	rjmp	.+4      	; 0xf6a <DIO_INITPIN+0xaa>
     f66:	66 0f       	add	r22, r22
     f68:	77 1f       	adc	r23, r23
     f6a:	8a 95       	dec	r24
     f6c:	e2 f7       	brpl	.-8      	; 0xf66 <DIO_INITPIN+0xa6>
     f6e:	cb 01       	movw	r24, r22
     f70:	80 95       	com	r24
     f72:	94 2f       	mov	r25, r20
     f74:	98 23       	and	r25, r24
     f76:	91 bb       	out	0x11, r25	; 17
     f78:	92 b3       	in	r25, 0x12	; 18
     f7a:	89 23       	and	r24, r25
     f7c:	82 bb       	out	0x12, r24	; 18
     f7e:	9f c0       	rjmp	.+318    	; 0x10be <DIO_INITPIN+0x1fe>
     f80:	91 30       	cpi	r25, 0x01	; 1
     f82:	c1 f0       	breq	.+48     	; 0xfb4 <DIO_INITPIN+0xf4>
     f84:	28 f0       	brcs	.+10     	; 0xf90 <DIO_INITPIN+0xd0>
     f86:	92 30       	cpi	r25, 0x02	; 2
     f88:	39 f1       	breq	.+78     	; 0xfd8 <DIO_INITPIN+0x118>
     f8a:	93 30       	cpi	r25, 0x03	; 3
     f8c:	b9 f1       	breq	.+110    	; 0xffc <DIO_INITPIN+0x13c>
     f8e:	97 c0       	rjmp	.+302    	; 0x10be <DIO_INITPIN+0x1fe>
     f90:	4a b3       	in	r20, 0x1a	; 26
     f92:	21 e0       	ldi	r18, 0x01	; 1
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	b9 01       	movw	r22, r18
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <DIO_INITPIN+0xde>
     f9a:	66 0f       	add	r22, r22
     f9c:	77 1f       	adc	r23, r23
     f9e:	8a 95       	dec	r24
     fa0:	e2 f7       	brpl	.-8      	; 0xf9a <DIO_INITPIN+0xda>
     fa2:	cb 01       	movw	r24, r22
     fa4:	96 2f       	mov	r25, r22
     fa6:	90 95       	com	r25
     fa8:	94 23       	and	r25, r20
     faa:	9a bb       	out	0x1a, r25	; 26
     fac:	9b b3       	in	r25, 0x1b	; 27
     fae:	89 2b       	or	r24, r25
     fb0:	8b bb       	out	0x1b, r24	; 27
     fb2:	85 c0       	rjmp	.+266    	; 0x10be <DIO_INITPIN+0x1fe>
     fb4:	47 b3       	in	r20, 0x17	; 23
     fb6:	21 e0       	ldi	r18, 0x01	; 1
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	b9 01       	movw	r22, r18
     fbc:	02 c0       	rjmp	.+4      	; 0xfc2 <DIO_INITPIN+0x102>
     fbe:	66 0f       	add	r22, r22
     fc0:	77 1f       	adc	r23, r23
     fc2:	8a 95       	dec	r24
     fc4:	e2 f7       	brpl	.-8      	; 0xfbe <DIO_INITPIN+0xfe>
     fc6:	cb 01       	movw	r24, r22
     fc8:	96 2f       	mov	r25, r22
     fca:	90 95       	com	r25
     fcc:	94 23       	and	r25, r20
     fce:	97 bb       	out	0x17, r25	; 23
     fd0:	98 b3       	in	r25, 0x18	; 24
     fd2:	89 2b       	or	r24, r25
     fd4:	88 bb       	out	0x18, r24	; 24
     fd6:	73 c0       	rjmp	.+230    	; 0x10be <DIO_INITPIN+0x1fe>
     fd8:	44 b3       	in	r20, 0x14	; 20
     fda:	21 e0       	ldi	r18, 0x01	; 1
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	b9 01       	movw	r22, r18
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <DIO_INITPIN+0x126>
     fe2:	66 0f       	add	r22, r22
     fe4:	77 1f       	adc	r23, r23
     fe6:	8a 95       	dec	r24
     fe8:	e2 f7       	brpl	.-8      	; 0xfe2 <DIO_INITPIN+0x122>
     fea:	cb 01       	movw	r24, r22
     fec:	96 2f       	mov	r25, r22
     fee:	90 95       	com	r25
     ff0:	94 23       	and	r25, r20
     ff2:	94 bb       	out	0x14, r25	; 20
     ff4:	95 b3       	in	r25, 0x15	; 21
     ff6:	89 2b       	or	r24, r25
     ff8:	85 bb       	out	0x15, r24	; 21
     ffa:	61 c0       	rjmp	.+194    	; 0x10be <DIO_INITPIN+0x1fe>
     ffc:	41 b3       	in	r20, 0x11	; 17
     ffe:	21 e0       	ldi	r18, 0x01	; 1
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	b9 01       	movw	r22, r18
    1004:	02 c0       	rjmp	.+4      	; 0x100a <DIO_INITPIN+0x14a>
    1006:	66 0f       	add	r22, r22
    1008:	77 1f       	adc	r23, r23
    100a:	8a 95       	dec	r24
    100c:	e2 f7       	brpl	.-8      	; 0x1006 <DIO_INITPIN+0x146>
    100e:	cb 01       	movw	r24, r22
    1010:	96 2f       	mov	r25, r22
    1012:	90 95       	com	r25
    1014:	94 23       	and	r25, r20
    1016:	91 bb       	out	0x11, r25	; 17
    1018:	92 b3       	in	r25, 0x12	; 18
    101a:	89 2b       	or	r24, r25
    101c:	82 bb       	out	0x12, r24	; 18
    101e:	4f c0       	rjmp	.+158    	; 0x10be <DIO_INITPIN+0x1fe>
    1020:	91 30       	cpi	r25, 0x01	; 1
    1022:	c1 f0       	breq	.+48     	; 0x1054 <DIO_INITPIN+0x194>
    1024:	28 f0       	brcs	.+10     	; 0x1030 <DIO_INITPIN+0x170>
    1026:	92 30       	cpi	r25, 0x02	; 2
    1028:	39 f1       	breq	.+78     	; 0x1078 <DIO_INITPIN+0x1b8>
    102a:	93 30       	cpi	r25, 0x03	; 3
    102c:	b9 f1       	breq	.+110    	; 0x109c <DIO_INITPIN+0x1dc>
    102e:	47 c0       	rjmp	.+142    	; 0x10be <DIO_INITPIN+0x1fe>
    1030:	4b b3       	in	r20, 0x1b	; 27
    1032:	21 e0       	ldi	r18, 0x01	; 1
    1034:	30 e0       	ldi	r19, 0x00	; 0
    1036:	b9 01       	movw	r22, r18
    1038:	02 c0       	rjmp	.+4      	; 0x103e <DIO_INITPIN+0x17e>
    103a:	66 0f       	add	r22, r22
    103c:	77 1f       	adc	r23, r23
    103e:	8a 95       	dec	r24
    1040:	e2 f7       	brpl	.-8      	; 0x103a <DIO_INITPIN+0x17a>
    1042:	cb 01       	movw	r24, r22
    1044:	96 2f       	mov	r25, r22
    1046:	90 95       	com	r25
    1048:	94 23       	and	r25, r20
    104a:	9b bb       	out	0x1b, r25	; 27
    104c:	9a b3       	in	r25, 0x1a	; 26
    104e:	89 2b       	or	r24, r25
    1050:	8a bb       	out	0x1a, r24	; 26
    1052:	35 c0       	rjmp	.+106    	; 0x10be <DIO_INITPIN+0x1fe>
    1054:	48 b3       	in	r20, 0x18	; 24
    1056:	21 e0       	ldi	r18, 0x01	; 1
    1058:	30 e0       	ldi	r19, 0x00	; 0
    105a:	b9 01       	movw	r22, r18
    105c:	02 c0       	rjmp	.+4      	; 0x1062 <DIO_INITPIN+0x1a2>
    105e:	66 0f       	add	r22, r22
    1060:	77 1f       	adc	r23, r23
    1062:	8a 95       	dec	r24
    1064:	e2 f7       	brpl	.-8      	; 0x105e <DIO_INITPIN+0x19e>
    1066:	cb 01       	movw	r24, r22
    1068:	96 2f       	mov	r25, r22
    106a:	90 95       	com	r25
    106c:	94 23       	and	r25, r20
    106e:	98 bb       	out	0x18, r25	; 24
    1070:	97 b3       	in	r25, 0x17	; 23
    1072:	89 2b       	or	r24, r25
    1074:	87 bb       	out	0x17, r24	; 23
    1076:	23 c0       	rjmp	.+70     	; 0x10be <DIO_INITPIN+0x1fe>
    1078:	45 b3       	in	r20, 0x15	; 21
    107a:	21 e0       	ldi	r18, 0x01	; 1
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	b9 01       	movw	r22, r18
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <DIO_INITPIN+0x1c6>
    1082:	66 0f       	add	r22, r22
    1084:	77 1f       	adc	r23, r23
    1086:	8a 95       	dec	r24
    1088:	e2 f7       	brpl	.-8      	; 0x1082 <DIO_INITPIN+0x1c2>
    108a:	cb 01       	movw	r24, r22
    108c:	96 2f       	mov	r25, r22
    108e:	90 95       	com	r25
    1090:	94 23       	and	r25, r20
    1092:	95 bb       	out	0x15, r25	; 21
    1094:	94 b3       	in	r25, 0x14	; 20
    1096:	89 2b       	or	r24, r25
    1098:	84 bb       	out	0x14, r24	; 20
    109a:	11 c0       	rjmp	.+34     	; 0x10be <DIO_INITPIN+0x1fe>
    109c:	42 b3       	in	r20, 0x12	; 18
    109e:	21 e0       	ldi	r18, 0x01	; 1
    10a0:	30 e0       	ldi	r19, 0x00	; 0
    10a2:	b9 01       	movw	r22, r18
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <DIO_INITPIN+0x1ea>
    10a6:	66 0f       	add	r22, r22
    10a8:	77 1f       	adc	r23, r23
    10aa:	8a 95       	dec	r24
    10ac:	e2 f7       	brpl	.-8      	; 0x10a6 <DIO_INITPIN+0x1e6>
    10ae:	cb 01       	movw	r24, r22
    10b0:	96 2f       	mov	r25, r22
    10b2:	90 95       	com	r25
    10b4:	94 23       	and	r25, r20
    10b6:	92 bb       	out	0x12, r25	; 18
    10b8:	91 b3       	in	r25, 0x11	; 17
    10ba:	89 2b       	or	r24, r25
    10bc:	81 bb       	out	0x11, r24	; 17
    10be:	08 95       	ret
    10c0:	82 e0       	ldi	r24, 0x02	; 2
    10c2:	08 95       	ret

000010c4 <DIO_WRITEPIN>:
    10c4:	98 2f       	mov	r25, r24
    10c6:	96 95       	lsr	r25
    10c8:	96 95       	lsr	r25
    10ca:	96 95       	lsr	r25
    10cc:	95 30       	cpi	r25, 0x05	; 5
    10ce:	08 f0       	brcs	.+2      	; 0x10d2 <DIO_WRITEPIN+0xe>
    10d0:	8e c0       	rjmp	.+284    	; 0x11ee <DIO_WRITEPIN+0x12a>
    10d2:	63 30       	cpi	r22, 0x03	; 3
    10d4:	08 f0       	brcs	.+2      	; 0x10d8 <DIO_WRITEPIN+0x14>
    10d6:	8d c0       	rjmp	.+282    	; 0x11f2 <DIO_WRITEPIN+0x12e>
    10d8:	87 70       	andi	r24, 0x07	; 7
    10da:	61 30       	cpi	r22, 0x01	; 1
    10dc:	09 f0       	breq	.+2      	; 0x10e0 <DIO_WRITEPIN+0x1c>
    10de:	40 c0       	rjmp	.+128    	; 0x1160 <DIO_WRITEPIN+0x9c>
    10e0:	91 30       	cpi	r25, 0x01	; 1
    10e2:	a1 f0       	breq	.+40     	; 0x110c <DIO_WRITEPIN+0x48>
    10e4:	28 f0       	brcs	.+10     	; 0x10f0 <DIO_WRITEPIN+0x2c>
    10e6:	92 30       	cpi	r25, 0x02	; 2
    10e8:	f9 f0       	breq	.+62     	; 0x1128 <DIO_WRITEPIN+0x64>
    10ea:	93 30       	cpi	r25, 0x03	; 3
    10ec:	59 f1       	breq	.+86     	; 0x1144 <DIO_WRITEPIN+0x80>
    10ee:	83 c0       	rjmp	.+262    	; 0x11f6 <DIO_WRITEPIN+0x132>
    10f0:	4b b3       	in	r20, 0x1b	; 27
    10f2:	21 e0       	ldi	r18, 0x01	; 1
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	b9 01       	movw	r22, r18
    10f8:	02 c0       	rjmp	.+4      	; 0x10fe <DIO_WRITEPIN+0x3a>
    10fa:	66 0f       	add	r22, r22
    10fc:	77 1f       	adc	r23, r23
    10fe:	8a 95       	dec	r24
    1100:	e2 f7       	brpl	.-8      	; 0x10fa <DIO_WRITEPIN+0x36>
    1102:	cb 01       	movw	r24, r22
    1104:	84 2b       	or	r24, r20
    1106:	8b bb       	out	0x1b, r24	; 27
    1108:	80 e0       	ldi	r24, 0x00	; 0
    110a:	08 95       	ret
    110c:	48 b3       	in	r20, 0x18	; 24
    110e:	21 e0       	ldi	r18, 0x01	; 1
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	b9 01       	movw	r22, r18
    1114:	02 c0       	rjmp	.+4      	; 0x111a <DIO_WRITEPIN+0x56>
    1116:	66 0f       	add	r22, r22
    1118:	77 1f       	adc	r23, r23
    111a:	8a 95       	dec	r24
    111c:	e2 f7       	brpl	.-8      	; 0x1116 <DIO_WRITEPIN+0x52>
    111e:	cb 01       	movw	r24, r22
    1120:	84 2b       	or	r24, r20
    1122:	88 bb       	out	0x18, r24	; 24
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	08 95       	ret
    1128:	45 b3       	in	r20, 0x15	; 21
    112a:	21 e0       	ldi	r18, 0x01	; 1
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	b9 01       	movw	r22, r18
    1130:	02 c0       	rjmp	.+4      	; 0x1136 <DIO_WRITEPIN+0x72>
    1132:	66 0f       	add	r22, r22
    1134:	77 1f       	adc	r23, r23
    1136:	8a 95       	dec	r24
    1138:	e2 f7       	brpl	.-8      	; 0x1132 <DIO_WRITEPIN+0x6e>
    113a:	cb 01       	movw	r24, r22
    113c:	84 2b       	or	r24, r20
    113e:	85 bb       	out	0x15, r24	; 21
    1140:	80 e0       	ldi	r24, 0x00	; 0
    1142:	08 95       	ret
    1144:	42 b3       	in	r20, 0x12	; 18
    1146:	21 e0       	ldi	r18, 0x01	; 1
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	b9 01       	movw	r22, r18
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <DIO_WRITEPIN+0x8e>
    114e:	66 0f       	add	r22, r22
    1150:	77 1f       	adc	r23, r23
    1152:	8a 95       	dec	r24
    1154:	e2 f7       	brpl	.-8      	; 0x114e <DIO_WRITEPIN+0x8a>
    1156:	cb 01       	movw	r24, r22
    1158:	84 2b       	or	r24, r20
    115a:	82 bb       	out	0x12, r24	; 18
    115c:	80 e0       	ldi	r24, 0x00	; 0
    115e:	08 95       	ret
    1160:	61 11       	cpse	r22, r1
    1162:	44 c0       	rjmp	.+136    	; 0x11ec <DIO_WRITEPIN+0x128>
    1164:	91 30       	cpi	r25, 0x01	; 1
    1166:	a9 f0       	breq	.+42     	; 0x1192 <DIO_WRITEPIN+0xce>
    1168:	28 f0       	brcs	.+10     	; 0x1174 <DIO_WRITEPIN+0xb0>
    116a:	92 30       	cpi	r25, 0x02	; 2
    116c:	09 f1       	breq	.+66     	; 0x11b0 <DIO_WRITEPIN+0xec>
    116e:	93 30       	cpi	r25, 0x03	; 3
    1170:	71 f1       	breq	.+92     	; 0x11ce <DIO_WRITEPIN+0x10a>
    1172:	43 c0       	rjmp	.+134    	; 0x11fa <DIO_WRITEPIN+0x136>
    1174:	4b b3       	in	r20, 0x1b	; 27
    1176:	21 e0       	ldi	r18, 0x01	; 1
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	b9 01       	movw	r22, r18
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <DIO_WRITEPIN+0xbe>
    117e:	66 0f       	add	r22, r22
    1180:	77 1f       	adc	r23, r23
    1182:	8a 95       	dec	r24
    1184:	e2 f7       	brpl	.-8      	; 0x117e <DIO_WRITEPIN+0xba>
    1186:	cb 01       	movw	r24, r22
    1188:	80 95       	com	r24
    118a:	84 23       	and	r24, r20
    118c:	8b bb       	out	0x1b, r24	; 27
    118e:	80 e0       	ldi	r24, 0x00	; 0
    1190:	08 95       	ret
    1192:	48 b3       	in	r20, 0x18	; 24
    1194:	21 e0       	ldi	r18, 0x01	; 1
    1196:	30 e0       	ldi	r19, 0x00	; 0
    1198:	b9 01       	movw	r22, r18
    119a:	02 c0       	rjmp	.+4      	; 0x11a0 <DIO_WRITEPIN+0xdc>
    119c:	66 0f       	add	r22, r22
    119e:	77 1f       	adc	r23, r23
    11a0:	8a 95       	dec	r24
    11a2:	e2 f7       	brpl	.-8      	; 0x119c <DIO_WRITEPIN+0xd8>
    11a4:	cb 01       	movw	r24, r22
    11a6:	80 95       	com	r24
    11a8:	84 23       	and	r24, r20
    11aa:	88 bb       	out	0x18, r24	; 24
    11ac:	80 e0       	ldi	r24, 0x00	; 0
    11ae:	08 95       	ret
    11b0:	45 b3       	in	r20, 0x15	; 21
    11b2:	21 e0       	ldi	r18, 0x01	; 1
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	b9 01       	movw	r22, r18
    11b8:	02 c0       	rjmp	.+4      	; 0x11be <DIO_WRITEPIN+0xfa>
    11ba:	66 0f       	add	r22, r22
    11bc:	77 1f       	adc	r23, r23
    11be:	8a 95       	dec	r24
    11c0:	e2 f7       	brpl	.-8      	; 0x11ba <DIO_WRITEPIN+0xf6>
    11c2:	cb 01       	movw	r24, r22
    11c4:	80 95       	com	r24
    11c6:	84 23       	and	r24, r20
    11c8:	85 bb       	out	0x15, r24	; 21
    11ca:	80 e0       	ldi	r24, 0x00	; 0
    11cc:	08 95       	ret
    11ce:	42 b3       	in	r20, 0x12	; 18
    11d0:	21 e0       	ldi	r18, 0x01	; 1
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	b9 01       	movw	r22, r18
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <DIO_WRITEPIN+0x118>
    11d8:	66 0f       	add	r22, r22
    11da:	77 1f       	adc	r23, r23
    11dc:	8a 95       	dec	r24
    11de:	e2 f7       	brpl	.-8      	; 0x11d8 <DIO_WRITEPIN+0x114>
    11e0:	cb 01       	movw	r24, r22
    11e2:	80 95       	com	r24
    11e4:	84 23       	and	r24, r20
    11e6:	82 bb       	out	0x12, r24	; 18
    11e8:	80 e0       	ldi	r24, 0x00	; 0
    11ea:	08 95       	ret
    11ec:	08 95       	ret
    11ee:	82 e0       	ldi	r24, 0x02	; 2
    11f0:	08 95       	ret
    11f2:	83 e0       	ldi	r24, 0x03	; 3
    11f4:	08 95       	ret
    11f6:	80 e0       	ldi	r24, 0x00	; 0
    11f8:	08 95       	ret
    11fa:	80 e0       	ldi	r24, 0x00	; 0
    11fc:	08 95       	ret

000011fe <DIO_READPIN>:
    11fe:	98 2f       	mov	r25, r24
    1200:	96 95       	lsr	r25
    1202:	96 95       	lsr	r25
    1204:	96 95       	lsr	r25
    1206:	95 30       	cpi	r25, 0x05	; 5
    1208:	08 f0       	brcs	.+2      	; 0x120c <DIO_READPIN+0xe>
    120a:	41 c0       	rjmp	.+130    	; 0x128e <DIO_READPIN+0x90>
    120c:	87 70       	andi	r24, 0x07	; 7
    120e:	91 30       	cpi	r25, 0x01	; 1
    1210:	a1 f0       	breq	.+40     	; 0x123a <DIO_READPIN+0x3c>
    1212:	28 f0       	brcs	.+10     	; 0x121e <DIO_READPIN+0x20>
    1214:	92 30       	cpi	r25, 0x02	; 2
    1216:	f9 f0       	breq	.+62     	; 0x1256 <DIO_READPIN+0x58>
    1218:	93 30       	cpi	r25, 0x03	; 3
    121a:	59 f1       	breq	.+86     	; 0x1272 <DIO_READPIN+0x74>
    121c:	3a c0       	rjmp	.+116    	; 0x1292 <DIO_READPIN+0x94>
    121e:	29 b3       	in	r18, 0x19	; 25
    1220:	30 e0       	ldi	r19, 0x00	; 0
    1222:	a9 01       	movw	r20, r18
    1224:	02 c0       	rjmp	.+4      	; 0x122a <DIO_READPIN+0x2c>
    1226:	55 95       	asr	r21
    1228:	47 95       	ror	r20
    122a:	8a 95       	dec	r24
    122c:	e2 f7       	brpl	.-8      	; 0x1226 <DIO_READPIN+0x28>
    122e:	ca 01       	movw	r24, r20
    1230:	81 70       	andi	r24, 0x01	; 1
    1232:	fb 01       	movw	r30, r22
    1234:	80 83       	st	Z, r24
    1236:	80 e0       	ldi	r24, 0x00	; 0
    1238:	08 95       	ret
    123a:	26 b3       	in	r18, 0x16	; 22
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	a9 01       	movw	r20, r18
    1240:	02 c0       	rjmp	.+4      	; 0x1246 <DIO_READPIN+0x48>
    1242:	55 95       	asr	r21
    1244:	47 95       	ror	r20
    1246:	8a 95       	dec	r24
    1248:	e2 f7       	brpl	.-8      	; 0x1242 <DIO_READPIN+0x44>
    124a:	ca 01       	movw	r24, r20
    124c:	81 70       	andi	r24, 0x01	; 1
    124e:	fb 01       	movw	r30, r22
    1250:	80 83       	st	Z, r24
    1252:	80 e0       	ldi	r24, 0x00	; 0
    1254:	08 95       	ret
    1256:	23 b3       	in	r18, 0x13	; 19
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	a9 01       	movw	r20, r18
    125c:	02 c0       	rjmp	.+4      	; 0x1262 <DIO_READPIN+0x64>
    125e:	55 95       	asr	r21
    1260:	47 95       	ror	r20
    1262:	8a 95       	dec	r24
    1264:	e2 f7       	brpl	.-8      	; 0x125e <DIO_READPIN+0x60>
    1266:	ca 01       	movw	r24, r20
    1268:	81 70       	andi	r24, 0x01	; 1
    126a:	fb 01       	movw	r30, r22
    126c:	80 83       	st	Z, r24
    126e:	80 e0       	ldi	r24, 0x00	; 0
    1270:	08 95       	ret
    1272:	20 b3       	in	r18, 0x10	; 16
    1274:	30 e0       	ldi	r19, 0x00	; 0
    1276:	a9 01       	movw	r20, r18
    1278:	02 c0       	rjmp	.+4      	; 0x127e <DIO_READPIN+0x80>
    127a:	55 95       	asr	r21
    127c:	47 95       	ror	r20
    127e:	8a 95       	dec	r24
    1280:	e2 f7       	brpl	.-8      	; 0x127a <DIO_READPIN+0x7c>
    1282:	ca 01       	movw	r24, r20
    1284:	81 70       	andi	r24, 0x01	; 1
    1286:	fb 01       	movw	r30, r22
    1288:	80 83       	st	Z, r24
    128a:	80 e0       	ldi	r24, 0x00	; 0
    128c:	08 95       	ret
    128e:	82 e0       	ldi	r24, 0x02	; 2
    1290:	08 95       	ret
    1292:	80 e0       	ldi	r24, 0x00	; 0
    1294:	08 95       	ret

00001296 <DIO_Init>:
    1296:	0f 93       	push	r16
    1298:	1f 93       	push	r17
    129a:	cf 93       	push	r28
    129c:	df 93       	push	r29
    129e:	c7 e6       	ldi	r28, 0x67	; 103
    12a0:	d0 e0       	ldi	r29, 0x00	; 0
    12a2:	0d e8       	ldi	r16, 0x8D	; 141
    12a4:	10 e0       	ldi	r17, 0x00	; 0
    12a6:	69 81       	ldd	r22, Y+1	; 0x01
    12a8:	88 81       	ld	r24, Y
    12aa:	0e 94 60 07 	call	0xec0	; 0xec0 <DIO_INITPIN>
    12ae:	22 96       	adiw	r28, 0x02	; 2
    12b0:	c0 17       	cp	r28, r16
    12b2:	d1 07       	cpc	r29, r17
    12b4:	c1 f7       	brne	.-16     	; 0x12a6 <DIO_Init+0x10>
    12b6:	df 91       	pop	r29
    12b8:	cf 91       	pop	r28
    12ba:	1f 91       	pop	r17
    12bc:	0f 91       	pop	r16
    12be:	08 95       	ret

000012c0 <DIO_write>:
    12c0:	62 34       	cpi	r22, 0x42	; 66
    12c2:	59 f1       	breq	.+86     	; 0x131a <DIO_write+0x5a>
    12c4:	18 f4       	brcc	.+6      	; 0x12cc <DIO_write+0xc>
    12c6:	61 34       	cpi	r22, 0x41	; 65
    12c8:	41 f0       	breq	.+16     	; 0x12da <DIO_write+0x1a>
    12ca:	08 95       	ret
    12cc:	63 34       	cpi	r22, 0x43	; 67
    12ce:	09 f4       	brne	.+2      	; 0x12d2 <DIO_write+0x12>
    12d0:	44 c0       	rjmp	.+136    	; 0x135a <DIO_write+0x9a>
    12d2:	64 34       	cpi	r22, 0x44	; 68
    12d4:	09 f4       	brne	.+2      	; 0x12d8 <DIO_write+0x18>
    12d6:	60 c0       	rjmp	.+192    	; 0x1398 <DIO_write+0xd8>
    12d8:	08 95       	ret
    12da:	41 11       	cpse	r20, r1
    12dc:	0e c0       	rjmp	.+28     	; 0x12fa <DIO_write+0x3a>
    12de:	4b b3       	in	r20, 0x1b	; 27
    12e0:	21 e0       	ldi	r18, 0x01	; 1
    12e2:	30 e0       	ldi	r19, 0x00	; 0
    12e4:	b9 01       	movw	r22, r18
    12e6:	02 c0       	rjmp	.+4      	; 0x12ec <DIO_write+0x2c>
    12e8:	66 0f       	add	r22, r22
    12ea:	77 1f       	adc	r23, r23
    12ec:	8a 95       	dec	r24
    12ee:	e2 f7       	brpl	.-8      	; 0x12e8 <DIO_write+0x28>
    12f0:	cb 01       	movw	r24, r22
    12f2:	80 95       	com	r24
    12f4:	84 23       	and	r24, r20
    12f6:	8b bb       	out	0x1b, r24	; 27
    12f8:	08 95       	ret
    12fa:	41 30       	cpi	r20, 0x01	; 1
    12fc:	09 f0       	breq	.+2      	; 0x1300 <DIO_write+0x40>
    12fe:	6a c0       	rjmp	.+212    	; 0x13d4 <DIO_write+0x114>
    1300:	4b b3       	in	r20, 0x1b	; 27
    1302:	21 e0       	ldi	r18, 0x01	; 1
    1304:	30 e0       	ldi	r19, 0x00	; 0
    1306:	b9 01       	movw	r22, r18
    1308:	02 c0       	rjmp	.+4      	; 0x130e <DIO_write+0x4e>
    130a:	66 0f       	add	r22, r22
    130c:	77 1f       	adc	r23, r23
    130e:	8a 95       	dec	r24
    1310:	e2 f7       	brpl	.-8      	; 0x130a <DIO_write+0x4a>
    1312:	cb 01       	movw	r24, r22
    1314:	84 2b       	or	r24, r20
    1316:	8b bb       	out	0x1b, r24	; 27
    1318:	08 95       	ret
    131a:	41 11       	cpse	r20, r1
    131c:	0e c0       	rjmp	.+28     	; 0x133a <DIO_write+0x7a>
    131e:	48 b3       	in	r20, 0x18	; 24
    1320:	21 e0       	ldi	r18, 0x01	; 1
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	b9 01       	movw	r22, r18
    1326:	02 c0       	rjmp	.+4      	; 0x132c <DIO_write+0x6c>
    1328:	66 0f       	add	r22, r22
    132a:	77 1f       	adc	r23, r23
    132c:	8a 95       	dec	r24
    132e:	e2 f7       	brpl	.-8      	; 0x1328 <DIO_write+0x68>
    1330:	cb 01       	movw	r24, r22
    1332:	80 95       	com	r24
    1334:	84 23       	and	r24, r20
    1336:	88 bb       	out	0x18, r24	; 24
    1338:	08 95       	ret
    133a:	41 30       	cpi	r20, 0x01	; 1
    133c:	09 f0       	breq	.+2      	; 0x1340 <DIO_write+0x80>
    133e:	4a c0       	rjmp	.+148    	; 0x13d4 <DIO_write+0x114>
    1340:	48 b3       	in	r20, 0x18	; 24
    1342:	21 e0       	ldi	r18, 0x01	; 1
    1344:	30 e0       	ldi	r19, 0x00	; 0
    1346:	b9 01       	movw	r22, r18
    1348:	02 c0       	rjmp	.+4      	; 0x134e <DIO_write+0x8e>
    134a:	66 0f       	add	r22, r22
    134c:	77 1f       	adc	r23, r23
    134e:	8a 95       	dec	r24
    1350:	e2 f7       	brpl	.-8      	; 0x134a <DIO_write+0x8a>
    1352:	cb 01       	movw	r24, r22
    1354:	84 2b       	or	r24, r20
    1356:	88 bb       	out	0x18, r24	; 24
    1358:	08 95       	ret
    135a:	41 11       	cpse	r20, r1
    135c:	0e c0       	rjmp	.+28     	; 0x137a <DIO_write+0xba>
    135e:	45 b3       	in	r20, 0x15	; 21
    1360:	21 e0       	ldi	r18, 0x01	; 1
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	b9 01       	movw	r22, r18
    1366:	02 c0       	rjmp	.+4      	; 0x136c <DIO_write+0xac>
    1368:	66 0f       	add	r22, r22
    136a:	77 1f       	adc	r23, r23
    136c:	8a 95       	dec	r24
    136e:	e2 f7       	brpl	.-8      	; 0x1368 <DIO_write+0xa8>
    1370:	cb 01       	movw	r24, r22
    1372:	80 95       	com	r24
    1374:	84 23       	and	r24, r20
    1376:	85 bb       	out	0x15, r24	; 21
    1378:	08 95       	ret
    137a:	41 30       	cpi	r20, 0x01	; 1
    137c:	59 f5       	brne	.+86     	; 0x13d4 <DIO_write+0x114>
    137e:	45 b3       	in	r20, 0x15	; 21
    1380:	21 e0       	ldi	r18, 0x01	; 1
    1382:	30 e0       	ldi	r19, 0x00	; 0
    1384:	b9 01       	movw	r22, r18
    1386:	02 c0       	rjmp	.+4      	; 0x138c <DIO_write+0xcc>
    1388:	66 0f       	add	r22, r22
    138a:	77 1f       	adc	r23, r23
    138c:	8a 95       	dec	r24
    138e:	e2 f7       	brpl	.-8      	; 0x1388 <DIO_write+0xc8>
    1390:	cb 01       	movw	r24, r22
    1392:	84 2b       	or	r24, r20
    1394:	85 bb       	out	0x15, r24	; 21
    1396:	08 95       	ret
    1398:	41 11       	cpse	r20, r1
    139a:	0e c0       	rjmp	.+28     	; 0x13b8 <DIO_write+0xf8>
    139c:	42 b3       	in	r20, 0x12	; 18
    139e:	21 e0       	ldi	r18, 0x01	; 1
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	b9 01       	movw	r22, r18
    13a4:	02 c0       	rjmp	.+4      	; 0x13aa <DIO_write+0xea>
    13a6:	66 0f       	add	r22, r22
    13a8:	77 1f       	adc	r23, r23
    13aa:	8a 95       	dec	r24
    13ac:	e2 f7       	brpl	.-8      	; 0x13a6 <DIO_write+0xe6>
    13ae:	cb 01       	movw	r24, r22
    13b0:	80 95       	com	r24
    13b2:	84 23       	and	r24, r20
    13b4:	82 bb       	out	0x12, r24	; 18
    13b6:	08 95       	ret
    13b8:	41 30       	cpi	r20, 0x01	; 1
    13ba:	61 f4       	brne	.+24     	; 0x13d4 <DIO_write+0x114>
    13bc:	42 b3       	in	r20, 0x12	; 18
    13be:	21 e0       	ldi	r18, 0x01	; 1
    13c0:	30 e0       	ldi	r19, 0x00	; 0
    13c2:	b9 01       	movw	r22, r18
    13c4:	02 c0       	rjmp	.+4      	; 0x13ca <DIO_write+0x10a>
    13c6:	66 0f       	add	r22, r22
    13c8:	77 1f       	adc	r23, r23
    13ca:	8a 95       	dec	r24
    13cc:	e2 f7       	brpl	.-8      	; 0x13c6 <DIO_write+0x106>
    13ce:	cb 01       	movw	r24, r22
    13d0:	84 2b       	or	r24, r20
    13d2:	82 bb       	out	0x12, r24	; 18
    13d4:	08 95       	ret

000013d6 <DIO_read>:
    13d6:	62 34       	cpi	r22, 0x42	; 66
    13d8:	f9 f0       	breq	.+62     	; 0x1418 <DIO_read+0x42>
    13da:	18 f4       	brcc	.+6      	; 0x13e2 <DIO_read+0xc>
    13dc:	61 34       	cpi	r22, 0x41	; 65
    13de:	39 f0       	breq	.+14     	; 0x13ee <DIO_read+0x18>
    13e0:	08 95       	ret
    13e2:	63 34       	cpi	r22, 0x43	; 67
    13e4:	71 f1       	breq	.+92     	; 0x1442 <DIO_read+0x6c>
    13e6:	64 34       	cpi	r22, 0x44	; 68
    13e8:	09 f4       	brne	.+2      	; 0x13ec <DIO_read+0x16>
    13ea:	40 c0       	rjmp	.+128    	; 0x146c <DIO_read+0x96>
    13ec:	08 95       	ret
    13ee:	69 b3       	in	r22, 0x19	; 25
    13f0:	21 e0       	ldi	r18, 0x01	; 1
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	08 2e       	mov	r0, r24
    13f6:	02 c0       	rjmp	.+4      	; 0x13fc <DIO_read+0x26>
    13f8:	22 0f       	add	r18, r18
    13fa:	33 1f       	adc	r19, r19
    13fc:	0a 94       	dec	r0
    13fe:	e2 f7       	brpl	.-8      	; 0x13f8 <DIO_read+0x22>
    1400:	70 e0       	ldi	r23, 0x00	; 0
    1402:	26 23       	and	r18, r22
    1404:	37 23       	and	r19, r23
    1406:	b9 01       	movw	r22, r18
    1408:	02 c0       	rjmp	.+4      	; 0x140e <DIO_read+0x38>
    140a:	75 95       	asr	r23
    140c:	67 95       	ror	r22
    140e:	8a 95       	dec	r24
    1410:	e2 f7       	brpl	.-8      	; 0x140a <DIO_read+0x34>
    1412:	fa 01       	movw	r30, r20
    1414:	60 83       	st	Z, r22
    1416:	08 95       	ret
    1418:	66 b3       	in	r22, 0x16	; 22
    141a:	21 e0       	ldi	r18, 0x01	; 1
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	08 2e       	mov	r0, r24
    1420:	02 c0       	rjmp	.+4      	; 0x1426 <DIO_read+0x50>
    1422:	22 0f       	add	r18, r18
    1424:	33 1f       	adc	r19, r19
    1426:	0a 94       	dec	r0
    1428:	e2 f7       	brpl	.-8      	; 0x1422 <DIO_read+0x4c>
    142a:	70 e0       	ldi	r23, 0x00	; 0
    142c:	26 23       	and	r18, r22
    142e:	37 23       	and	r19, r23
    1430:	b9 01       	movw	r22, r18
    1432:	02 c0       	rjmp	.+4      	; 0x1438 <DIO_read+0x62>
    1434:	75 95       	asr	r23
    1436:	67 95       	ror	r22
    1438:	8a 95       	dec	r24
    143a:	e2 f7       	brpl	.-8      	; 0x1434 <DIO_read+0x5e>
    143c:	fa 01       	movw	r30, r20
    143e:	60 83       	st	Z, r22
    1440:	08 95       	ret
    1442:	63 b3       	in	r22, 0x13	; 19
    1444:	21 e0       	ldi	r18, 0x01	; 1
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	08 2e       	mov	r0, r24
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <DIO_read+0x7a>
    144c:	22 0f       	add	r18, r18
    144e:	33 1f       	adc	r19, r19
    1450:	0a 94       	dec	r0
    1452:	e2 f7       	brpl	.-8      	; 0x144c <DIO_read+0x76>
    1454:	70 e0       	ldi	r23, 0x00	; 0
    1456:	26 23       	and	r18, r22
    1458:	37 23       	and	r19, r23
    145a:	b9 01       	movw	r22, r18
    145c:	02 c0       	rjmp	.+4      	; 0x1462 <DIO_read+0x8c>
    145e:	75 95       	asr	r23
    1460:	67 95       	ror	r22
    1462:	8a 95       	dec	r24
    1464:	e2 f7       	brpl	.-8      	; 0x145e <DIO_read+0x88>
    1466:	fa 01       	movw	r30, r20
    1468:	60 83       	st	Z, r22
    146a:	08 95       	ret
    146c:	60 b3       	in	r22, 0x10	; 16
    146e:	21 e0       	ldi	r18, 0x01	; 1
    1470:	30 e0       	ldi	r19, 0x00	; 0
    1472:	08 2e       	mov	r0, r24
    1474:	02 c0       	rjmp	.+4      	; 0x147a <DIO_read+0xa4>
    1476:	22 0f       	add	r18, r18
    1478:	33 1f       	adc	r19, r19
    147a:	0a 94       	dec	r0
    147c:	e2 f7       	brpl	.-8      	; 0x1476 <DIO_read+0xa0>
    147e:	70 e0       	ldi	r23, 0x00	; 0
    1480:	26 23       	and	r18, r22
    1482:	37 23       	and	r19, r23
    1484:	b9 01       	movw	r22, r18
    1486:	02 c0       	rjmp	.+4      	; 0x148c <DIO_read+0xb6>
    1488:	75 95       	asr	r23
    148a:	67 95       	ror	r22
    148c:	8a 95       	dec	r24
    148e:	e2 f7       	brpl	.-8      	; 0x1488 <DIO_read+0xb2>
    1490:	fa 01       	movw	r30, r20
    1492:	60 83       	st	Z, r22
    1494:	08 95       	ret

00001496 <EXI_Enable>:
    1496:	81 30       	cpi	r24, 0x01	; 1
    1498:	41 f0       	breq	.+16     	; 0x14aa <EXI_Enable+0x14>
    149a:	18 f0       	brcs	.+6      	; 0x14a2 <EXI_Enable+0xc>
    149c:	82 30       	cpi	r24, 0x02	; 2
    149e:	49 f0       	breq	.+18     	; 0x14b2 <EXI_Enable+0x1c>
    14a0:	08 95       	ret
    14a2:	8b b7       	in	r24, 0x3b	; 59
    14a4:	80 64       	ori	r24, 0x40	; 64
    14a6:	8b bf       	out	0x3b, r24	; 59
    14a8:	08 95       	ret
    14aa:	8b b7       	in	r24, 0x3b	; 59
    14ac:	80 68       	ori	r24, 0x80	; 128
    14ae:	8b bf       	out	0x3b, r24	; 59
    14b0:	08 95       	ret
    14b2:	8b b7       	in	r24, 0x3b	; 59
    14b4:	80 62       	ori	r24, 0x20	; 32
    14b6:	8b bf       	out	0x3b, r24	; 59
    14b8:	08 95       	ret

000014ba <EXI_Disable>:
    14ba:	81 30       	cpi	r24, 0x01	; 1
    14bc:	41 f0       	breq	.+16     	; 0x14ce <EXI_Disable+0x14>
    14be:	18 f0       	brcs	.+6      	; 0x14c6 <EXI_Disable+0xc>
    14c0:	82 30       	cpi	r24, 0x02	; 2
    14c2:	49 f0       	breq	.+18     	; 0x14d6 <EXI_Disable+0x1c>
    14c4:	08 95       	ret
    14c6:	8b b7       	in	r24, 0x3b	; 59
    14c8:	8f 7b       	andi	r24, 0xBF	; 191
    14ca:	8b bf       	out	0x3b, r24	; 59
    14cc:	08 95       	ret
    14ce:	8b b7       	in	r24, 0x3b	; 59
    14d0:	8f 77       	andi	r24, 0x7F	; 127
    14d2:	8b bf       	out	0x3b, r24	; 59
    14d4:	08 95       	ret
    14d6:	8b b7       	in	r24, 0x3b	; 59
    14d8:	8f 7d       	andi	r24, 0xDF	; 223
    14da:	8b bf       	out	0x3b, r24	; 59
    14dc:	08 95       	ret

000014de <EXI_Trigger>:
    14de:	81 30       	cpi	r24, 0x01	; 1
    14e0:	49 f1       	breq	.+82     	; 0x1534 <EXI_Trigger+0x56>
    14e2:	20 f0       	brcs	.+8      	; 0x14ec <EXI_Trigger+0xe>
    14e4:	82 30       	cpi	r24, 0x02	; 2
    14e6:	09 f4       	brne	.+2      	; 0x14ea <EXI_Trigger+0xc>
    14e8:	49 c0       	rjmp	.+146    	; 0x157c <EXI_Trigger+0x9e>
    14ea:	08 95       	ret
    14ec:	61 30       	cpi	r22, 0x01	; 1
    14ee:	69 f0       	breq	.+26     	; 0x150a <EXI_Trigger+0x2c>
    14f0:	28 f0       	brcs	.+10     	; 0x14fc <EXI_Trigger+0x1e>
    14f2:	62 30       	cpi	r22, 0x02	; 2
    14f4:	89 f0       	breq	.+34     	; 0x1518 <EXI_Trigger+0x3a>
    14f6:	63 30       	cpi	r22, 0x03	; 3
    14f8:	b1 f0       	breq	.+44     	; 0x1526 <EXI_Trigger+0x48>
    14fa:	08 95       	ret
    14fc:	85 b7       	in	r24, 0x35	; 53
    14fe:	8e 7f       	andi	r24, 0xFE	; 254
    1500:	85 bf       	out	0x35, r24	; 53
    1502:	85 b7       	in	r24, 0x35	; 53
    1504:	8d 7f       	andi	r24, 0xFD	; 253
    1506:	85 bf       	out	0x35, r24	; 53
    1508:	08 95       	ret
    150a:	85 b7       	in	r24, 0x35	; 53
    150c:	81 60       	ori	r24, 0x01	; 1
    150e:	85 bf       	out	0x35, r24	; 53
    1510:	85 b7       	in	r24, 0x35	; 53
    1512:	8d 7f       	andi	r24, 0xFD	; 253
    1514:	85 bf       	out	0x35, r24	; 53
    1516:	08 95       	ret
    1518:	85 b7       	in	r24, 0x35	; 53
    151a:	8e 7f       	andi	r24, 0xFE	; 254
    151c:	85 bf       	out	0x35, r24	; 53
    151e:	85 b7       	in	r24, 0x35	; 53
    1520:	82 60       	ori	r24, 0x02	; 2
    1522:	85 bf       	out	0x35, r24	; 53
    1524:	08 95       	ret
    1526:	85 b7       	in	r24, 0x35	; 53
    1528:	81 60       	ori	r24, 0x01	; 1
    152a:	85 bf       	out	0x35, r24	; 53
    152c:	85 b7       	in	r24, 0x35	; 53
    152e:	82 60       	ori	r24, 0x02	; 2
    1530:	85 bf       	out	0x35, r24	; 53
    1532:	08 95       	ret
    1534:	61 30       	cpi	r22, 0x01	; 1
    1536:	69 f0       	breq	.+26     	; 0x1552 <EXI_Trigger+0x74>
    1538:	28 f0       	brcs	.+10     	; 0x1544 <EXI_Trigger+0x66>
    153a:	62 30       	cpi	r22, 0x02	; 2
    153c:	89 f0       	breq	.+34     	; 0x1560 <EXI_Trigger+0x82>
    153e:	63 30       	cpi	r22, 0x03	; 3
    1540:	b1 f0       	breq	.+44     	; 0x156e <EXI_Trigger+0x90>
    1542:	08 95       	ret
    1544:	85 b7       	in	r24, 0x35	; 53
    1546:	8b 7f       	andi	r24, 0xFB	; 251
    1548:	85 bf       	out	0x35, r24	; 53
    154a:	85 b7       	in	r24, 0x35	; 53
    154c:	87 7f       	andi	r24, 0xF7	; 247
    154e:	85 bf       	out	0x35, r24	; 53
    1550:	08 95       	ret
    1552:	85 b7       	in	r24, 0x35	; 53
    1554:	84 60       	ori	r24, 0x04	; 4
    1556:	85 bf       	out	0x35, r24	; 53
    1558:	85 b7       	in	r24, 0x35	; 53
    155a:	87 7f       	andi	r24, 0xF7	; 247
    155c:	85 bf       	out	0x35, r24	; 53
    155e:	08 95       	ret
    1560:	85 b7       	in	r24, 0x35	; 53
    1562:	8b 7f       	andi	r24, 0xFB	; 251
    1564:	85 bf       	out	0x35, r24	; 53
    1566:	85 b7       	in	r24, 0x35	; 53
    1568:	88 60       	ori	r24, 0x08	; 8
    156a:	85 bf       	out	0x35, r24	; 53
    156c:	08 95       	ret
    156e:	85 b7       	in	r24, 0x35	; 53
    1570:	84 60       	ori	r24, 0x04	; 4
    1572:	85 bf       	out	0x35, r24	; 53
    1574:	85 b7       	in	r24, 0x35	; 53
    1576:	88 60       	ori	r24, 0x08	; 8
    1578:	85 bf       	out	0x35, r24	; 53
    157a:	08 95       	ret
    157c:	62 30       	cpi	r22, 0x02	; 2
    157e:	19 f0       	breq	.+6      	; 0x1586 <EXI_Trigger+0xa8>
    1580:	63 30       	cpi	r22, 0x03	; 3
    1582:	29 f0       	breq	.+10     	; 0x158e <EXI_Trigger+0xb0>
    1584:	08 95       	ret
    1586:	84 b7       	in	r24, 0x34	; 52
    1588:	8f 7b       	andi	r24, 0xBF	; 191
    158a:	84 bf       	out	0x34, r24	; 52
    158c:	08 95       	ret
    158e:	84 b7       	in	r24, 0x34	; 52
    1590:	80 64       	ori	r24, 0x40	; 64
    1592:	84 bf       	out	0x34, r24	; 52
    1594:	08 95       	ret

00001596 <EXI_SetCallBack>:
    1596:	88 23       	and	r24, r24
    1598:	19 f0       	breq	.+6      	; 0x15a0 <EXI_SetCallBack+0xa>
    159a:	82 30       	cpi	r24, 0x02	; 2
    159c:	51 f4       	brne	.+20     	; 0x15b2 <EXI_SetCallBack+0x1c>
    159e:	05 c0       	rjmp	.+10     	; 0x15aa <EXI_SetCallBack+0x14>
    15a0:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <ptrf_INT_0+0x1>
    15a4:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <ptrf_INT_0>
    15a8:	08 95       	ret
    15aa:	70 93 61 01 	sts	0x0161, r23	; 0x800161 <ptrf_INT_2+0x1>
    15ae:	60 93 60 01 	sts	0x0160, r22	; 0x800160 <ptrf_INT_2>
    15b2:	08 95       	ret

000015b4 <__vector_1>:
    15b4:	1f 92       	push	r1
    15b6:	0f 92       	push	r0
    15b8:	0f b6       	in	r0, 0x3f	; 63
    15ba:	0f 92       	push	r0
    15bc:	11 24       	eor	r1, r1
    15be:	2f 93       	push	r18
    15c0:	3f 93       	push	r19
    15c2:	4f 93       	push	r20
    15c4:	5f 93       	push	r21
    15c6:	6f 93       	push	r22
    15c8:	7f 93       	push	r23
    15ca:	8f 93       	push	r24
    15cc:	9f 93       	push	r25
    15ce:	af 93       	push	r26
    15d0:	bf 93       	push	r27
    15d2:	ef 93       	push	r30
    15d4:	ff 93       	push	r31
    15d6:	e0 91 62 01 	lds	r30, 0x0162	; 0x800162 <ptrf_INT_0>
    15da:	f0 91 63 01 	lds	r31, 0x0163	; 0x800163 <ptrf_INT_0+0x1>
    15de:	30 97       	sbiw	r30, 0x00	; 0
    15e0:	09 f0       	breq	.+2      	; 0x15e4 <__vector_1+0x30>
    15e2:	09 95       	icall
    15e4:	ff 91       	pop	r31
    15e6:	ef 91       	pop	r30
    15e8:	bf 91       	pop	r27
    15ea:	af 91       	pop	r26
    15ec:	9f 91       	pop	r25
    15ee:	8f 91       	pop	r24
    15f0:	7f 91       	pop	r23
    15f2:	6f 91       	pop	r22
    15f4:	5f 91       	pop	r21
    15f6:	4f 91       	pop	r20
    15f8:	3f 91       	pop	r19
    15fa:	2f 91       	pop	r18
    15fc:	0f 90       	pop	r0
    15fe:	0f be       	out	0x3f, r0	; 63
    1600:	0f 90       	pop	r0
    1602:	1f 90       	pop	r1
    1604:	18 95       	reti

00001606 <__vector_2>:
    1606:	1f 92       	push	r1
    1608:	0f 92       	push	r0
    160a:	0f b6       	in	r0, 0x3f	; 63
    160c:	0f 92       	push	r0
    160e:	11 24       	eor	r1, r1
    1610:	8f 93       	push	r24
    1612:	81 e0       	ldi	r24, 0x01	; 1
    1614:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <car_flag>
    1618:	8f 91       	pop	r24
    161a:	0f 90       	pop	r0
    161c:	0f be       	out	0x3f, r0	; 63
    161e:	0f 90       	pop	r0
    1620:	1f 90       	pop	r1
    1622:	18 95       	reti

00001624 <__vector_3>:
    1624:	1f 92       	push	r1
    1626:	0f 92       	push	r0
    1628:	0f b6       	in	r0, 0x3f	; 63
    162a:	0f 92       	push	r0
    162c:	11 24       	eor	r1, r1
    162e:	2f 93       	push	r18
    1630:	3f 93       	push	r19
    1632:	4f 93       	push	r20
    1634:	5f 93       	push	r21
    1636:	6f 93       	push	r22
    1638:	7f 93       	push	r23
    163a:	8f 93       	push	r24
    163c:	9f 93       	push	r25
    163e:	af 93       	push	r26
    1640:	bf 93       	push	r27
    1642:	ef 93       	push	r30
    1644:	ff 93       	push	r31
    1646:	e0 91 60 01 	lds	r30, 0x0160	; 0x800160 <ptrf_INT_2>
    164a:	f0 91 61 01 	lds	r31, 0x0161	; 0x800161 <ptrf_INT_2+0x1>
    164e:	30 97       	sbiw	r30, 0x00	; 0
    1650:	09 f0       	breq	.+2      	; 0x1654 <__vector_3+0x30>
    1652:	09 95       	icall
    1654:	ff 91       	pop	r31
    1656:	ef 91       	pop	r30
    1658:	bf 91       	pop	r27
    165a:	af 91       	pop	r26
    165c:	9f 91       	pop	r25
    165e:	8f 91       	pop	r24
    1660:	7f 91       	pop	r23
    1662:	6f 91       	pop	r22
    1664:	5f 91       	pop	r21
    1666:	4f 91       	pop	r20
    1668:	3f 91       	pop	r19
    166a:	2f 91       	pop	r18
    166c:	0f 90       	pop	r0
    166e:	0f be       	out	0x3f, r0	; 63
    1670:	0f 90       	pop	r0
    1672:	1f 90       	pop	r1
    1674:	18 95       	reti

00001676 <TIMER_0_init>:
	TIMER_2_init(NORMAL_MODE);
	TIMER_2_setIntialValue(0);
	TIMER_2_start(PRECALER_1);
	TIMER_2_OvfNum(ovfNum2);
	
}
    1676:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <Timer_cfgArray>
    167a:	81 30       	cpi	r24, 0x01	; 1
    167c:	f1 f0       	breq	.+60     	; 0x16ba <TIMER_0_init+0x44>
    167e:	28 f0       	brcs	.+10     	; 0x168a <TIMER_0_init+0x14>
    1680:	82 30       	cpi	r24, 0x02	; 2
    1682:	99 f0       	breq	.+38     	; 0x16aa <TIMER_0_init+0x34>
    1684:	84 30       	cpi	r24, 0x04	; 4
    1686:	49 f0       	breq	.+18     	; 0x169a <TIMER_0_init+0x24>
    1688:	20 c0       	rjmp	.+64     	; 0x16ca <TIMER_0_init+0x54>
    168a:	83 b7       	in	r24, 0x33	; 51
    168c:	8f 7b       	andi	r24, 0xBF	; 191
    168e:	83 bf       	out	0x33, r24	; 51
    1690:	83 b7       	in	r24, 0x33	; 51
    1692:	87 7f       	andi	r24, 0xF7	; 247
    1694:	83 bf       	out	0x33, r24	; 51
    1696:	84 e0       	ldi	r24, 0x04	; 4
    1698:	08 95       	ret
    169a:	83 b7       	in	r24, 0x33	; 51
    169c:	80 64       	ori	r24, 0x40	; 64
    169e:	83 bf       	out	0x33, r24	; 51
    16a0:	83 b7       	in	r24, 0x33	; 51
    16a2:	87 7f       	andi	r24, 0xF7	; 247
    16a4:	83 bf       	out	0x33, r24	; 51
    16a6:	84 e0       	ldi	r24, 0x04	; 4
    16a8:	08 95       	ret
    16aa:	83 b7       	in	r24, 0x33	; 51
    16ac:	8f 7b       	andi	r24, 0xBF	; 191
    16ae:	83 bf       	out	0x33, r24	; 51
    16b0:	83 b7       	in	r24, 0x33	; 51
    16b2:	88 60       	ori	r24, 0x08	; 8
    16b4:	83 bf       	out	0x33, r24	; 51
    16b6:	84 e0       	ldi	r24, 0x04	; 4
    16b8:	08 95       	ret
    16ba:	83 b7       	in	r24, 0x33	; 51
    16bc:	80 64       	ori	r24, 0x40	; 64
    16be:	83 bf       	out	0x33, r24	; 51
    16c0:	83 b7       	in	r24, 0x33	; 51
    16c2:	88 60       	ori	r24, 0x08	; 8
    16c4:	83 bf       	out	0x33, r24	; 51
    16c6:	84 e0       	ldi	r24, 0x04	; 4
    16c8:	08 95       	ret
    16ca:	81 e0       	ldi	r24, 0x01	; 1
    16cc:	08 95       	ret

000016ce <TIMER_0_start>:
    16ce:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <Timer_cfgArray+0x1>
    16d2:	83 30       	cpi	r24, 0x03	; 3
    16d4:	09 f1       	breq	.+66     	; 0x1718 <TIMER_0_start+0x4a>
    16d6:	28 f4       	brcc	.+10     	; 0x16e2 <TIMER_0_start+0x14>
    16d8:	88 23       	and	r24, r24
    16da:	41 f0       	breq	.+16     	; 0x16ec <TIMER_0_start+0x1e>
    16dc:	82 30       	cpi	r24, 0x02	; 2
    16de:	89 f0       	breq	.+34     	; 0x1702 <TIMER_0_start+0x34>
    16e0:	3c c0       	rjmp	.+120    	; 0x175a <TIMER_0_start+0x8c>
    16e2:	86 30       	cpi	r24, 0x06	; 6
    16e4:	21 f1       	breq	.+72     	; 0x172e <TIMER_0_start+0x60>
    16e6:	87 30       	cpi	r24, 0x07	; 7
    16e8:	69 f1       	breq	.+90     	; 0x1744 <TIMER_0_start+0x76>
    16ea:	37 c0       	rjmp	.+110    	; 0x175a <TIMER_0_start+0x8c>
    16ec:	83 b7       	in	r24, 0x33	; 51
    16ee:	81 60       	ori	r24, 0x01	; 1
    16f0:	83 bf       	out	0x33, r24	; 51
    16f2:	83 b7       	in	r24, 0x33	; 51
    16f4:	8d 7f       	andi	r24, 0xFD	; 253
    16f6:	83 bf       	out	0x33, r24	; 51
    16f8:	83 b7       	in	r24, 0x33	; 51
    16fa:	8b 7f       	andi	r24, 0xFB	; 251
    16fc:	83 bf       	out	0x33, r24	; 51
    16fe:	84 e0       	ldi	r24, 0x04	; 4
    1700:	08 95       	ret
    1702:	83 b7       	in	r24, 0x33	; 51
    1704:	82 60       	ori	r24, 0x02	; 2
    1706:	83 bf       	out	0x33, r24	; 51
    1708:	83 b7       	in	r24, 0x33	; 51
    170a:	8e 7f       	andi	r24, 0xFE	; 254
    170c:	83 bf       	out	0x33, r24	; 51
    170e:	83 b7       	in	r24, 0x33	; 51
    1710:	8b 7f       	andi	r24, 0xFB	; 251
    1712:	83 bf       	out	0x33, r24	; 51
    1714:	84 e0       	ldi	r24, 0x04	; 4
    1716:	08 95       	ret
    1718:	83 b7       	in	r24, 0x33	; 51
    171a:	81 60       	ori	r24, 0x01	; 1
    171c:	83 bf       	out	0x33, r24	; 51
    171e:	83 b7       	in	r24, 0x33	; 51
    1720:	82 60       	ori	r24, 0x02	; 2
    1722:	83 bf       	out	0x33, r24	; 51
    1724:	83 b7       	in	r24, 0x33	; 51
    1726:	8b 7f       	andi	r24, 0xFB	; 251
    1728:	83 bf       	out	0x33, r24	; 51
    172a:	84 e0       	ldi	r24, 0x04	; 4
    172c:	08 95       	ret
    172e:	83 b7       	in	r24, 0x33	; 51
    1730:	84 60       	ori	r24, 0x04	; 4
    1732:	83 bf       	out	0x33, r24	; 51
    1734:	83 b7       	in	r24, 0x33	; 51
    1736:	8d 7f       	andi	r24, 0xFD	; 253
    1738:	83 bf       	out	0x33, r24	; 51
    173a:	83 b7       	in	r24, 0x33	; 51
    173c:	8e 7f       	andi	r24, 0xFE	; 254
    173e:	83 bf       	out	0x33, r24	; 51
    1740:	84 e0       	ldi	r24, 0x04	; 4
    1742:	08 95       	ret
    1744:	83 b7       	in	r24, 0x33	; 51
    1746:	81 60       	ori	r24, 0x01	; 1
    1748:	83 bf       	out	0x33, r24	; 51
    174a:	83 b7       	in	r24, 0x33	; 51
    174c:	8d 7f       	andi	r24, 0xFD	; 253
    174e:	83 bf       	out	0x33, r24	; 51
    1750:	83 b7       	in	r24, 0x33	; 51
    1752:	84 60       	ori	r24, 0x04	; 4
    1754:	83 bf       	out	0x33, r24	; 51
    1756:	84 e0       	ldi	r24, 0x04	; 4
    1758:	08 95       	ret
    175a:	80 e0       	ldi	r24, 0x00	; 0
    175c:	08 95       	ret

0000175e <TIMER_0_setIntialValue>:
    175e:	cf 92       	push	r12
    1760:	df 92       	push	r13
    1762:	ef 92       	push	r14
    1764:	ff 92       	push	r15
    1766:	6b 01       	movw	r12, r22
    1768:	7c 01       	movw	r14, r24
    176a:	20 e0       	ldi	r18, 0x00	; 0
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	40 e8       	ldi	r20, 0x80	; 128
    1770:	53 e4       	ldi	r21, 0x43	; 67
    1772:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <__cmpsf2>
    1776:	88 23       	and	r24, r24
    1778:	94 f4       	brge	.+36     	; 0x179e <TIMER_0_setIntialValue+0x40>
    177a:	20 e0       	ldi	r18, 0x00	; 0
    177c:	30 e0       	ldi	r19, 0x00	; 0
    177e:	a9 01       	movw	r20, r18
    1780:	c7 01       	movw	r24, r14
    1782:	b6 01       	movw	r22, r12
    1784:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__gesf2>
    1788:	88 23       	and	r24, r24
    178a:	5c f0       	brlt	.+22     	; 0x17a2 <TIMER_0_setIntialValue+0x44>
    178c:	c7 01       	movw	r24, r14
    178e:	b6 01       	movw	r22, r12
    1790:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <ceil>
    1794:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <__fixunssfsi>
    1798:	62 bf       	out	0x32, r22	; 50
    179a:	84 e0       	ldi	r24, 0x04	; 4
    179c:	03 c0       	rjmp	.+6      	; 0x17a4 <TIMER_0_setIntialValue+0x46>
    179e:	83 e0       	ldi	r24, 0x03	; 3
    17a0:	01 c0       	rjmp	.+2      	; 0x17a4 <TIMER_0_setIntialValue+0x46>
    17a2:	83 e0       	ldi	r24, 0x03	; 3
    17a4:	ff 90       	pop	r15
    17a6:	ef 90       	pop	r14
    17a8:	df 90       	pop	r13
    17aa:	cf 90       	pop	r12
    17ac:	08 95       	ret

000017ae <TIMER_0_OvfNum>:
    17ae:	8f 92       	push	r8
    17b0:	9f 92       	push	r9
    17b2:	af 92       	push	r10
    17b4:	bf 92       	push	r11
    17b6:	cf 92       	push	r12
    17b8:	df 92       	push	r13
    17ba:	ef 92       	push	r14
    17bc:	ff 92       	push	r15
    17be:	4b 01       	movw	r8, r22
    17c0:	5c 01       	movw	r10, r24
    17c2:	20 e0       	ldi	r18, 0x00	; 0
    17c4:	30 e0       	ldi	r19, 0x00	; 0
    17c6:	a9 01       	movw	r20, r18
    17c8:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__gesf2>
    17cc:	18 16       	cp	r1, r24
    17ce:	ec f4       	brge	.+58     	; 0x180a <TIMER_0_OvfNum+0x5c>
    17d0:	c1 2c       	mov	r12, r1
    17d2:	d1 2c       	mov	r13, r1
    17d4:	76 01       	movw	r14, r12
    17d6:	08 b6       	in	r0, 0x38	; 56
    17d8:	00 fe       	sbrs	r0, 0
    17da:	fd cf       	rjmp	.-6      	; 0x17d6 <TIMER_0_OvfNum+0x28>
    17dc:	88 b7       	in	r24, 0x38	; 56
    17de:	81 60       	ori	r24, 0x01	; 1
    17e0:	88 bf       	out	0x38, r24	; 56
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	40 e8       	ldi	r20, 0x80	; 128
    17e8:	5f e3       	ldi	r21, 0x3F	; 63
    17ea:	c7 01       	movw	r24, r14
    17ec:	b6 01       	movw	r22, r12
    17ee:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <__addsf3>
    17f2:	6b 01       	movw	r12, r22
    17f4:	7c 01       	movw	r14, r24
    17f6:	9b 01       	movw	r18, r22
    17f8:	ac 01       	movw	r20, r24
    17fa:	c5 01       	movw	r24, r10
    17fc:	b4 01       	movw	r22, r8
    17fe:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__gesf2>
    1802:	18 16       	cp	r1, r24
    1804:	44 f3       	brlt	.-48     	; 0x17d6 <TIMER_0_OvfNum+0x28>
    1806:	84 e0       	ldi	r24, 0x04	; 4
    1808:	12 c0       	rjmp	.+36     	; 0x182e <TIMER_0_OvfNum+0x80>
    180a:	20 e0       	ldi	r18, 0x00	; 0
    180c:	30 e0       	ldi	r19, 0x00	; 0
    180e:	a9 01       	movw	r20, r18
    1810:	c5 01       	movw	r24, r10
    1812:	b4 01       	movw	r22, r8
    1814:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <__cmpsf2>
    1818:	18 16       	cp	r1, r24
    181a:	44 f0       	brlt	.+16     	; 0x182c <TIMER_0_OvfNum+0x7e>
    181c:	08 b6       	in	r0, 0x38	; 56
    181e:	00 fe       	sbrs	r0, 0
    1820:	fd cf       	rjmp	.-6      	; 0x181c <TIMER_0_OvfNum+0x6e>
    1822:	88 b7       	in	r24, 0x38	; 56
    1824:	81 60       	ori	r24, 0x01	; 1
    1826:	88 bf       	out	0x38, r24	; 56
    1828:	84 e0       	ldi	r24, 0x04	; 4
    182a:	01 c0       	rjmp	.+2      	; 0x182e <TIMER_0_OvfNum+0x80>
    182c:	82 e0       	ldi	r24, 0x02	; 2
    182e:	ff 90       	pop	r15
    1830:	ef 90       	pop	r14
    1832:	df 90       	pop	r13
    1834:	cf 90       	pop	r12
    1836:	bf 90       	pop	r11
    1838:	af 90       	pop	r10
    183a:	9f 90       	pop	r9
    183c:	8f 90       	pop	r8
    183e:	08 95       	ret

00001840 <TIMER_0_DELAY_MS>:
    1840:	20 e0       	ldi	r18, 0x00	; 0
    1842:	30 e0       	ldi	r19, 0x00	; 0
    1844:	4a e7       	ldi	r20, 0x7A	; 122
    1846:	54 e4       	ldi	r21, 0x44	; 68
    1848:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <__divsf3>
    184c:	20 91 40 01 	lds	r18, 0x0140	; 0x800140 <Timer_cfgArray+0x1>
    1850:	22 23       	and	r18, r18
    1852:	19 f0       	breq	.+6      	; 0x185a <TIMER_0_DELAY_MS+0x1a>
    1854:	27 30       	cpi	r18, 0x07	; 7
    1856:	91 f0       	breq	.+36     	; 0x187c <TIMER_0_DELAY_MS+0x3c>
    1858:	21 c0       	rjmp	.+66     	; 0x189c <TIMER_0_DELAY_MS+0x5c>
    185a:	2d eb       	ldi	r18, 0xBD	; 189
    185c:	37 e3       	ldi	r19, 0x37	; 55
    185e:	46 e0       	ldi	r20, 0x06	; 6
    1860:	58 e3       	ldi	r21, 0x38	; 56
    1862:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <__divsf3>
    1866:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <ceil>
    186a:	60 93 68 01 	sts	0x0168, r22	; 0x800168 <g_ovfNum>
    186e:	70 93 69 01 	sts	0x0169, r23	; 0x800169 <g_ovfNum+0x1>
    1872:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <g_ovfNum+0x2>
    1876:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <g_ovfNum+0x3>
    187a:	10 c0       	rjmp	.+32     	; 0x189c <TIMER_0_DELAY_MS+0x5c>
    187c:	2d eb       	ldi	r18, 0xBD	; 189
    187e:	37 e3       	ldi	r19, 0x37	; 55
    1880:	46 e0       	ldi	r20, 0x06	; 6
    1882:	5d e3       	ldi	r21, 0x3D	; 61
    1884:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <__divsf3>
    1888:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <ceil>
    188c:	60 93 68 01 	sts	0x0168, r22	; 0x800168 <g_ovfNum>
    1890:	70 93 69 01 	sts	0x0169, r23	; 0x800169 <g_ovfNum+0x1>
    1894:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <g_ovfNum+0x2>
    1898:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <g_ovfNum+0x3>
    189c:	0e 94 3b 0b 	call	0x1676	; 0x1676 <TIMER_0_init>
    18a0:	60 e0       	ldi	r22, 0x00	; 0
    18a2:	70 e0       	ldi	r23, 0x00	; 0
    18a4:	cb 01       	movw	r24, r22
    18a6:	0e 94 af 0b 	call	0x175e	; 0x175e <TIMER_0_setIntialValue>
    18aa:	0e 94 67 0b 	call	0x16ce	; 0x16ce <TIMER_0_start>
    18ae:	60 91 68 01 	lds	r22, 0x0168	; 0x800168 <g_ovfNum>
    18b2:	70 91 69 01 	lds	r23, 0x0169	; 0x800169 <g_ovfNum+0x1>
    18b6:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <g_ovfNum+0x2>
    18ba:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <g_ovfNum+0x3>
    18be:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <TIMER_0_OvfNum>
    18c2:	08 95       	ret

000018c4 <TIMER_0_pwm>:
    18c4:	cf 93       	push	r28
    18c6:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <ceil>
    18ca:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <__fixunssfsi>
    18ce:	c6 2f       	mov	r28, r22
    18d0:	0e 94 3b 0b 	call	0x1676	; 0x1676 <TIMER_0_init>
    18d4:	c2 bf       	out	0x32, r28	; 50
    18d6:	0e 94 67 0b 	call	0x16ce	; 0x16ce <TIMER_0_start>
    18da:	60 e0       	ldi	r22, 0x00	; 0
    18dc:	70 e0       	ldi	r23, 0x00	; 0
    18de:	80 e8       	ldi	r24, 0x80	; 128
    18e0:	9f e3       	ldi	r25, 0x3F	; 63
    18e2:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <TIMER_0_OvfNum>
    18e6:	13 be       	out	0x33, r1	; 51
    18e8:	12 be       	out	0x32, r1	; 50
    18ea:	88 b7       	in	r24, 0x38	; 56
    18ec:	81 60       	ori	r24, 0x01	; 1
    18ee:	88 bf       	out	0x38, r24	; 56
    18f0:	cf 91       	pop	r28
    18f2:	08 95       	ret

000018f4 <Timer1_Init>:
    18f4:	88 23       	and	r24, r24
    18f6:	19 f0       	breq	.+6      	; 0x18fe <Timer1_Init+0xa>
    18f8:	83 30       	cpi	r24, 0x03	; 3
    18fa:	71 f0       	breq	.+28     	; 0x1918 <Timer1_Init+0x24>
    18fc:	19 c0       	rjmp	.+50     	; 0x1930 <Timer1_Init+0x3c>
    18fe:	8f b5       	in	r24, 0x2f	; 47
    1900:	8e 7f       	andi	r24, 0xFE	; 254
    1902:	8f bd       	out	0x2f, r24	; 47
    1904:	8f b5       	in	r24, 0x2f	; 47
    1906:	8d 7f       	andi	r24, 0xFD	; 253
    1908:	8f bd       	out	0x2f, r24	; 47
    190a:	8e b5       	in	r24, 0x2e	; 46
    190c:	87 7f       	andi	r24, 0xF7	; 247
    190e:	8e bd       	out	0x2e, r24	; 46
    1910:	8e b5       	in	r24, 0x2e	; 46
    1912:	8f 7e       	andi	r24, 0xEF	; 239
    1914:	8e bd       	out	0x2e, r24	; 46
    1916:	0c c0       	rjmp	.+24     	; 0x1930 <Timer1_Init+0x3c>
    1918:	8f b5       	in	r24, 0x2f	; 47
    191a:	81 60       	ori	r24, 0x01	; 1
    191c:	8f bd       	out	0x2f, r24	; 47
    191e:	8f b5       	in	r24, 0x2f	; 47
    1920:	82 60       	ori	r24, 0x02	; 2
    1922:	8f bd       	out	0x2f, r24	; 47
    1924:	8e b5       	in	r24, 0x2e	; 46
    1926:	88 60       	ori	r24, 0x08	; 8
    1928:	8e bd       	out	0x2e, r24	; 46
    192a:	8e b5       	in	r24, 0x2e	; 46
    192c:	80 61       	ori	r24, 0x10	; 16
    192e:	8e bd       	out	0x2e, r24	; 46
    1930:	8e b5       	in	r24, 0x2e	; 46
    1932:	88 7f       	andi	r24, 0xF8	; 248
    1934:	8e bd       	out	0x2e, r24	; 46
    1936:	8e b5       	in	r24, 0x2e	; 46
    1938:	68 2b       	or	r22, r24
    193a:	6e bd       	out	0x2e, r22	; 46
    193c:	08 95       	ret

0000193e <Timer1_OVF_InterruptEnable>:
    193e:	89 b7       	in	r24, 0x39	; 57
    1940:	84 60       	ori	r24, 0x04	; 4
    1942:	89 bf       	out	0x39, r24	; 57
    1944:	08 95       	ret

00001946 <Timer1_OVF_SetCallBack>:
    1946:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <Timer1_OVF_Fptr+0x1>
    194a:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <Timer1_OVF_Fptr>
    194e:	08 95       	ret

00001950 <__vector_9>:
    1950:	1f 92       	push	r1
    1952:	0f 92       	push	r0
    1954:	0f b6       	in	r0, 0x3f	; 63
    1956:	0f 92       	push	r0
    1958:	11 24       	eor	r1, r1
    195a:	2f 93       	push	r18
    195c:	3f 93       	push	r19
    195e:	4f 93       	push	r20
    1960:	5f 93       	push	r21
    1962:	6f 93       	push	r22
    1964:	7f 93       	push	r23
    1966:	8f 93       	push	r24
    1968:	9f 93       	push	r25
    196a:	af 93       	push	r26
    196c:	bf 93       	push	r27
    196e:	ef 93       	push	r30
    1970:	ff 93       	push	r31
    1972:	e0 91 66 01 	lds	r30, 0x0166	; 0x800166 <Timer1_OVF_Fptr>
    1976:	f0 91 67 01 	lds	r31, 0x0167	; 0x800167 <Timer1_OVF_Fptr+0x1>
    197a:	30 97       	sbiw	r30, 0x00	; 0
    197c:	09 f0       	breq	.+2      	; 0x1980 <__vector_9+0x30>
    197e:	09 95       	icall
    1980:	ff 91       	pop	r31
    1982:	ef 91       	pop	r30
    1984:	bf 91       	pop	r27
    1986:	af 91       	pop	r26
    1988:	9f 91       	pop	r25
    198a:	8f 91       	pop	r24
    198c:	7f 91       	pop	r23
    198e:	6f 91       	pop	r22
    1990:	5f 91       	pop	r21
    1992:	4f 91       	pop	r20
    1994:	3f 91       	pop	r19
    1996:	2f 91       	pop	r18
    1998:	0f 90       	pop	r0
    199a:	0f be       	out	0x3f, r0	; 63
    199c:	0f 90       	pop	r0
    199e:	1f 90       	pop	r1
    19a0:	18 95       	reti

000019a2 <TIMER_2_init>:
    19a2:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <Timer_cfgArray+0x4>
    19a6:	81 30       	cpi	r24, 0x01	; 1
    19a8:	f1 f0       	breq	.+60     	; 0x19e6 <TIMER_2_init+0x44>
    19aa:	28 f0       	brcs	.+10     	; 0x19b6 <TIMER_2_init+0x14>
    19ac:	82 30       	cpi	r24, 0x02	; 2
    19ae:	99 f0       	breq	.+38     	; 0x19d6 <TIMER_2_init+0x34>
    19b0:	84 30       	cpi	r24, 0x04	; 4
    19b2:	49 f0       	breq	.+18     	; 0x19c6 <TIMER_2_init+0x24>
    19b4:	20 c0       	rjmp	.+64     	; 0x19f6 <TIMER_2_init+0x54>
    19b6:	85 b5       	in	r24, 0x25	; 37
    19b8:	8f 7b       	andi	r24, 0xBF	; 191
    19ba:	85 bd       	out	0x25, r24	; 37
    19bc:	85 b5       	in	r24, 0x25	; 37
    19be:	87 7f       	andi	r24, 0xF7	; 247
    19c0:	85 bd       	out	0x25, r24	; 37
    19c2:	84 e0       	ldi	r24, 0x04	; 4
    19c4:	08 95       	ret
    19c6:	85 b5       	in	r24, 0x25	; 37
    19c8:	80 64       	ori	r24, 0x40	; 64
    19ca:	85 bd       	out	0x25, r24	; 37
    19cc:	85 b5       	in	r24, 0x25	; 37
    19ce:	87 7f       	andi	r24, 0xF7	; 247
    19d0:	85 bd       	out	0x25, r24	; 37
    19d2:	84 e0       	ldi	r24, 0x04	; 4
    19d4:	08 95       	ret
    19d6:	85 b5       	in	r24, 0x25	; 37
    19d8:	8f 7b       	andi	r24, 0xBF	; 191
    19da:	85 bd       	out	0x25, r24	; 37
    19dc:	85 b5       	in	r24, 0x25	; 37
    19de:	88 60       	ori	r24, 0x08	; 8
    19e0:	85 bd       	out	0x25, r24	; 37
    19e2:	84 e0       	ldi	r24, 0x04	; 4
    19e4:	08 95       	ret
    19e6:	85 b5       	in	r24, 0x25	; 37
    19e8:	80 64       	ori	r24, 0x40	; 64
    19ea:	85 bd       	out	0x25, r24	; 37
    19ec:	85 b5       	in	r24, 0x25	; 37
    19ee:	88 60       	ori	r24, 0x08	; 8
    19f0:	85 bd       	out	0x25, r24	; 37
    19f2:	84 e0       	ldi	r24, 0x04	; 4
    19f4:	08 95       	ret
    19f6:	81 e0       	ldi	r24, 0x01	; 1
    19f8:	08 95       	ret

000019fa <TIMER_2_stop>:
    19fa:	85 b5       	in	r24, 0x25	; 37
    19fc:	8e 7f       	andi	r24, 0xFE	; 254
    19fe:	85 bd       	out	0x25, r24	; 37
    1a00:	85 b5       	in	r24, 0x25	; 37
    1a02:	8d 7f       	andi	r24, 0xFD	; 253
    1a04:	85 bd       	out	0x25, r24	; 37
    1a06:	85 b5       	in	r24, 0x25	; 37
    1a08:	8b 7f       	andi	r24, 0xFB	; 251
    1a0a:	85 bd       	out	0x25, r24	; 37
    1a0c:	08 95       	ret

00001a0e <TIMER_2_start>:
    1a0e:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <Timer_cfgArray+0x5>
    1a12:	8e 2f       	mov	r24, r30
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	88 30       	cpi	r24, 0x08	; 8
    1a18:	91 05       	cpc	r25, r1
    1a1a:	08 f0       	brcs	.+2      	; 0x1a1e <TIMER_2_start+0x10>
    1a1c:	52 c0       	rjmp	.+164    	; 0x1ac2 <TIMER_2_start+0xb4>
    1a1e:	fc 01       	movw	r30, r24
    1a20:	e6 5d       	subi	r30, 0xD6	; 214
    1a22:	ff 4f       	sbci	r31, 0xFF	; 255
    1a24:	0c 94 0d 10 	jmp	0x201a	; 0x201a <__tablejump2__>
    1a28:	85 b5       	in	r24, 0x25	; 37
    1a2a:	81 60       	ori	r24, 0x01	; 1
    1a2c:	85 bd       	out	0x25, r24	; 37
    1a2e:	85 b5       	in	r24, 0x25	; 37
    1a30:	8d 7f       	andi	r24, 0xFD	; 253
    1a32:	85 bd       	out	0x25, r24	; 37
    1a34:	85 b5       	in	r24, 0x25	; 37
    1a36:	8b 7f       	andi	r24, 0xFB	; 251
    1a38:	85 bd       	out	0x25, r24	; 37
    1a3a:	84 e0       	ldi	r24, 0x04	; 4
    1a3c:	08 95       	ret
    1a3e:	85 b5       	in	r24, 0x25	; 37
    1a40:	82 60       	ori	r24, 0x02	; 2
    1a42:	85 bd       	out	0x25, r24	; 37
    1a44:	85 b5       	in	r24, 0x25	; 37
    1a46:	8e 7f       	andi	r24, 0xFE	; 254
    1a48:	85 bd       	out	0x25, r24	; 37
    1a4a:	85 b5       	in	r24, 0x25	; 37
    1a4c:	8b 7f       	andi	r24, 0xFB	; 251
    1a4e:	85 bd       	out	0x25, r24	; 37
    1a50:	84 e0       	ldi	r24, 0x04	; 4
    1a52:	08 95       	ret
    1a54:	85 b5       	in	r24, 0x25	; 37
    1a56:	81 60       	ori	r24, 0x01	; 1
    1a58:	85 bd       	out	0x25, r24	; 37
    1a5a:	85 b5       	in	r24, 0x25	; 37
    1a5c:	82 60       	ori	r24, 0x02	; 2
    1a5e:	85 bd       	out	0x25, r24	; 37
    1a60:	85 b5       	in	r24, 0x25	; 37
    1a62:	8b 7f       	andi	r24, 0xFB	; 251
    1a64:	85 bd       	out	0x25, r24	; 37
    1a66:	84 e0       	ldi	r24, 0x04	; 4
    1a68:	08 95       	ret
    1a6a:	85 b5       	in	r24, 0x25	; 37
    1a6c:	84 60       	ori	r24, 0x04	; 4
    1a6e:	85 bd       	out	0x25, r24	; 37
    1a70:	85 b5       	in	r24, 0x25	; 37
    1a72:	8d 7f       	andi	r24, 0xFD	; 253
    1a74:	85 bd       	out	0x25, r24	; 37
    1a76:	85 b5       	in	r24, 0x25	; 37
    1a78:	8e 7f       	andi	r24, 0xFE	; 254
    1a7a:	85 bd       	out	0x25, r24	; 37
    1a7c:	84 e0       	ldi	r24, 0x04	; 4
    1a7e:	08 95       	ret
    1a80:	85 b5       	in	r24, 0x25	; 37
    1a82:	81 60       	ori	r24, 0x01	; 1
    1a84:	85 bd       	out	0x25, r24	; 37
    1a86:	85 b5       	in	r24, 0x25	; 37
    1a88:	8d 7f       	andi	r24, 0xFD	; 253
    1a8a:	85 bd       	out	0x25, r24	; 37
    1a8c:	85 b5       	in	r24, 0x25	; 37
    1a8e:	84 60       	ori	r24, 0x04	; 4
    1a90:	85 bd       	out	0x25, r24	; 37
    1a92:	84 e0       	ldi	r24, 0x04	; 4
    1a94:	08 95       	ret
    1a96:	85 b5       	in	r24, 0x25	; 37
    1a98:	84 60       	ori	r24, 0x04	; 4
    1a9a:	85 bd       	out	0x25, r24	; 37
    1a9c:	85 b5       	in	r24, 0x25	; 37
    1a9e:	8e 7f       	andi	r24, 0xFE	; 254
    1aa0:	85 bd       	out	0x25, r24	; 37
    1aa2:	85 b5       	in	r24, 0x25	; 37
    1aa4:	82 60       	ori	r24, 0x02	; 2
    1aa6:	85 bd       	out	0x25, r24	; 37
    1aa8:	84 e0       	ldi	r24, 0x04	; 4
    1aaa:	08 95       	ret
    1aac:	85 b5       	in	r24, 0x25	; 37
    1aae:	81 60       	ori	r24, 0x01	; 1
    1ab0:	85 bd       	out	0x25, r24	; 37
    1ab2:	85 b5       	in	r24, 0x25	; 37
    1ab4:	82 60       	ori	r24, 0x02	; 2
    1ab6:	85 bd       	out	0x25, r24	; 37
    1ab8:	85 b5       	in	r24, 0x25	; 37
    1aba:	84 60       	ori	r24, 0x04	; 4
    1abc:	85 bd       	out	0x25, r24	; 37
    1abe:	84 e0       	ldi	r24, 0x04	; 4
    1ac0:	08 95       	ret
    1ac2:	80 e0       	ldi	r24, 0x00	; 0
    1ac4:	08 95       	ret

00001ac6 <TIMER_2_INT>:




void TIMER_2_INT(){
	sei();
    1ac6:	78 94       	sei
	set_bit(TIMSK,TOIE2);
    1ac8:	89 b7       	in	r24, 0x39	; 57
    1aca:	80 64       	ori	r24, 0x40	; 64
    1acc:	89 bf       	out	0x39, r24	; 57
	TIMER_2_init();
    1ace:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <TIMER_2_init>
Timer_ErrorStatus TIMER_2_setIntialValue(uint8_t a_value){
	Timer_ErrorStatus errorStatus = TIMER_OK;

	if(a_value < TIMR2_MAX_VALUE && a_value >= 0){
		
		TCNT2 = a_value ;
    1ad2:	14 bc       	out	0x24, r1	; 36
void TIMER_2_INT(){
	sei();
	set_bit(TIMSK,TOIE2);
	TIMER_2_init();
	TIMER_2_setIntialValue(0);
	TIMER_2_start();
    1ad4:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <TIMER_2_start>
    1ad8:	08 95       	ret

00001ada <TIMER_2_SetCallBack>:

static void (*ptrf_TIMER_2)(void)=NULL;

void TIMER_2_SetCallBack(void(*ptrf)(void)){
	
	ptrf_TIMER_2 = ptrf;
    1ada:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <ptrf_TIMER_2+0x1>
    1ade:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <ptrf_TIMER_2>
    1ae2:	08 95       	ret

00001ae4 <__vector_5>:
	
}

ISR(TIMER2_OVF){
    1ae4:	1f 92       	push	r1
    1ae6:	0f 92       	push	r0
    1ae8:	0f b6       	in	r0, 0x3f	; 63
    1aea:	0f 92       	push	r0
    1aec:	11 24       	eor	r1, r1
    1aee:	2f 93       	push	r18
    1af0:	3f 93       	push	r19
    1af2:	4f 93       	push	r20
    1af4:	5f 93       	push	r21
    1af6:	6f 93       	push	r22
    1af8:	7f 93       	push	r23
    1afa:	8f 93       	push	r24
    1afc:	9f 93       	push	r25
    1afe:	af 93       	push	r26
    1b00:	bf 93       	push	r27
    1b02:	ef 93       	push	r30
    1b04:	ff 93       	push	r31
	
	
	ptrf_TIMER_2();
    1b06:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <ptrf_TIMER_2>
    1b0a:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <ptrf_TIMER_2+0x1>
    1b0e:	09 95       	icall
	
	
    1b10:	ff 91       	pop	r31
    1b12:	ef 91       	pop	r30
    1b14:	bf 91       	pop	r27
    1b16:	af 91       	pop	r26
    1b18:	9f 91       	pop	r25
    1b1a:	8f 91       	pop	r24
    1b1c:	7f 91       	pop	r23
    1b1e:	6f 91       	pop	r22
    1b20:	5f 91       	pop	r21
    1b22:	4f 91       	pop	r20
    1b24:	3f 91       	pop	r19
    1b26:	2f 91       	pop	r18
    1b28:	0f 90       	pop	r0
    1b2a:	0f be       	out	0x3f, r0	; 63
    1b2c:	0f 90       	pop	r0
    1b2e:	1f 90       	pop	r1
    1b30:	18 95       	reti

00001b32 <__subsf3>:
    1b32:	50 58       	subi	r21, 0x80	; 128

00001b34 <__addsf3>:
    1b34:	bb 27       	eor	r27, r27
    1b36:	aa 27       	eor	r26, r26
    1b38:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <__addsf3x>
    1b3c:	0c 94 27 0f 	jmp	0x1e4e	; 0x1e4e <__fp_round>
    1b40:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__fp_pscA>
    1b44:	38 f0       	brcs	.+14     	; 0x1b54 <__addsf3+0x20>
    1b46:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <__fp_pscB>
    1b4a:	20 f0       	brcs	.+8      	; 0x1b54 <__addsf3+0x20>
    1b4c:	39 f4       	brne	.+14     	; 0x1b5c <__addsf3+0x28>
    1b4e:	9f 3f       	cpi	r25, 0xFF	; 255
    1b50:	19 f4       	brne	.+6      	; 0x1b58 <__addsf3+0x24>
    1b52:	26 f4       	brtc	.+8      	; 0x1b5c <__addsf3+0x28>
    1b54:	0c 94 16 0f 	jmp	0x1e2c	; 0x1e2c <__fp_nan>
    1b58:	0e f4       	brtc	.+2      	; 0x1b5c <__addsf3+0x28>
    1b5a:	e0 95       	com	r30
    1b5c:	e7 fb       	bst	r30, 7
    1b5e:	0c 94 e7 0e 	jmp	0x1dce	; 0x1dce <__fp_inf>

00001b62 <__addsf3x>:
    1b62:	e9 2f       	mov	r30, r25
    1b64:	0e 94 38 0f 	call	0x1e70	; 0x1e70 <__fp_split3>
    1b68:	58 f3       	brcs	.-42     	; 0x1b40 <__addsf3+0xc>
    1b6a:	ba 17       	cp	r27, r26
    1b6c:	62 07       	cpc	r22, r18
    1b6e:	73 07       	cpc	r23, r19
    1b70:	84 07       	cpc	r24, r20
    1b72:	95 07       	cpc	r25, r21
    1b74:	20 f0       	brcs	.+8      	; 0x1b7e <__addsf3x+0x1c>
    1b76:	79 f4       	brne	.+30     	; 0x1b96 <__addsf3x+0x34>
    1b78:	a6 f5       	brtc	.+104    	; 0x1be2 <__addsf3x+0x80>
    1b7a:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__fp_zero>
    1b7e:	0e f4       	brtc	.+2      	; 0x1b82 <__addsf3x+0x20>
    1b80:	e0 95       	com	r30
    1b82:	0b 2e       	mov	r0, r27
    1b84:	ba 2f       	mov	r27, r26
    1b86:	a0 2d       	mov	r26, r0
    1b88:	0b 01       	movw	r0, r22
    1b8a:	b9 01       	movw	r22, r18
    1b8c:	90 01       	movw	r18, r0
    1b8e:	0c 01       	movw	r0, r24
    1b90:	ca 01       	movw	r24, r20
    1b92:	a0 01       	movw	r20, r0
    1b94:	11 24       	eor	r1, r1
    1b96:	ff 27       	eor	r31, r31
    1b98:	59 1b       	sub	r21, r25
    1b9a:	99 f0       	breq	.+38     	; 0x1bc2 <__addsf3x+0x60>
    1b9c:	59 3f       	cpi	r21, 0xF9	; 249
    1b9e:	50 f4       	brcc	.+20     	; 0x1bb4 <__addsf3x+0x52>
    1ba0:	50 3e       	cpi	r21, 0xE0	; 224
    1ba2:	68 f1       	brcs	.+90     	; 0x1bfe <__addsf3x+0x9c>
    1ba4:	1a 16       	cp	r1, r26
    1ba6:	f0 40       	sbci	r31, 0x00	; 0
    1ba8:	a2 2f       	mov	r26, r18
    1baa:	23 2f       	mov	r18, r19
    1bac:	34 2f       	mov	r19, r20
    1bae:	44 27       	eor	r20, r20
    1bb0:	58 5f       	subi	r21, 0xF8	; 248
    1bb2:	f3 cf       	rjmp	.-26     	; 0x1b9a <__addsf3x+0x38>
    1bb4:	46 95       	lsr	r20
    1bb6:	37 95       	ror	r19
    1bb8:	27 95       	ror	r18
    1bba:	a7 95       	ror	r26
    1bbc:	f0 40       	sbci	r31, 0x00	; 0
    1bbe:	53 95       	inc	r21
    1bc0:	c9 f7       	brne	.-14     	; 0x1bb4 <__addsf3x+0x52>
    1bc2:	7e f4       	brtc	.+30     	; 0x1be2 <__addsf3x+0x80>
    1bc4:	1f 16       	cp	r1, r31
    1bc6:	ba 0b       	sbc	r27, r26
    1bc8:	62 0b       	sbc	r22, r18
    1bca:	73 0b       	sbc	r23, r19
    1bcc:	84 0b       	sbc	r24, r20
    1bce:	ba f0       	brmi	.+46     	; 0x1bfe <__addsf3x+0x9c>
    1bd0:	91 50       	subi	r25, 0x01	; 1
    1bd2:	a1 f0       	breq	.+40     	; 0x1bfc <__addsf3x+0x9a>
    1bd4:	ff 0f       	add	r31, r31
    1bd6:	bb 1f       	adc	r27, r27
    1bd8:	66 1f       	adc	r22, r22
    1bda:	77 1f       	adc	r23, r23
    1bdc:	88 1f       	adc	r24, r24
    1bde:	c2 f7       	brpl	.-16     	; 0x1bd0 <__addsf3x+0x6e>
    1be0:	0e c0       	rjmp	.+28     	; 0x1bfe <__addsf3x+0x9c>
    1be2:	ba 0f       	add	r27, r26
    1be4:	62 1f       	adc	r22, r18
    1be6:	73 1f       	adc	r23, r19
    1be8:	84 1f       	adc	r24, r20
    1bea:	48 f4       	brcc	.+18     	; 0x1bfe <__addsf3x+0x9c>
    1bec:	87 95       	ror	r24
    1bee:	77 95       	ror	r23
    1bf0:	67 95       	ror	r22
    1bf2:	b7 95       	ror	r27
    1bf4:	f7 95       	ror	r31
    1bf6:	9e 3f       	cpi	r25, 0xFE	; 254
    1bf8:	08 f0       	brcs	.+2      	; 0x1bfc <__addsf3x+0x9a>
    1bfa:	b0 cf       	rjmp	.-160    	; 0x1b5c <__addsf3+0x28>
    1bfc:	93 95       	inc	r25
    1bfe:	88 0f       	add	r24, r24
    1c00:	08 f0       	brcs	.+2      	; 0x1c04 <__addsf3x+0xa2>
    1c02:	99 27       	eor	r25, r25
    1c04:	ee 0f       	add	r30, r30
    1c06:	97 95       	ror	r25
    1c08:	87 95       	ror	r24
    1c0a:	08 95       	ret

00001c0c <ceil>:
    1c0c:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <__fp_trunc>
    1c10:	90 f0       	brcs	.+36     	; 0x1c36 <ceil+0x2a>
    1c12:	9f 37       	cpi	r25, 0x7F	; 127
    1c14:	48 f4       	brcc	.+18     	; 0x1c28 <ceil+0x1c>
    1c16:	91 11       	cpse	r25, r1
    1c18:	16 f4       	brtc	.+4      	; 0x1c1e <ceil+0x12>
    1c1a:	0c 94 73 0f 	jmp	0x1ee6	; 0x1ee6 <__fp_szero>
    1c1e:	60 e0       	ldi	r22, 0x00	; 0
    1c20:	70 e0       	ldi	r23, 0x00	; 0
    1c22:	80 e8       	ldi	r24, 0x80	; 128
    1c24:	9f e3       	ldi	r25, 0x3F	; 63
    1c26:	08 95       	ret
    1c28:	26 f0       	brts	.+8      	; 0x1c32 <ceil+0x26>
    1c2a:	1b 16       	cp	r1, r27
    1c2c:	61 1d       	adc	r22, r1
    1c2e:	71 1d       	adc	r23, r1
    1c30:	81 1d       	adc	r24, r1
    1c32:	0c 94 ed 0e 	jmp	0x1dda	; 0x1dda <__fp_mintl>
    1c36:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__fp_mpack>

00001c3a <__cmpsf2>:
    1c3a:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <__fp_cmp>
    1c3e:	08 f4       	brcc	.+2      	; 0x1c42 <__cmpsf2+0x8>
    1c40:	81 e0       	ldi	r24, 0x01	; 1
    1c42:	08 95       	ret

00001c44 <__divsf3>:
    1c44:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <__divsf3x>
    1c48:	0c 94 27 0f 	jmp	0x1e4e	; 0x1e4e <__fp_round>
    1c4c:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <__fp_pscB>
    1c50:	58 f0       	brcs	.+22     	; 0x1c68 <__divsf3+0x24>
    1c52:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__fp_pscA>
    1c56:	40 f0       	brcs	.+16     	; 0x1c68 <__divsf3+0x24>
    1c58:	29 f4       	brne	.+10     	; 0x1c64 <__divsf3+0x20>
    1c5a:	5f 3f       	cpi	r21, 0xFF	; 255
    1c5c:	29 f0       	breq	.+10     	; 0x1c68 <__divsf3+0x24>
    1c5e:	0c 94 e7 0e 	jmp	0x1dce	; 0x1dce <__fp_inf>
    1c62:	51 11       	cpse	r21, r1
    1c64:	0c 94 73 0f 	jmp	0x1ee6	; 0x1ee6 <__fp_szero>
    1c68:	0c 94 16 0f 	jmp	0x1e2c	; 0x1e2c <__fp_nan>

00001c6c <__divsf3x>:
    1c6c:	0e 94 38 0f 	call	0x1e70	; 0x1e70 <__fp_split3>
    1c70:	68 f3       	brcs	.-38     	; 0x1c4c <__divsf3+0x8>

00001c72 <__divsf3_pse>:
    1c72:	99 23       	and	r25, r25
    1c74:	b1 f3       	breq	.-20     	; 0x1c62 <__divsf3+0x1e>
    1c76:	55 23       	and	r21, r21
    1c78:	91 f3       	breq	.-28     	; 0x1c5e <__divsf3+0x1a>
    1c7a:	95 1b       	sub	r25, r21
    1c7c:	55 0b       	sbc	r21, r21
    1c7e:	bb 27       	eor	r27, r27
    1c80:	aa 27       	eor	r26, r26
    1c82:	62 17       	cp	r22, r18
    1c84:	73 07       	cpc	r23, r19
    1c86:	84 07       	cpc	r24, r20
    1c88:	38 f0       	brcs	.+14     	; 0x1c98 <__divsf3_pse+0x26>
    1c8a:	9f 5f       	subi	r25, 0xFF	; 255
    1c8c:	5f 4f       	sbci	r21, 0xFF	; 255
    1c8e:	22 0f       	add	r18, r18
    1c90:	33 1f       	adc	r19, r19
    1c92:	44 1f       	adc	r20, r20
    1c94:	aa 1f       	adc	r26, r26
    1c96:	a9 f3       	breq	.-22     	; 0x1c82 <__divsf3_pse+0x10>
    1c98:	35 d0       	rcall	.+106    	; 0x1d04 <__divsf3_pse+0x92>
    1c9a:	0e 2e       	mov	r0, r30
    1c9c:	3a f0       	brmi	.+14     	; 0x1cac <__divsf3_pse+0x3a>
    1c9e:	e0 e8       	ldi	r30, 0x80	; 128
    1ca0:	32 d0       	rcall	.+100    	; 0x1d06 <__divsf3_pse+0x94>
    1ca2:	91 50       	subi	r25, 0x01	; 1
    1ca4:	50 40       	sbci	r21, 0x00	; 0
    1ca6:	e6 95       	lsr	r30
    1ca8:	00 1c       	adc	r0, r0
    1caa:	ca f7       	brpl	.-14     	; 0x1c9e <__divsf3_pse+0x2c>
    1cac:	2b d0       	rcall	.+86     	; 0x1d04 <__divsf3_pse+0x92>
    1cae:	fe 2f       	mov	r31, r30
    1cb0:	29 d0       	rcall	.+82     	; 0x1d04 <__divsf3_pse+0x92>
    1cb2:	66 0f       	add	r22, r22
    1cb4:	77 1f       	adc	r23, r23
    1cb6:	88 1f       	adc	r24, r24
    1cb8:	bb 1f       	adc	r27, r27
    1cba:	26 17       	cp	r18, r22
    1cbc:	37 07       	cpc	r19, r23
    1cbe:	48 07       	cpc	r20, r24
    1cc0:	ab 07       	cpc	r26, r27
    1cc2:	b0 e8       	ldi	r27, 0x80	; 128
    1cc4:	09 f0       	breq	.+2      	; 0x1cc8 <__divsf3_pse+0x56>
    1cc6:	bb 0b       	sbc	r27, r27
    1cc8:	80 2d       	mov	r24, r0
    1cca:	bf 01       	movw	r22, r30
    1ccc:	ff 27       	eor	r31, r31
    1cce:	93 58       	subi	r25, 0x83	; 131
    1cd0:	5f 4f       	sbci	r21, 0xFF	; 255
    1cd2:	3a f0       	brmi	.+14     	; 0x1ce2 <__divsf3_pse+0x70>
    1cd4:	9e 3f       	cpi	r25, 0xFE	; 254
    1cd6:	51 05       	cpc	r21, r1
    1cd8:	78 f0       	brcs	.+30     	; 0x1cf8 <__divsf3_pse+0x86>
    1cda:	0c 94 e7 0e 	jmp	0x1dce	; 0x1dce <__fp_inf>
    1cde:	0c 94 73 0f 	jmp	0x1ee6	; 0x1ee6 <__fp_szero>
    1ce2:	5f 3f       	cpi	r21, 0xFF	; 255
    1ce4:	e4 f3       	brlt	.-8      	; 0x1cde <__divsf3_pse+0x6c>
    1ce6:	98 3e       	cpi	r25, 0xE8	; 232
    1ce8:	d4 f3       	brlt	.-12     	; 0x1cde <__divsf3_pse+0x6c>
    1cea:	86 95       	lsr	r24
    1cec:	77 95       	ror	r23
    1cee:	67 95       	ror	r22
    1cf0:	b7 95       	ror	r27
    1cf2:	f7 95       	ror	r31
    1cf4:	9f 5f       	subi	r25, 0xFF	; 255
    1cf6:	c9 f7       	brne	.-14     	; 0x1cea <__divsf3_pse+0x78>
    1cf8:	88 0f       	add	r24, r24
    1cfa:	91 1d       	adc	r25, r1
    1cfc:	96 95       	lsr	r25
    1cfe:	87 95       	ror	r24
    1d00:	97 f9       	bld	r25, 7
    1d02:	08 95       	ret
    1d04:	e1 e0       	ldi	r30, 0x01	; 1
    1d06:	66 0f       	add	r22, r22
    1d08:	77 1f       	adc	r23, r23
    1d0a:	88 1f       	adc	r24, r24
    1d0c:	bb 1f       	adc	r27, r27
    1d0e:	62 17       	cp	r22, r18
    1d10:	73 07       	cpc	r23, r19
    1d12:	84 07       	cpc	r24, r20
    1d14:	ba 07       	cpc	r27, r26
    1d16:	20 f0       	brcs	.+8      	; 0x1d20 <__divsf3_pse+0xae>
    1d18:	62 1b       	sub	r22, r18
    1d1a:	73 0b       	sbc	r23, r19
    1d1c:	84 0b       	sbc	r24, r20
    1d1e:	ba 0b       	sbc	r27, r26
    1d20:	ee 1f       	adc	r30, r30
    1d22:	88 f7       	brcc	.-30     	; 0x1d06 <__divsf3_pse+0x94>
    1d24:	e0 95       	com	r30
    1d26:	08 95       	ret

00001d28 <__fixunssfsi>:
    1d28:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <__fp_splitA>
    1d2c:	88 f0       	brcs	.+34     	; 0x1d50 <__fixunssfsi+0x28>
    1d2e:	9f 57       	subi	r25, 0x7F	; 127
    1d30:	98 f0       	brcs	.+38     	; 0x1d58 <__fixunssfsi+0x30>
    1d32:	b9 2f       	mov	r27, r25
    1d34:	99 27       	eor	r25, r25
    1d36:	b7 51       	subi	r27, 0x17	; 23
    1d38:	b0 f0       	brcs	.+44     	; 0x1d66 <__fixunssfsi+0x3e>
    1d3a:	e1 f0       	breq	.+56     	; 0x1d74 <__fixunssfsi+0x4c>
    1d3c:	66 0f       	add	r22, r22
    1d3e:	77 1f       	adc	r23, r23
    1d40:	88 1f       	adc	r24, r24
    1d42:	99 1f       	adc	r25, r25
    1d44:	1a f0       	brmi	.+6      	; 0x1d4c <__fixunssfsi+0x24>
    1d46:	ba 95       	dec	r27
    1d48:	c9 f7       	brne	.-14     	; 0x1d3c <__fixunssfsi+0x14>
    1d4a:	14 c0       	rjmp	.+40     	; 0x1d74 <__fixunssfsi+0x4c>
    1d4c:	b1 30       	cpi	r27, 0x01	; 1
    1d4e:	91 f0       	breq	.+36     	; 0x1d74 <__fixunssfsi+0x4c>
    1d50:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <__fp_zero>
    1d54:	b1 e0       	ldi	r27, 0x01	; 1
    1d56:	08 95       	ret
    1d58:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__fp_zero>
    1d5c:	67 2f       	mov	r22, r23
    1d5e:	78 2f       	mov	r23, r24
    1d60:	88 27       	eor	r24, r24
    1d62:	b8 5f       	subi	r27, 0xF8	; 248
    1d64:	39 f0       	breq	.+14     	; 0x1d74 <__fixunssfsi+0x4c>
    1d66:	b9 3f       	cpi	r27, 0xF9	; 249
    1d68:	cc f3       	brlt	.-14     	; 0x1d5c <__fixunssfsi+0x34>
    1d6a:	86 95       	lsr	r24
    1d6c:	77 95       	ror	r23
    1d6e:	67 95       	ror	r22
    1d70:	b3 95       	inc	r27
    1d72:	d9 f7       	brne	.-10     	; 0x1d6a <__fixunssfsi+0x42>
    1d74:	3e f4       	brtc	.+14     	; 0x1d84 <__fixunssfsi+0x5c>
    1d76:	90 95       	com	r25
    1d78:	80 95       	com	r24
    1d7a:	70 95       	com	r23
    1d7c:	61 95       	neg	r22
    1d7e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d80:	8f 4f       	sbci	r24, 0xFF	; 255
    1d82:	9f 4f       	sbci	r25, 0xFF	; 255
    1d84:	08 95       	ret

00001d86 <__fp_cmp>:
    1d86:	99 0f       	add	r25, r25
    1d88:	00 08       	sbc	r0, r0
    1d8a:	55 0f       	add	r21, r21
    1d8c:	aa 0b       	sbc	r26, r26
    1d8e:	e0 e8       	ldi	r30, 0x80	; 128
    1d90:	fe ef       	ldi	r31, 0xFE	; 254
    1d92:	16 16       	cp	r1, r22
    1d94:	17 06       	cpc	r1, r23
    1d96:	e8 07       	cpc	r30, r24
    1d98:	f9 07       	cpc	r31, r25
    1d9a:	c0 f0       	brcs	.+48     	; 0x1dcc <__fp_cmp+0x46>
    1d9c:	12 16       	cp	r1, r18
    1d9e:	13 06       	cpc	r1, r19
    1da0:	e4 07       	cpc	r30, r20
    1da2:	f5 07       	cpc	r31, r21
    1da4:	98 f0       	brcs	.+38     	; 0x1dcc <__fp_cmp+0x46>
    1da6:	62 1b       	sub	r22, r18
    1da8:	73 0b       	sbc	r23, r19
    1daa:	84 0b       	sbc	r24, r20
    1dac:	95 0b       	sbc	r25, r21
    1dae:	39 f4       	brne	.+14     	; 0x1dbe <__fp_cmp+0x38>
    1db0:	0a 26       	eor	r0, r26
    1db2:	61 f0       	breq	.+24     	; 0x1dcc <__fp_cmp+0x46>
    1db4:	23 2b       	or	r18, r19
    1db6:	24 2b       	or	r18, r20
    1db8:	25 2b       	or	r18, r21
    1dba:	21 f4       	brne	.+8      	; 0x1dc4 <__fp_cmp+0x3e>
    1dbc:	08 95       	ret
    1dbe:	0a 26       	eor	r0, r26
    1dc0:	09 f4       	brne	.+2      	; 0x1dc4 <__fp_cmp+0x3e>
    1dc2:	a1 40       	sbci	r26, 0x01	; 1
    1dc4:	a6 95       	lsr	r26
    1dc6:	8f ef       	ldi	r24, 0xFF	; 255
    1dc8:	81 1d       	adc	r24, r1
    1dca:	81 1d       	adc	r24, r1
    1dcc:	08 95       	ret

00001dce <__fp_inf>:
    1dce:	97 f9       	bld	r25, 7
    1dd0:	9f 67       	ori	r25, 0x7F	; 127
    1dd2:	80 e8       	ldi	r24, 0x80	; 128
    1dd4:	70 e0       	ldi	r23, 0x00	; 0
    1dd6:	60 e0       	ldi	r22, 0x00	; 0
    1dd8:	08 95       	ret

00001dda <__fp_mintl>:
    1dda:	88 23       	and	r24, r24
    1ddc:	71 f4       	brne	.+28     	; 0x1dfa <__fp_mintl+0x20>
    1dde:	77 23       	and	r23, r23
    1de0:	21 f0       	breq	.+8      	; 0x1dea <__fp_mintl+0x10>
    1de2:	98 50       	subi	r25, 0x08	; 8
    1de4:	87 2b       	or	r24, r23
    1de6:	76 2f       	mov	r23, r22
    1de8:	07 c0       	rjmp	.+14     	; 0x1df8 <__fp_mintl+0x1e>
    1dea:	66 23       	and	r22, r22
    1dec:	11 f4       	brne	.+4      	; 0x1df2 <__fp_mintl+0x18>
    1dee:	99 27       	eor	r25, r25
    1df0:	0d c0       	rjmp	.+26     	; 0x1e0c <__fp_mintl+0x32>
    1df2:	90 51       	subi	r25, 0x10	; 16
    1df4:	86 2b       	or	r24, r22
    1df6:	70 e0       	ldi	r23, 0x00	; 0
    1df8:	60 e0       	ldi	r22, 0x00	; 0
    1dfa:	2a f0       	brmi	.+10     	; 0x1e06 <__fp_mintl+0x2c>
    1dfc:	9a 95       	dec	r25
    1dfe:	66 0f       	add	r22, r22
    1e00:	77 1f       	adc	r23, r23
    1e02:	88 1f       	adc	r24, r24
    1e04:	da f7       	brpl	.-10     	; 0x1dfc <__fp_mintl+0x22>
    1e06:	88 0f       	add	r24, r24
    1e08:	96 95       	lsr	r25
    1e0a:	87 95       	ror	r24
    1e0c:	97 f9       	bld	r25, 7
    1e0e:	08 95       	ret

00001e10 <__fp_mpack>:
    1e10:	9f 3f       	cpi	r25, 0xFF	; 255
    1e12:	31 f0       	breq	.+12     	; 0x1e20 <__fp_mpack_finite+0xc>

00001e14 <__fp_mpack_finite>:
    1e14:	91 50       	subi	r25, 0x01	; 1
    1e16:	20 f4       	brcc	.+8      	; 0x1e20 <__fp_mpack_finite+0xc>
    1e18:	87 95       	ror	r24
    1e1a:	77 95       	ror	r23
    1e1c:	67 95       	ror	r22
    1e1e:	b7 95       	ror	r27
    1e20:	88 0f       	add	r24, r24
    1e22:	91 1d       	adc	r25, r1
    1e24:	96 95       	lsr	r25
    1e26:	87 95       	ror	r24
    1e28:	97 f9       	bld	r25, 7
    1e2a:	08 95       	ret

00001e2c <__fp_nan>:
    1e2c:	9f ef       	ldi	r25, 0xFF	; 255
    1e2e:	80 ec       	ldi	r24, 0xC0	; 192
    1e30:	08 95       	ret

00001e32 <__fp_pscA>:
    1e32:	00 24       	eor	r0, r0
    1e34:	0a 94       	dec	r0
    1e36:	16 16       	cp	r1, r22
    1e38:	17 06       	cpc	r1, r23
    1e3a:	18 06       	cpc	r1, r24
    1e3c:	09 06       	cpc	r0, r25
    1e3e:	08 95       	ret

00001e40 <__fp_pscB>:
    1e40:	00 24       	eor	r0, r0
    1e42:	0a 94       	dec	r0
    1e44:	12 16       	cp	r1, r18
    1e46:	13 06       	cpc	r1, r19
    1e48:	14 06       	cpc	r1, r20
    1e4a:	05 06       	cpc	r0, r21
    1e4c:	08 95       	ret

00001e4e <__fp_round>:
    1e4e:	09 2e       	mov	r0, r25
    1e50:	03 94       	inc	r0
    1e52:	00 0c       	add	r0, r0
    1e54:	11 f4       	brne	.+4      	; 0x1e5a <__fp_round+0xc>
    1e56:	88 23       	and	r24, r24
    1e58:	52 f0       	brmi	.+20     	; 0x1e6e <__fp_round+0x20>
    1e5a:	bb 0f       	add	r27, r27
    1e5c:	40 f4       	brcc	.+16     	; 0x1e6e <__fp_round+0x20>
    1e5e:	bf 2b       	or	r27, r31
    1e60:	11 f4       	brne	.+4      	; 0x1e66 <__fp_round+0x18>
    1e62:	60 ff       	sbrs	r22, 0
    1e64:	04 c0       	rjmp	.+8      	; 0x1e6e <__fp_round+0x20>
    1e66:	6f 5f       	subi	r22, 0xFF	; 255
    1e68:	7f 4f       	sbci	r23, 0xFF	; 255
    1e6a:	8f 4f       	sbci	r24, 0xFF	; 255
    1e6c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e6e:	08 95       	ret

00001e70 <__fp_split3>:
    1e70:	57 fd       	sbrc	r21, 7
    1e72:	90 58       	subi	r25, 0x80	; 128
    1e74:	44 0f       	add	r20, r20
    1e76:	55 1f       	adc	r21, r21
    1e78:	59 f0       	breq	.+22     	; 0x1e90 <__fp_splitA+0x10>
    1e7a:	5f 3f       	cpi	r21, 0xFF	; 255
    1e7c:	71 f0       	breq	.+28     	; 0x1e9a <__fp_splitA+0x1a>
    1e7e:	47 95       	ror	r20

00001e80 <__fp_splitA>:
    1e80:	88 0f       	add	r24, r24
    1e82:	97 fb       	bst	r25, 7
    1e84:	99 1f       	adc	r25, r25
    1e86:	61 f0       	breq	.+24     	; 0x1ea0 <__fp_splitA+0x20>
    1e88:	9f 3f       	cpi	r25, 0xFF	; 255
    1e8a:	79 f0       	breq	.+30     	; 0x1eaa <__fp_splitA+0x2a>
    1e8c:	87 95       	ror	r24
    1e8e:	08 95       	ret
    1e90:	12 16       	cp	r1, r18
    1e92:	13 06       	cpc	r1, r19
    1e94:	14 06       	cpc	r1, r20
    1e96:	55 1f       	adc	r21, r21
    1e98:	f2 cf       	rjmp	.-28     	; 0x1e7e <__fp_split3+0xe>
    1e9a:	46 95       	lsr	r20
    1e9c:	f1 df       	rcall	.-30     	; 0x1e80 <__fp_splitA>
    1e9e:	08 c0       	rjmp	.+16     	; 0x1eb0 <__fp_splitA+0x30>
    1ea0:	16 16       	cp	r1, r22
    1ea2:	17 06       	cpc	r1, r23
    1ea4:	18 06       	cpc	r1, r24
    1ea6:	99 1f       	adc	r25, r25
    1ea8:	f1 cf       	rjmp	.-30     	; 0x1e8c <__fp_splitA+0xc>
    1eaa:	86 95       	lsr	r24
    1eac:	71 05       	cpc	r23, r1
    1eae:	61 05       	cpc	r22, r1
    1eb0:	08 94       	sec
    1eb2:	08 95       	ret

00001eb4 <__fp_trunc>:
    1eb4:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <__fp_splitA>
    1eb8:	a0 f0       	brcs	.+40     	; 0x1ee2 <__fp_trunc+0x2e>
    1eba:	be e7       	ldi	r27, 0x7E	; 126
    1ebc:	b9 17       	cp	r27, r25
    1ebe:	88 f4       	brcc	.+34     	; 0x1ee2 <__fp_trunc+0x2e>
    1ec0:	bb 27       	eor	r27, r27
    1ec2:	9f 38       	cpi	r25, 0x8F	; 143
    1ec4:	60 f4       	brcc	.+24     	; 0x1ede <__fp_trunc+0x2a>
    1ec6:	16 16       	cp	r1, r22
    1ec8:	b1 1d       	adc	r27, r1
    1eca:	67 2f       	mov	r22, r23
    1ecc:	78 2f       	mov	r23, r24
    1ece:	88 27       	eor	r24, r24
    1ed0:	98 5f       	subi	r25, 0xF8	; 248
    1ed2:	f7 cf       	rjmp	.-18     	; 0x1ec2 <__fp_trunc+0xe>
    1ed4:	86 95       	lsr	r24
    1ed6:	77 95       	ror	r23
    1ed8:	67 95       	ror	r22
    1eda:	b1 1d       	adc	r27, r1
    1edc:	93 95       	inc	r25
    1ede:	96 39       	cpi	r25, 0x96	; 150
    1ee0:	c8 f3       	brcs	.-14     	; 0x1ed4 <__fp_trunc+0x20>
    1ee2:	08 95       	ret

00001ee4 <__fp_zero>:
    1ee4:	e8 94       	clt

00001ee6 <__fp_szero>:
    1ee6:	bb 27       	eor	r27, r27
    1ee8:	66 27       	eor	r22, r22
    1eea:	77 27       	eor	r23, r23
    1eec:	cb 01       	movw	r24, r22
    1eee:	97 f9       	bld	r25, 7
    1ef0:	08 95       	ret

00001ef2 <__gesf2>:
    1ef2:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <__fp_cmp>
    1ef6:	08 f4       	brcc	.+2      	; 0x1efa <__gesf2+0x8>
    1ef8:	8f ef       	ldi	r24, 0xFF	; 255
    1efa:	08 95       	ret

00001efc <__mulsf3>:
    1efc:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <__mulsf3x>
    1f00:	0c 94 27 0f 	jmp	0x1e4e	; 0x1e4e <__fp_round>
    1f04:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__fp_pscA>
    1f08:	38 f0       	brcs	.+14     	; 0x1f18 <__mulsf3+0x1c>
    1f0a:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <__fp_pscB>
    1f0e:	20 f0       	brcs	.+8      	; 0x1f18 <__mulsf3+0x1c>
    1f10:	95 23       	and	r25, r21
    1f12:	11 f0       	breq	.+4      	; 0x1f18 <__mulsf3+0x1c>
    1f14:	0c 94 e7 0e 	jmp	0x1dce	; 0x1dce <__fp_inf>
    1f18:	0c 94 16 0f 	jmp	0x1e2c	; 0x1e2c <__fp_nan>
    1f1c:	11 24       	eor	r1, r1
    1f1e:	0c 94 73 0f 	jmp	0x1ee6	; 0x1ee6 <__fp_szero>

00001f22 <__mulsf3x>:
    1f22:	0e 94 38 0f 	call	0x1e70	; 0x1e70 <__fp_split3>
    1f26:	70 f3       	brcs	.-36     	; 0x1f04 <__mulsf3+0x8>

00001f28 <__mulsf3_pse>:
    1f28:	95 9f       	mul	r25, r21
    1f2a:	c1 f3       	breq	.-16     	; 0x1f1c <__mulsf3+0x20>
    1f2c:	95 0f       	add	r25, r21
    1f2e:	50 e0       	ldi	r21, 0x00	; 0
    1f30:	55 1f       	adc	r21, r21
    1f32:	62 9f       	mul	r22, r18
    1f34:	f0 01       	movw	r30, r0
    1f36:	72 9f       	mul	r23, r18
    1f38:	bb 27       	eor	r27, r27
    1f3a:	f0 0d       	add	r31, r0
    1f3c:	b1 1d       	adc	r27, r1
    1f3e:	63 9f       	mul	r22, r19
    1f40:	aa 27       	eor	r26, r26
    1f42:	f0 0d       	add	r31, r0
    1f44:	b1 1d       	adc	r27, r1
    1f46:	aa 1f       	adc	r26, r26
    1f48:	64 9f       	mul	r22, r20
    1f4a:	66 27       	eor	r22, r22
    1f4c:	b0 0d       	add	r27, r0
    1f4e:	a1 1d       	adc	r26, r1
    1f50:	66 1f       	adc	r22, r22
    1f52:	82 9f       	mul	r24, r18
    1f54:	22 27       	eor	r18, r18
    1f56:	b0 0d       	add	r27, r0
    1f58:	a1 1d       	adc	r26, r1
    1f5a:	62 1f       	adc	r22, r18
    1f5c:	73 9f       	mul	r23, r19
    1f5e:	b0 0d       	add	r27, r0
    1f60:	a1 1d       	adc	r26, r1
    1f62:	62 1f       	adc	r22, r18
    1f64:	83 9f       	mul	r24, r19
    1f66:	a0 0d       	add	r26, r0
    1f68:	61 1d       	adc	r22, r1
    1f6a:	22 1f       	adc	r18, r18
    1f6c:	74 9f       	mul	r23, r20
    1f6e:	33 27       	eor	r19, r19
    1f70:	a0 0d       	add	r26, r0
    1f72:	61 1d       	adc	r22, r1
    1f74:	23 1f       	adc	r18, r19
    1f76:	84 9f       	mul	r24, r20
    1f78:	60 0d       	add	r22, r0
    1f7a:	21 1d       	adc	r18, r1
    1f7c:	82 2f       	mov	r24, r18
    1f7e:	76 2f       	mov	r23, r22
    1f80:	6a 2f       	mov	r22, r26
    1f82:	11 24       	eor	r1, r1
    1f84:	9f 57       	subi	r25, 0x7F	; 127
    1f86:	50 40       	sbci	r21, 0x00	; 0
    1f88:	9a f0       	brmi	.+38     	; 0x1fb0 <__mulsf3_pse+0x88>
    1f8a:	f1 f0       	breq	.+60     	; 0x1fc8 <__mulsf3_pse+0xa0>
    1f8c:	88 23       	and	r24, r24
    1f8e:	4a f0       	brmi	.+18     	; 0x1fa2 <__mulsf3_pse+0x7a>
    1f90:	ee 0f       	add	r30, r30
    1f92:	ff 1f       	adc	r31, r31
    1f94:	bb 1f       	adc	r27, r27
    1f96:	66 1f       	adc	r22, r22
    1f98:	77 1f       	adc	r23, r23
    1f9a:	88 1f       	adc	r24, r24
    1f9c:	91 50       	subi	r25, 0x01	; 1
    1f9e:	50 40       	sbci	r21, 0x00	; 0
    1fa0:	a9 f7       	brne	.-22     	; 0x1f8c <__mulsf3_pse+0x64>
    1fa2:	9e 3f       	cpi	r25, 0xFE	; 254
    1fa4:	51 05       	cpc	r21, r1
    1fa6:	80 f0       	brcs	.+32     	; 0x1fc8 <__mulsf3_pse+0xa0>
    1fa8:	0c 94 e7 0e 	jmp	0x1dce	; 0x1dce <__fp_inf>
    1fac:	0c 94 73 0f 	jmp	0x1ee6	; 0x1ee6 <__fp_szero>
    1fb0:	5f 3f       	cpi	r21, 0xFF	; 255
    1fb2:	e4 f3       	brlt	.-8      	; 0x1fac <__mulsf3_pse+0x84>
    1fb4:	98 3e       	cpi	r25, 0xE8	; 232
    1fb6:	d4 f3       	brlt	.-12     	; 0x1fac <__mulsf3_pse+0x84>
    1fb8:	86 95       	lsr	r24
    1fba:	77 95       	ror	r23
    1fbc:	67 95       	ror	r22
    1fbe:	b7 95       	ror	r27
    1fc0:	f7 95       	ror	r31
    1fc2:	e7 95       	ror	r30
    1fc4:	9f 5f       	subi	r25, 0xFF	; 255
    1fc6:	c1 f7       	brne	.-16     	; 0x1fb8 <__mulsf3_pse+0x90>
    1fc8:	fe 2b       	or	r31, r30
    1fca:	88 0f       	add	r24, r24
    1fcc:	91 1d       	adc	r25, r1
    1fce:	96 95       	lsr	r25
    1fd0:	87 95       	ror	r24
    1fd2:	97 f9       	bld	r25, 7
    1fd4:	08 95       	ret

00001fd6 <__udivmodsi4>:
    1fd6:	a1 e2       	ldi	r26, 0x21	; 33
    1fd8:	1a 2e       	mov	r1, r26
    1fda:	aa 1b       	sub	r26, r26
    1fdc:	bb 1b       	sub	r27, r27
    1fde:	fd 01       	movw	r30, r26
    1fe0:	0d c0       	rjmp	.+26     	; 0x1ffc <__udivmodsi4_ep>

00001fe2 <__udivmodsi4_loop>:
    1fe2:	aa 1f       	adc	r26, r26
    1fe4:	bb 1f       	adc	r27, r27
    1fe6:	ee 1f       	adc	r30, r30
    1fe8:	ff 1f       	adc	r31, r31
    1fea:	a2 17       	cp	r26, r18
    1fec:	b3 07       	cpc	r27, r19
    1fee:	e4 07       	cpc	r30, r20
    1ff0:	f5 07       	cpc	r31, r21
    1ff2:	20 f0       	brcs	.+8      	; 0x1ffc <__udivmodsi4_ep>
    1ff4:	a2 1b       	sub	r26, r18
    1ff6:	b3 0b       	sbc	r27, r19
    1ff8:	e4 0b       	sbc	r30, r20
    1ffa:	f5 0b       	sbc	r31, r21

00001ffc <__udivmodsi4_ep>:
    1ffc:	66 1f       	adc	r22, r22
    1ffe:	77 1f       	adc	r23, r23
    2000:	88 1f       	adc	r24, r24
    2002:	99 1f       	adc	r25, r25
    2004:	1a 94       	dec	r1
    2006:	69 f7       	brne	.-38     	; 0x1fe2 <__udivmodsi4_loop>
    2008:	60 95       	com	r22
    200a:	70 95       	com	r23
    200c:	80 95       	com	r24
    200e:	90 95       	com	r25
    2010:	9b 01       	movw	r18, r22
    2012:	ac 01       	movw	r20, r24
    2014:	bd 01       	movw	r22, r26
    2016:	cf 01       	movw	r24, r30
    2018:	08 95       	ret

0000201a <__tablejump2__>:
    201a:	ee 0f       	add	r30, r30
    201c:	ff 1f       	adc	r31, r31
    201e:	05 90       	lpm	r0, Z+
    2020:	f4 91       	lpm	r31, Z
    2022:	e0 2d       	mov	r30, r0
    2024:	09 94       	ijmp

00002026 <_exit>:
    2026:	f8 94       	cli

00002028 <__stop_program>:
    2028:	ff cf       	rjmp	.-2      	; 0x2028 <__stop_program>
